{"version":3,"file":"static/js/main.d8dbd613.js","mappings":"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AAU,2BACViJ,QAAS,6CACTC,QAAS,iCACTC,UAAW,wCACXC,OAAQ,2BACRC,SAAU,+CAEZR,QAAS,CACPE,iBAAkB,6FAClBC,sBAAuB,8GAEzBM,MAAO,CACLxJ,MAAO,kCAETyJ,KAAM,CACJC,UAAW,CACTC,aAAc,CACZC,cACE,miGACFC,YACE,67CACFC,SACE,mxEACFC,UACE,s/EACFC,SACE,kkCACFC,WACE,8uBACFC,gBACE,usCACFC,YACE,w9CACFC,SACE,s6GAEJC,eAAgB,CACdT,cACE,miGACFC,YACE,67CACFC,SACE,mxEACFC,UACE,s/EACFC,SACE,kkCACFC,WACE,+uBACFC,gBACE,usCACFC,YACE,w9CACFG,WACE,y5GAEJC,cAAe,CACbC,aAAc,2DACdC,SACE,2/BACFC,mBAAoB,0DACpBC,aACE,25BACFC,cAAe,8CACfC,kBACE,yxCACFC,oBACE,40CACFC,SAAU,uCACVC,aACE,8oCACFC,QAAS,0DACTC,YACE,+TAEJC,UAAW,yDACXC,QAAS,6CACTC,KAAM,0DACNC,MAAO,0DACPC,KAAM,iEACNC,OAAQ,gEACRC,YAAa,yDACbC,QAAS,gEACTC,YAAa,qEACbC,KAAM,2DAERC,MAAO,kCACPtB,cAAe,0FACfuB,QAAS,gEACTC,UAAW,uEACXC,WAAY,0DACZC,UAAW,sEACXC,UAAW,gEACXC,SAAU,8CACV7E,IAAK,qBACL8E,MAAO,eACPC,MAAO,iCACPX,QAAS,uCACTY,UAAW,iEACXC,QAAS,qDACTC,sBAAuB,wJACvBC,qBAAsB,8GACtBC,oBAAqB,0HACrBC,QAAS,yCACTE,UAAW,oDACXC,qBAAsB,+HACtBC,oBAAqB,wJACrBC,eAAgB,kHAChBC,eAAgB,gGAChBL,UAAW,2BACXM,KAAM,qBACNC,OAAQ,uCACRpE,QAAS,oDACToC,UAAW,yDACXiC,cAAe,gGACfC,gBAAiB,iHACjBC,SAAU,2DACVC,WAAY,iHACZC,YAAa,gGACbC,cAAe,2GACfC,YAAa,sEACbC,gBACE,22SACFC,UAAW,gEACXC,kBACE,qvaACFC,YAAa,CACXC,MACE,+zEA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","sources":["App.tsx","index.js","src/components/Header.jsx","src/components/Icon.jsx","src/components/Modal.jsx","src/components/Radio.jsx","src/components/Text.jsx","src/config/config.base.ts","src/config/config.dev.ts","src/config/config.prod.ts","src/config/index.ts","src/constants/Constants.js","src/constants/useStore.js","src/i18n/en.ts","src/i18n/fa.ts","src/i18n/i18n.ts","src/i18n/index.ts","src/i18n/translate.ts","src/navigation/AppNavigator.tsx","src/navigation/BottomNavigator.tsx","src/navigation/index.jsx","src/navigation/navigationUtilities.ts","src/navigation/navigationWrapper.jsx","src/screen/Game/GameNightPlay.jsx","src/screen/Game/GamePlay.jsx","src/screen/Game/InsideGame.jsx","src/screen/Game/PlayerDetail.jsx","src/screen/Game/Sitout.jsx","src/screen/Game/showCards.jsx","src/screen/Home/HomeScreen.jsx","src/screen/Home/MainScreen.jsx","src/screen/Players/AllPlayers.jsx","src/screen/Players/PlayerListScreen.jsx","src/screen/Players/PlayerRow.jsx","src/screen/Players/playersScreen.jsx","src/screen/Roles/JackRolesScreen.jsx","src/screen/Roles/NustraRolesScreen.jsx","src/screen/Roles/RoleUpScreen.jsx","src/screen/Roles/RolesScreen.jsx","src/screen/Rules/CardItem.jsx","src/screen/Rules/LearningScreen.jsx","src/screen/Rules/cards/JackCards.jsx","src/screen/Rules/cards/NustraCards.jsx","src/screen/Rules/cards/RoleLearning.jsx","src/screen/Rules/gameRules/GameRules.jsx","src/screen/Rules/gameRules/JackRules.jsx","src/screen/Rules/gameRules/NustraRules.jsx","src/screen/Rules/lastmove/LastMoves.jsx","src/screen/Rules/lastmove/jackLastMoves.jsx","src/screen/Rules/lastmove/nustraLastMoves.jsx","src/screen/Settings/SettingScreen.jsx","src/screen/Splash/AnimatedSplash.tsx","src/stores/gameStore.js","src/stores/index.js","src/stores/langStore.js","src/stores/playerStore.js","src/stores/roleStore.js","src/stores/themeStore.js","src/theme/colors.ts","src/theme/index.ts","src/theme/spacing.ts","src/utils/ignoreWarnings.ts","src/utils/snackbar.js","src/utils/storage/index.ts","src/utils/storage/storage.ts","src/utils/useIsMounted.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["/* eslint-disable import/first */\n/**\n * Welcome to the main entry point of the app. In this file, we'll\n * be kicking off our app.\n *\n * Most of this file is boilerplate and you shouldn't need to modify\n * it very often. But take some time to look through and understand\n * what is going on here.\n *\n * The app navigation resides in ./app/navigators, so head over there\n * if you're interested in adding screens and navigators.\n */\n// if (__DEV__) {\n//   // Load Reactotron configuration in development. We don't want to\n//   // include this in our production bundle, so we are using `if (__DEV__)`\n//   // to only execute this in development.\n//   require('./devtools/ReactotronConfig.ts');\n// }\nimport './src/i18n';\nimport './src/utils/ignoreWarnings';\nimport React, {useEffect, useState} from 'react';\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\nimport {AppNavigator, useNavigationPersistence} from './src/navigation';\n\nimport * as storage from './src/utils/storage';\nimport {changeLang} from './src/i18n';\nimport {DarkTheme, DefaultTheme, ThemeProvider} from '@react-navigation/native';\nimport {AnimatedBootSplash} from './src/screen/Splash/AnimatedSplash';\nimport I18n from 'i18n-js';\nimport {useStore} from './src/constants/useStore';\nimport {setColorMode} from './src/theme';\nimport {ToastProvider} from 'react-native-toast-notifications';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {DWidth} from './src/constants/Constants';\nimport {useWindowDimensions} from 'react-native';\nimport {BottomSheetModalProvider} from '@gorhom/bottom-sheet';\nimport {Appearance} from 'react-native';\nexport const NAVIGATION_PERSISTENCE_KEY = 'NAVIGATION_STATE';\n\nconst config = {\n  screens: {\n    main: 'main',\n  },\n};\n\ninterface AppProps {\n  hideSplashScreen: () => Promise<void>;\n}\n\n/**\n * This is the root component of our app.\n */\nfunction App(props: AppProps) {\n  const {langStore, themeStore, roleStore, gameStore} = useStore();\n  const [isLoading, setLoading] = useState(true);\n  const _width = useWindowDimensions().width;\n  const {initialNavigationState, onNavigationStateChange} =\n    useNavigationPersistence(storage, NAVIGATION_PERSISTENCE_KEY);\n\n  useEffect(() => {\n    simulateTasks().then(() => {\n      setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n    });\n  }, []);\n\n  const simulateTasks = async () => {\n    // Simulate fetching data or any other background tasks\n\n    await new Promise(resolve =>\n      storage.load('theme').then(res => {\n        console.log({resOftheme: res});\n        if (res) {\n          themeStore.setTheme(res === 'dark' ? true : false);\n          setColorMode(res === 'dark' ? true : false);\n          resolve(res);\n        } else {\n          console.log({baadazkhalibudanres: 'umad tu else'});\n          storage.save('theme', 'light');\n          themeStore.setTheme(false);\n          setColorMode(false);\n          resolve(res);\n        }\n      }),\n    );\n    // Update progress\n\n    // Simulate additional tasks\n    await new Promise(resolve =>\n      storage.load('language').then(res => {\n        if (res) {\n          I18n.locale = res as string;\n          changeLang(res as string);\n          langStore.changeLanguage(res === 'en-IR' ? 'fa' : 'en');\n          resolve(res);\n        } else {\n          I18n.locale = 'en-IR';\n          changeLang('en-IR');\n          langStore.changeLanguage('fa');\n          storage.save('language', 'en-IR');\n          resolve(res);\n        }\n        roleStore.resetRoles();\n        gameStore.resetLastMoves();\n      }),\n    );\n    // Update progress\n  };\n  // Before we show the app, we have to wait for our state to be ready.\n  // In the meantime, don't render anything. This will be the background\n  // color set in native by rootView's background color.\n  // In iOS: application:didFinishLaunchingWithOptions:\n  // In Android: https://stackoverflow.com/a/45838109/204044\n  // You can replace with your own loading component if you wish.\n\n  const linking = {\n    config,\n  };\n\n  // otherwise, we're ready to render the app\n  return (\n    <GestureHandlerRootView\n      style={{\n        // width: _width / 2,\n        flex: 1,\n        justifyContent: 'center',\n        // marginLeft: DWidth * 0.25,\n      }}>\n      <SafeAreaProvider>\n        <BottomSheetModalProvider>\n          {isLoading ? (\n            <AnimatedBootSplash\n              // timing={5000}\n              onAnimationEnd={() => {\n                // setVisible(false);\n              }}\n            />\n          ) : (\n            <ToastProvider>\n              <AppNavigator />\n            </ToastProvider>\n          )}\n        </BottomSheetModalProvider>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nexport default App;\n","import 'react-native-gesture-handler';\nimport { enableExperimentalWebImplementation } from 'react-native-gesture-handler';\n\nenableExperimentalWebImplementation(true);\nimport {registerRootComponent} from 'expo';\n// import {AppRegistry} from 'react-native';\n// import {name as appName} from './app.json';\nimport App from './App';\n// import {gestureHandlerRootHOC} from 'react-native-gesture-handler';\n\n// AppRegistry.registerComponent(appName, () => gestureHandlerRootHOC(App));\n\nregisterRootComponent(App);","import React from 'react';\nimport {Platform, Pressable, View, useColorScheme} from 'react-native';\nimport Text from './Text';\nimport {colors, spacing} from '../theme';\nimport {observer} from 'mobx-react';\nimport {useStore} from '../constants/useStore';\nimport {Icon} from './Icon';\n\nconst Header = observer(({title, backPress}) => {\n  const {\n    themeStore: {isDark},\n    langStore: {language},\n  } = useStore();\n  const colorScheme = useColorScheme() === 'dark';\n  // useEffect(() => {\n  //   // console.log({colorScheme});\n  // }, [colorScheme]);\n  return (\n    <View\n      style={{\n        flexDirection: 'row-reverse',\n        height: 60,\n        backgroundColor: colorScheme ? colors.background : colors.background,\n        marginTop: Platform.OS === 'ios' ? 40 : 20,\n        marginBottom: 15,\n        width: '100%',\n        justifyContent: !backPress ? 'center' : 'space-between',\n        paddingHorizontal: 15,\n        alignItems: 'center',\n      }}>\n      <View\n        style={{\n          width: '80%',\n          justifyContent: 'center',\n          height: language === 'fa' ? '80%' : '100%',\n          alignSelf: language === 'fa' ? 'flex-end' : 'center',\n        }}>\n        <Text\n          style={{\n            fontSize: spacing.xl,\n            color: colors.text,\n          }}>\n          {'  '}\n          {title}\n          {'  '}\n        </Text>\n      </View>\n      {backPress && (\n        <View\n          style={{\n            width: '20%',\n            height: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <Pressable\n            style={{\n              width: '100%',\n              height: '100%',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            onPress={backPress}>\n            <Icon\n              name={\n                language === 'fa'\n                  ? 'chevron-left'\n                  : Platform.OS !== 'web'\n                  ? 'chevron-right'\n                  : 'chevron-left'\n              }\n              size={25}\n              color={colors.text}\n            />\n          </Pressable>\n        </View>\n      )}\n    </View>\n  );\n});\n\nexport default Header;\n","import React from 'react';\nimport I from 'react-native-vector-icons/FontAwesome';\nimport ExpoI from '@expo/vector-icons/FontAwesome';\nimport {Platform} from 'react-native';\nexport const Icon = ({name, size, color, style}) => {\n  if (Platform.OS !== 'web') {\n    return (\n      <I\n        name={name}\n        size={size || 16}\n        color={color || 'black'}\n        style={style || []}\n      />\n    );\n  } else {\n    return (\n      <ExpoI\n        name={name}\n        size={size || 16}\n        color={color || 'black'}\n        style={style || []}\n      />\n    );\n  }\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  BottomSheetBackdrop,\n  BottomSheetModal,\n  BottomSheetModalProvider,\n  BottomSheetView,\n} from '@gorhom/bottom-sheet';\nimport React, {useCallback} from 'react';\nimport {Platform, Pressable, StyleSheet, View} from 'react-native';\nimport {Icon} from './Icon';\nimport {DWidth} from '../constants/Constants';\n\nconst Modal = ({\n  modalRef,\n  onDismiss,\n  snapPoints,\n  onChange,\n  children,\n  onBackdropPress,\n  index = 0,\n  disappearsOnIndex = -1,\n  appearsOnIndex = 0,\n  vertical,\n  backgroundStyle = {},\n}) => {\n  const renderBackdrop = useCallback(\n    props => (\n      <View>\n        <BottomSheetBackdrop\n          onPress={() => {\n            console.log('back drop call');\n            // console.log('back drop ');\n          }}\n          {...props}\n          disappearsOnIndex={disappearsOnIndex}\n          appearsOnIndex={appearsOnIndex}\n          opacity={0.5}\n          pressBehavior={'close'}\n          animatedIndex={{value: 0}}\n        />\n      </View>\n    ),\n    [],\n  );\n  return (\n    <BottomSheetModal\n      enablePanDownToClose\n      ref={modalRef}\n      index={index}\n      backdropComponent={renderBackdrop}\n      keyboardBehavior=\"extend\"\n      keyboardBlurBehavior=\"restore\"\n      stackBehavior=\"replace\"\n      // android_keyboardInputMode='adjustPan'\n      onDismiss={onDismiss}\n      style={styles.shadow}\n      handleStyle={styles.handle}\n      snapPoints={snapPoints}\n      onChange={onChange}\n      backgroundStyle={[\n        {\n          width: '100%',\n        },\n        backgroundStyle,\n      ]}>\n      <BottomSheetView\n        style={[styles.contentContainer, {paddingVertical: vertical || 0}]}>\n        {Platform.OS === 'web' && (\n          <Pressable\n            style={{\n              alignSelf: 'flex-end',\n              width: 50,\n              height: 50,\n              borderRadius: 25,\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n            onPress={() => modalRef.current.close()}>\n            <Icon name=\"times\" size={25} />\n          </Pressable>\n        )}\n        {children}\n      </BottomSheetView>\n    </BottomSheetModal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    width: '100%',\n    // marginLeft: DWidth / 4,\n    paddingHorizontal: 15,\n    paddingBottom: 30,\n    marginBottom: Platform.OS === 'web' ? 70 : 0,\n  },\n  shadow: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 8,\n    },\n    shadowOpacity: 0.46,\n    shadowRadius: 11.14,\n\n    elevation: 10,\n  },\n  handle: {\n    height: 0,\n    display: 'none',\n  },\n});\n\nexport {Modal};\n","import React from 'react';\nimport {View, TouchableOpacity, StyleSheet} from 'react-native';\nimport Text from './Text';\n\nexport const Radio = ({label, onPress, selected}) => {\n  return (\n    <TouchableOpacity onPress={onPress} style={styles.radioButton}>\n      <View\n        style={[\n          styles.radioOuterCircle,\n          selected && styles.radioOuterCircleSelected,\n        ]}>\n        {selected && <View style={styles.radioInnerCircle} />}\n      </View>\n      <Text style={styles.radioLabel}>{label}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  radioButton: {\n    flexDirection: 'row-reverse',\n    alignItems: 'center',\n    marginVertical: 8,\n  },\n  radioOuterCircle: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n  },\n  radioOuterCircleSelected: {\n    borderColor: 'blue', // Change the color when selected\n  },\n  radioInnerCircle: {\n    height: 12,\n    width: 12,\n    borderRadius: 6,\n    backgroundColor: 'blue', // Change the color when selected\n  },\n  radioLabel: {\n    fontSize: 20,\n  },\n});\n","import React, {useEffect} from 'react';\nimport {Platform, Text as T, useColorScheme} from 'react-native';\nimport {colors} from '../theme';\nimport I18n from 'i18n-js';\nimport {useStore} from '../constants/useStore';\nimport {observer} from 'mobx-react';\nimport { useFonts } from 'expo-font';\n\n// export const Text = ({type = 'medium', children, style, ...restProps}) => {\n//   return (\n//     <T {...restProps} style={[style, {fontFamily: font(type)}]}>\n//       {children}\n//     </T>\n//   );\n// };\n\nconst Text = observer(\n  ({style, type = 'medium', numberOfLines, ...restProps}) => {\n    const {\n      langStore: {language},\n    } = useStore();\n\n    const colorScheme = useColorScheme() === 'dark';\n    // Define your custom styles here, you can use style prop as well\n    const customStyles = {\n      fontSize: I18n.locale === 'en-IR' ? 20 : 16,\n      color: restProps?.color || colorScheme ? colors.text : colors.text,\n      // color: 'blue',\n      // Add any other custom styles you need\n    };\n\n    // Combine the standard style prop and the custom styles\n    const combinedStyles = [customStyles, style];\n\n    return (\n      <T\n        ellipsizeMode=\"tail\"\n        numberOfLines={numberOfLines || 0}\n        style={[\n          combinedStyles,\n          {\n            fontFamily: font(type, language),\n            textAlign: 'right',\n            paddingTop: Platform.OS === 'ios' ? 12 : language === 'fa' ? 5 : 0,\n            paddingBottom: Platform.OS === 'ios' ? 12 : 0,\n            paddingHorizontal:\n              Platform.OS === 'ios' ? 12 : language === 'fa' ? 5 : 0,\n            ...(language === 'fa' && {lineHeight: 40}),\n            // padding: Platform.OS === 'ios' ? 12 : 0,\n          },\n        ]}\n        {...restProps}>\n        {restProps.children}\n      </T>\n    );\n  },\n);\n\nexport const font = (type, language) => {\n  const [fontsLoaded] = useFonts({\n    'Digi Nofar Bold': require('../assets/fonts/Nofar.ttf'),\n    'IRANSansXNoEn-Medium': require('../assets/fonts/IRANSansXNoEn-Medium.ttf'),\n    'Wizard World': require('../assets/fonts/wizard.ttf'),\n  });\n  if (language === 'en') {\n    switch (type) {\n      case 'bold':\n        return 'Wizard World';\n      case 'light':\n        return 'Wizard World';\n      default:\n        return 'Wizard World';\n    }\n  } else {\n    switch (type) {\n      case 'bold':\n        return 'Digi Nofar Bold';\n      case 'light':\n        return 'Digi Nofar Bold';\n      case 'iran':\n        return 'IRANSansXNoEn-Medium';\n      default:\n        return 'Digi Nofar Bold';\n    }\n  }\n};\nexport default Text;\n","export interface ConfigBaseProps {\n  persistNavigation: \"always\" | \"dev\" | \"prod\" | \"never\"\n  catchErrors: \"always\" | \"dev\" | \"prod\" | \"never\"\n  exitRoutes: string[]\n}\n\nexport type PersistNavigationConfig = ConfigBaseProps[\"persistNavigation\"]\n\nconst BaseConfig: ConfigBaseProps = {\n  // This feature is particularly useful in development mode, but\n  // can be used in production as well if you prefer.\n  persistNavigation: \"always\",\n\n  /**\n   * Only enable if we're catching errors in the right environment\n   */\n  catchErrors: \"always\",\n\n  /**\n   * This is a list of all the route names that will exit the app if the back button\n   * is pressed while in that screen. Only affects Android.\n   */\n  exitRoutes: [\"Main\"],\n}\n\nexport default BaseConfig\n","/**\n * These are configuration settings for the dev environment.\n *\n * Do not include API secrets in this file or anywhere in your JS.\n *\n * https://reactnative.dev/docs/security#storing-sensitive-info\n */\nexport default {\n  // API_URL: \"https://d4d-frontline.com/v1\",\n}\n","/**\n * These are configuration settings for the production environment.\n *\n * Do not include API secrets in this file or anywhere in your JS.\n *\n * https://reactnative.dev/docs/security#storing-sensitive-info\n */\nexport default {\n  // API_URL: \"https://d4d-frontline.com/v1\",\n}\n","/**\n * This file imports configuration objects from either the config.dev.js file\n * or the config.prod.js file depending on whether we are in __DEV__ or not.\n *\n * Note that we do not gitignore these files. Unlike on web servers, just because\n * these are not checked into your repo doesn't mean that they are secure.\n * In fact, you're shipping a JavaScript bundle with every\n * config variable in plain text. Anyone who downloads your app can easily\n * extract them.\n *\n * If you doubt this, just bundle your app, and then go look at the bundle and\n * search it for one of your config variable values. You'll find it there.\n *\n * Read more here: https://reactnative.dev/docs/security#storing-sensitive-info\n */\nimport BaseConfig from \"./config.base\"\nimport ProdConfig from \"./config.prod\"\nimport DevConfig from \"./config.dev\"\n\nlet ExtraConfig = ProdConfig\n\nif (__DEV__) {\n  ExtraConfig = DevConfig\n}\n\nconst Config = { ...BaseConfig, ...ExtraConfig }\n\nexport default Config\n","import {Dimensions} from 'react-native';\n\nexport const backgroundColor = '#232a36';\nexport const DWidth = Dimensions.get('screen').width;\nexport const DHeight = Dimensions.get('screen').height;\nexport const getDayWord = day => {\n  switch (day) {\n    case 0:\n      return 'معارفه';\n    case 1:\n      return 'اول';\n    case 2:\n      return 'دوم';\n    case 3:\n      return 'سوم';\n    case 4:\n      return 'چهارم';\n    case 5:\n      return 'پنجم';\n    case 6:\n      return 'ششم';\n    case 7:\n      return 'هفتم';\n    case 8:\n      return 'هشتم';\n    case 9:\n      return 'نهم';\n    case 10:\n      return 'دهم';\n  }\n};\n","import initStore from '../stores';\n\nconst store = initStore();\n\nconst useStore = () => store;\n\nexport { useStore };","const en = {\n  common: {\n    ok: 'OK',\n    cancel: 'Cancel',\n    back: 'Back',\n    addBtn: 'Add Player',\n    camera: 'Camera',\n    gallery: 'Gallery',\n  },\n  numbers:{\n    one:'1',\n    two:'2',\n    three:'3',\n    four:'4',\n    five:'5',\n    six:'6',\n    seven:'7',\n    eight:'8',\n    nine:'9',\n    ten:'10',\n  },\n  bottomNavigator: {\n    profile: 'Profile',\n    learning: 'Learning',\n    playGame: 'Play Game',\n    players: 'Players',\n    settings: 'Settings',\n  },\n  players: {\n    addPlayerSucceed: '{player} added successfully',\n    shouldWritePlayerName: 'Write the player name',\n  },\n  settings: {\n    title: 'Setting',\n    language: 'Language',\n    english: 'English',\n    persian: 'Persian',\n    nightMode: 'Night Mode',\n    active: 'Active',\n    deactive: 'Deactive',\n  },\n  learn: {\n    title: 'Learning',\n  },\n  game: {\n    rolecards: {\n      jackTypeDesc: {\n        godfatherDesc:\n          \"He is immune to Leon's one shot at night. He has a vest. It is up to the godfather to decide whether to fire at night on behalf of the group, and if he leaves the game, other members will shoot instead. The godfather has the ability of the sixth sense, and if he decides at night instead of shooting, he should use his sixth sense, he must correctly guess the role of a player and be confirmed by the moderator. The player whose role the godfather guessed correctly will be slaughtered, that is, if he has a shield or the doctor has saved him, he is still out of the game. He exits and his ability will not be applied that night and he cannot be summoned by Constantine after exiting the game. For Nostradamus, the godfather's inquiry is a citizen, but for Kane's fellow citizen, it will be mafia and positive.\",\n        matadorDesc:\n          'At night, he wakes up with the mafia team and uses his ability every night. At night, if he shows any player, he will take his night ability from him that night, and if the person shown wakes up, he will face the crosshairs, but tomorrow He can use his ability again. Matador cannot show the same player two nights in a row.',\n        saulDesc:\n          'If a person leaves the mafia group, Saul can trade and buy instead of shooting. Saul Goodman can turn a simple citizen into a simple mafia only once. With his sign, the driver of that person from his new role that night. The simple mafia informs and wakes him up to know his teammates. If Saul Goodman chooses a non-simple citizen or Nostradamus, he will face the cross of the operator and the operator will not wake up his sign. Disappears.',\n        ckaneDesc:\n          \"It is a citizen who chooses to show one of the players at the invitation of the moderator. If he has shown a mafia correctly, the next morning the moderator will reveal the shown mafia side in public. He will be killed. The doctor has no ability to save him. But if his sign was not from the mafia side, the operator will not announce anything and Kane's fellow citizen will remain in the game and his inquiry will be lost. If he or his sign are killed, his night operation will not be executed and It does not disappear and still remains. Inquiring about the godfather is a mafia for fellow citizens.\",\n        leonDesc:\n          \"Every night he wants to shoot a member of the mafia team. But by shooting the citizens by mistake, he will be killed by his own punishment and the doctor can't save him. Leon has a vest that can save him from being shot once. At most two has a shot\",\n        doctorDesc:\n          'Every night, he can save the life of a person, whether a member of the mafia or a citizen. He can save his own life once during the game, but there is no limit in saving the lives of others.',\n        constantineDesc:\n          'The moderator wakes up Constantine so that he can return one of the expelled players, either citizen or independent mafia, to the game at his choice and only once. Other than the revealed roles, the abilities of the summoned player continue and from It does not disappear and cannot be renewed.',\n        citizenDesk:\n          \"The role of the simple citizen is to help his teammates to correctly identify the mafia and vote wisely for the mafia members. He does not play a special role at night and is more interested in the process of the game and the citizen's team in winning. A simple citizen should try to identify the mafias carefully during the day and vote for them and take a special action at night. It does not.\",\n        jackDesc:\n          \"Jack is neither a mafia nor an independent citizen, and he must win the game alone. Jack is immortal at night and does not go out at night. Also, he does not go out during the day and only shows his role. Jack has to play every night. If he casts a spell on one person, of course, even on the introduction night, of course, he cannot cast a spell on someone again unless he has cast a spell on everyone. Jack is out of the game only in three ways. One if his spell is out of the game, two if with the beautiful mind card. If his role is guessed, or if his role is shown and his spell is guessed with the beautiful mind card, he will leave the game and three will be the godfather with the sixth sense. If all the mafias are out, the city will not win and Jack will win, or if If there are two citizens and Jack and three mafias in the game, the mafias do not win the game and must remove Jack's spell from the game.\",\n      },\n      nustraTypeDesc: {\n        godfatherDesc:\n          \"He is immune to Leon's one shot at night. He has a vest. It is up to the godfather to decide whether to fire at night on behalf of the group, and if he leaves the game, other members will shoot instead. The godfather has the ability of the sixth sense, and if he decides at night instead of shooting, he should use his sixth sense, he must correctly guess the role of a player and be confirmed by the moderator. The player whose role the godfather guessed correctly will be slaughtered, that is, if he has a shield or the doctor has saved him, he is still out of the game. He exits and his ability will not be applied that night and he cannot be summoned by Constantine after exiting the game. For Nostradamus, the godfather's inquiry is a citizen, but for Kane's fellow citizen, it will be mafia and positive.\",\n        matadorDesc:\n          'At night, he wakes up with the mafia team and uses his ability every night. At night, if he shows any player, he will take his night ability from him that night, and if the person shown wakes up, he will face the crosshairs, but tomorrow He can use his ability again. Matador cannot show the same player two nights in a row.',\n        saulDesc:\n          'If a person leaves the mafia group, Saul can trade and buy instead of shooting. Saul Goodman can turn a simple citizen into a simple mafia only once. With his sign, the driver of that person from his new role that night. The simple mafia informs and wakes him up to know his teammates. If Saul Goodman chooses a non-simple citizen or Nostradamus, he will face the cross of the operator and the operator will not wake up his sign. Disappears.',\n        ckaneDesc:\n          \"It is a citizen who chooses to show one of the players at the invitation of the moderator. If he has shown a mafia correctly, the next morning the moderator will reveal the shown mafia side in public. He will be killed. The doctor has no ability to save him. But if his sign was not from the mafia side, the operator will not announce anything and Kane's fellow citizen will remain in the game and his inquiry will be lost. If he or his sign are killed, his night operation will not be executed and It does not disappear and still remains. Inquiring about the godfather is a mafia for fellow citizens.\",\n        leonDesc:\n          \"Every night he wants to shoot a member of the mafia team. But by shooting the citizens by mistake, he will be killed by his own punishment and the doctor can't save him. Leon has a vest that can save him from being shot once. At most two has a shot\",\n        doctorDesc:\n          'Every night, he can save the life of a person, whether a member of the mafia or a citizen. He can save his own life once during the game, but there is no limit in saving the lives of others.',\n        constantineDesc:\n          'The moderator wakes up Constantine so that he can return one of the expelled players, either citizen or independent mafia, to the game at his choice and only once. Other than the revealed roles, the abilities of the summoned player continue and from It does not disappear and cannot be renewed.',\n        citizenDesk:\n          \"The role of the simple citizen is to help his teammates to correctly identify the mafia and vote wisely for the mafia members. He does not play a special role at night and is more interested in the process of the game and the citizen's team in winning. A simple citizen should try to identify the mafias carefully during the day and vote for them and take a special action at night. It does not.\",\n        nustraDesc:\n          'In the night of introduction, the manager wakes him up. Nostradamus shows three players of his choice to the manager. Then the manager tells him the number of mafias among these three and his prediction that one of the two sides will win. asks him. Nostradamus predicts whether the citizens will win or the mafias. From now on, he will work for the side he has chosen to win, without other people knowing which side he has joined. His choice won, he is also the winner, and if the side he chose loses, he will also lose. The shot of any of the two sides will not affect him and he will not be killed at night. The game will be out. Asking the godfather will be citizenship for him.',\n      },\n      lastMoveCards: {\n        lambsSilence: 'The silence of the lambs',\n        lambDesc:\n          'By showing two people, the expelled player silenced them for a day, and the people who were shown will not even be able to speak in defense tomorrow. If the number of players reaches half, one person will be silent in the silence of the lambs.',\n        IdentityDisclosure: 'Disclosure of identity',\n        identityDesc:\n          'If the expelled player chooses this card, the moderator will reveal his exact role without the need for collective inquiry and he will be out of the game. In this case, it is not possible for Constantine to return to the game.',\n        beautifulMind: 'Beautiful Mind',\n        beautifalJackDesc:\n          'If the owner of this card can identify only Jack Sparrow among the players in the game. He returns to the game and Jack Sparrow is removed from the game instead of him.\\n If Jack Sparrow chooses this card, he will return to the game without asking, but his shield will be destroyed and he will be killed by night shot.',\n        beautifalNustraDesc:\n          'If the owner of this card can identify only Nostradamus among the players in the game. returns to the game and Nostradamus is removed from the game instead of him.\\n If Nostradamus chooses this card, he will return to the game without asking, but his shield will be destroyed and he will be killed by night shot.',\n        bracelet: 'Bracelet',\n        braceletDesc:\n          'If the expelled player shows anyone with a wristband card, he will take away the abilities of that night.\\n Note: If there is only one mafia left in the game and he has received a wristband card, he will still be able to shoot. (The shot is not specific to a mafia, it is a team ability)',\n        faceoff: 'FaceOff',\n        faceoffDesc:\n          'Before leaving the card, the player changes her/his role with one of the players.',\n      },\n      godfather: 'GodFather',\n      matador: 'Matador',\n      saul: 'Saul Goodman',\n      ckane: 'Citizen Kane',\n      leon: 'Leon',\n      doctor: 'Doctor Watson',\n      constantine: 'Constantine',\n      citizen: 'The Citizen',\n      nustradamus: 'Nustradamus',\n      jack: 'Jack Sparrow',\n    },\n    roles: 'Roles',\n    lastMoveCards: 'Last Move Cards',\n    senario: 'Senario',\n    myPlayers: 'My Players',\n    playerName: 'Player Name',\n    oldPlayer: 'Players List',\n    newPlayer: 'New Player',\n    lastMove: 'Last Move',\n    day: 'Day',\n    night: 'Night',\n    mafia: 'Mafia',\n    citizen: 'Citizen',\n    showRoles: 'Show Roles',\n    deleted: 'Deleted Players',\n    noBodyRemovedFromGame: 'No Body Removed From Game',\n    doYouWantToCloseGame: 'Do You Want To Close Game?',\n    doYouWantToCloseApp: 'Do You Want To Close App?',\n    closeIt: 'Close it!',\n    gameTitle: 'Game',\n    startGame: 'Start Game',\n    chooseRoleForPlayers: 'Random role assignment',\n    addPlayerToThisGame: 'Add Player',\n    playersChoosen: 'Players Present In Game',\n    anyPlayerExist: 'Dont Have Any Player',\n    role: 'Role',\n    player: 'Player',\n    players: 'Players',\n    godfather: 'GodFather',\n    jackLastCards: 'Jack Sparrow Cards',\n    nustraLastCards: 'Nustradamus Cards',\n    jackLast: 'Jack Sparrow Cards',\n    nustraLast: 'Nustradamus Cards',\n    jackSenario: 'Jack Sparrow Senario',\n    nustraSenario: 'Nustradamus Senario',\n    description: 'Game Description',\n    jackDescription:\n      \"The Godfather of Jack Sparrow game is a secret role-playing game based on reasoning and inference. In the game, players are divided into three groups: the majority of citizens, the mafia team, and a single independent role. Roles that no one knows about from the beginning except the owner of the role and the director. The goal of the citizens is to take over the city and clean it from the mafias, and the victory of the mafias depends on the number of citizens, except for Jack.\\n The game is played in two parts, consecutive nights and days. On induction day, everyone knows their roles, but mafia members don't know their teammates. The players have 30 seconds to talk and introduce themselves. There is no challenge on the introduction day. Then on the night of the introduction, the manager wakes up the mafia team to get to know each other. From the beginning of each day, the manager gives players a turn at his discretion, up to a maximum of 40 Talk for a second. For days, everyone plays the role of a citizen and in the process of accusing, challenging, defending and voting, they try to discover the members of the mafia and remove them from the city with the majority of votes. During the conversation, other players can show their approval or disapproval with hand signs in complete silence.\\n In the conversation, anyone can accuse others of being a mafia or accuse them of being citizens, but no one has the right to Directly or indirectly mention his role and abilities of the night, or bluff about his role - it is forbidden to refer to the roles and events of the night \\nEvery day after the conversation with the first round of voting, the players with the most votes of half minus one received, they go to the defense and defend themselves against the accusations. With the second stage voting, which is carried out on the day and in front of all the players (with a relative majority, the person who gets the most votes is expelled from the city), if only one person reaches the defense, he will leave with the quorum mentioned above. . If two or more people come to the defense, whoever gets more votes will leave the game (if everyone gets zero votes, they will sit in the game) and the number of people voting is free even in the second round, even the people who are in the defense can vote. If the number of votes in the second round of two people is the same, the draw determines the death of the expelled player. The defense time is 40 seconds.\",\n    gameRules: 'Game Rules',\n    nustraDescription:\n      \"The godfather game is a secret role-playing game based on reasoning and deduction. In the godfather game; The players are divided into three categories, the majority of the citizens, the mafia team, and the single independent role. The goal of the citizens is to take over the city and clean it from the mafias, and the victory of the mafias depends on the number of citizens. The independent role chooses which team to play with and tries to win the desired side. \\nThe game is played in two parts, consecutive nights and days. On induction day, everyone knows their roles, but mafia members don't know their teammates. Players have 30 seconds to talk and introduce themselves (introduction day does not have a challenge). Then in the night of introduction, the moderator wakes up the mafia team to get to know each other.\\n From the beginning of each day, the moderator randomly assigns players a turn to talk for a maximum of 40 seconds. For days, everyone plays the role of a citizen and in the process of accusing, challenging, defending and voting, they try to discover the members of the mafia and remove them from the city with the majority of votes. During the conversation, other players in Complete silence can show their approval or disapproval with a hand sign.\\n In a conversation, anyone can accuse others of being a mafia or accuse them of being a citizen, but no one has the right to their role and abilities. Directly or indirectly hint or bluff about his role - it is forbidden to refer to the roles and events of the night \\nEvery day after the conversation with the first round of voting, the players who received the most accusation votes of half minus one go to the defense. and they defend themselves against the accusations. With the second stage of voting, which is carried out on the day and in front of all the players (with a relative majority, the person who gets the most votes is expelled from the city), if only one person gets to the defense, with The quorum mentioned above will be removed. If two or more people come to the defense, whoever gets more votes will leave the game (if everyone gets zero votes, they will sit in the game) and the number of people voting is free even in the second round, even the people who are in the defense can vote. If the number of votes in the second round of two people is the same, the draw determines the death of the expelled player. The defense time is 40 seconds.\\n At the end of each day's voting, the expelled player randomly chooses one card from the last six cards. Only by randomly picking the beautiful mind card and correctly guessing the role of Nostradamus, he returns to the game instead of Nostradamus without announcing his role. slow. Last move cards must be executed. (Act is mandatory) At the beginning of each day, the moderator votes to ask for roles outside the game. This voting is possible only 2 times in the whole game. According to the majority of the players, the moderator only The side reveals the dismissed players. Nostradamus' query will be independent\\n In game 2, there is a status query that is done by the side's announcement. Nostradamus is announced by the independent side.\",\n    nustraRules: {\n      first:\n        \"At night, the mafia must choose one of Saul's and Godfather's abilities; that's mean; 1- Or an arrow is fired; 2- Or the godfather uses his sixth sense; 3-Or Saul buys one of the simple citizens; And you can't use all the features in one night. Other players don't know what feature the mafia team used at night. Only if the godfather has used the sixth sense correctly, the players will find out in the morning that the godfather has used the sixth sense by announcing the exposed person by the host.\",\n      second:\n        'On the night when Saul is going to buy Goodman, the manager announces that the purchase is going to be done by the mafia team.',\n      third:\n        'If Nostradamus takes 2 mafia out of 3 query choices, he/she must play on the mafia side.',\n      fourth:\n        'If Nostradamus draws a beautiful mind card, he guesses himself and returns to the game, but he/she no longer has the night armor.',\n    },\n    jackRules: {\n      first:\n        \"At night, the mafia must choose one of the capabilities of Saul and the godfather; that's mean; 1- Or an arrow is fired; 2- Or the godfather uses his sixth sense; 3-Or Saul buys one of the simple citizens; And you can't use all the features in one night. Other players don't know what feature the mafia team used at night. Only if the godfather has used the sixth sense correctly, the players will find out in the morning that the godfather has used the sixth sense by announcing the revealed person by the moderator.\",\n      second:\n        'On the night when Saul is going to buy Goodman, the manager announces that the purchase is going to be done by the mafia team.',\n      third:\n        'If Jack, two citizens and three mafias are in the game, the game is not over.',\n      fourth:\n        'If the character is jacked, in the beautiful mind, you have to guess the enchanted person.',\n      fifth:\n        'If Citizen Kane Shoted at night, his inquiry will not be announced.',\n      sixth: 'If the jack is out, the beautiful mind card is removed.',\n      seventh:\n        'If someone is slaughtered by the godfather, he cannot use the ability in the same night.',\n    },\n    jackRoles: 'Jack Sparrow Roles',\n    nustraRoles: 'Nustradamus Roles',\n    chooseRoleProblem: 'You can just choose one of game types',\n    cardChoosingDescription:\n      'You only have to choose one type of card game. If you confirm this warning, you will be transferred to another game style to choose a card, and the choices of this game style will be deleted.',\n    areYouAgree: 'Are you agree ?',\n    addRoletoThisGame: 'Add Role',\n    free: 'Free',\n    roleAssignment: 'Role Assignment',\n    allPlayersSeenTheirRoles: 'All players see their cards',\n    goToTheGame: 'go to the game',\n    insideGame: 'Inside Players',\n    sitoutGame: 'Sitout Players',\n    silent: 'Silent',\n    speak: 'Speak',\n    disability: 'Disability',\n    playerRemovedFromGame:\n      '{player} removed from game and can get back by constantine',\n    addPlayerAndRoleAndGiveRole:\n      'Add players and roles, then give them roles to can play game',\n  },\n};\n\nexport default en;\nexport type Translations = typeof en;\n","import {Translations} from './en';\n\nconst fa: Translations = {\n  common: {\n    ok: 'بله',\n    cancel: 'خیر',\n    back: 'بازگشت',\n    addBtn: 'اضافه کن',\n    camera: 'دوربین',\n    gallery: 'گالری',\n  },\n  numbers: {\n    one: '۱',\n    two: '۲',\n    three: '۳',\n    four: '۴',\n    five: '۵',\n    six: '۶',\n    seven: '۷',\n    eight: '۸',\n    nine: '۹',\n    ten: '۱۰',\n  },\n  bottomNavigator: {\n    profile: 'پروفایل',\n    learning: ' آموزش ',\n    playGame: 'بازی',\n    players: 'بازیکن ها',\n    settings: 'تنظیمات',\n  },\n  settings: {\n    title: 'تنظیمات',\n    language: 'زبان',\n    english: 'انگلیسی',\n    persian: 'فارسی',\n    nightMode: 'حالت شب',\n    active: 'فعال',\n    deactive: 'غیر فعال',\n  },\n  players: {\n    addPlayerSucceed: '{player} به لیست اضافه شد',\n    shouldWritePlayerName: 'نام بازیکن رو وارد کن',\n  },\n  learn: {\n    title: 'آموزش',\n  },\n  game: {\n    rolecards: {\n      jackTypeDesc: {\n        godfatherDesc:\n          'او از یک بار شلیک شب لئون مصون است.یک جلیقه دارد.تعیین شلیک شب از طرف گروه به عهده پدرخوانده است و اگر از بازی خارج شود دیگر اعضا به جای او شلیک می کنند.پدرخوانده دارای توانایی حس ششم است و اگر در شب تصمیم بگیرد به جای شلیک از حس ششم استفاده کند باید نقش بازیکنی را درست حدس بزند و توسط گرداننده تائید شود.بازیکنی که پدرخوانده نقش او را درست حدس زده است سلاخی می شود یعنی اگر سپر داشته باشد یا دکتر او را سیو کرده باشد بازهم از بازی خارج می شود و آن شب توانایی وی اعمال نخواهد شد و پس از خروج از بازی توسط کنستانتین قابل احضار نمی باشد.استعلام پدرخوانده برای نوستراداموس شهروندی بوده ولی برای همشهری کین مافیایی و مثبت خواهد بود.',\n        matadorDesc:\n          'شب ها با تیم مافیا بیدار می شود و هر شب از توانایی خود استفاده می کند.در شب هر بازیکنی را نشان دهد توانایی شب او را آن شب از وی خواهد گرفت و فرد نشان شده اگر بیدار شود با ضربدر گرداننده مواجه می شود اما فردا مجدد می تواند از توانایی اش استفاده کند.ماتادور دو شب متوالی نمی تواند یک بازیکن را نشان کند.',\n        saulDesc:\n          'اگر فردی از گروه مافیا خارج شود ساول می تواند جای شلیک شب معامله و خریداری انجام دهد.ساول گودمن فقط یکبار می تواند یکی از شهروندان ساده را به یک مافیای ساده تبدیل کند.با علامت او همان شب گرداننده آن فرد را از نقش جدیدش یعنی مافیای ساده مطلع می کند و وی را بیدار می کند تا هم تیمی های خود را بشناسد.اگر ساول گودمن شهروند غیرساده یا نوستراداموس را انتخاب کند با ضربدر گرداننده مواجه شده و گرداننده نشانش را بیدار نمی کند.توانمندی ساول و شلیک آن شب مافیا نیز از بین می رود.',\n        ckaneDesc:\n          'شهروندی است که در یکی از شب ها به انتخاب خود به دعوت گرداننده یکی از بازیکنان را نشان می دهد.اگر یک مافیا را درست نشان کرده باشد صبح روز بعد گرداننده ساید مافیای نشان شده را در جمع افشا می کند.و همشهری کین شب بعد کشته می شود.دکتر توانایی نجات او را ندارد.اما اگر نشانش از ساید مافیا نبود گرداننده هیچ چیزی اعلام نخواهد کرد و همشهری کین در بازی خواهد ماند و استعلامش از بین خواهد رفت.اگر او یا نشانش کشته شوند عملیات شب وی اجرا نشده و از بین نمی رود و همچنان باقی می ماند.استعلام پدرخوانده برای همشهری کین مافیایی است.',\n        leonDesc:\n          'هرشبی که بخواهد می تواند به یکی از اعضای تیم مافیا شلیک کند.اما با شلیک اشتباه به شهروندان به مجازات خودش کشته می شود و دکتر نمی تواند او را نجات دهد.لئون یک جلیقه دارد که یکبار از تیر نجات پیدا می کند.حداکثر دو شلیک دارد.',\n        doctorDesc:\n          'هرشب می تواند جان یک نفر چه عضو مافیا و چه عضو شهروندی را نجات دهد.جان خودش را یکبار می تواند در طول بازی نجات دهد ولی در نجات جان دیگران محدودیتی ندارد',\n        constantineDesc:\n          'گرداننده کنستانتین را بیدار می کند تا او به انتخاب خود و تنها یک بار یک نفر از بازیکنان اخراجی اعم از مافیا شهروند و یا مستقل را به بازی برگرداند.غیر از نقش های افشا شده.توانایی های بازیکن احضار شده ادامه پیدا می کند و از بین نمی رود و از نو نمی شود.',\n        citizenDesk:\n          'نقش شهروند ساده کمک به هم تیمی های خود در تشخیص مافیا به درستی است و رای دادن با زرنگی به اعضای مافیاست. او در شب نقش خاصی را ایفا نمی کند و بیشتر به روند بازی و تیم شهروندی در پیروز شدن است.\\n شهروند ساده میبایست سعی کند در روز مافیا ها را با دقت شناسایی کند و به آن ها رای دهد و در شب عمل خاصی را انجام نمی دهد.',\n        jackDesc:\n          'جک نه مافیا است و نه شهروند مستقل است و باید تنهایی بازی را ببرد.جک شب ها نا میرا است و با تیر شب بیرون نمی رود.همچنین در روز را رای هم بیرون نمی رود و فقط نقشش شو می شود.جک باید هر شب یک نفر را طلسم کند البته حتی شب معارفه البته اون نمی تواند تکراری کسی را طلسم کند مگر همه را طلسم کرده باشد.جک فقط در سه صورت از بازی خارج می شود.یک اگر طلسمش از بازی خارج شده باشد دو اگر با کارت ذهن زیبا نقشش حدس زده شود و یا اگر نقشش شو شده باشد و با کارت ذهن زیبا طلسمش حدس زده شود از بازی می رود و سه با حس ششم پدرخوانده.اگر تمام مافیا ها خارج شده باشند شهر برنده نمی شود و جک برنده می شود و یا اگر به سه نفر آخر برسد نیز برنده می شود.اگر دو شهروند و جک و سه مافیا در بازی باشد مافیا ها برنده بازی نیستند و باید طلسم جک رو از بازی خارج کنند.',\n      },\n      nustraTypeDesc: {\n        godfatherDesc:\n          'او از یک بار شلیک شب لئون مصون است.یک جلیقه دارد.تعیین شلیک شب از طرف گروه به عهده پدرخوانده است و اگر از بازی خارج شود دیگر اعضا به جای او شلیک می کنند.پدرخوانده دارای توانایی حس ششم است و اگر در شب تصمیم بگیرد به جای شلیک از حس ششم استفاده کند باید نقش بازیکنی را درست حدس بزند و توسط گرداننده تائید شود.بازیکنی که پدرخوانده نقش او را درست حدس زده است سلاخی می شود یعنی اگر سپر داشته باشد یا دکتر او را سیو کرده باشد بازهم از بازی خارج می شود و آن شب توانایی وی اعمال نخواهد شد و پس از خروج از بازی توسط کنستانتین قابل احضار نمی باشد.استعلام پدرخوانده برای نوستراداموس شهروندی بوده ولی برای همشهری کین مافیایی و مثبت خواهد بود.',\n        matadorDesc:\n          'شب ها با تیم مافیا بیدار می شود و هر شب از توانایی خود استفاده می کند.در شب هر بازیکنی را نشان دهد توانایی شب او را آن شب از وی خواهد گرفت و فرد نشان شده اگر بیدار شود با ضربدر گرداننده مواجه می شود اما فردا مجدد می تواند از توانایی اش استفاده کند.ماتادور دو شب متوالی نمی تواند یک بازیکن را نشان کند.',\n        saulDesc:\n          'اگر فردی از گروه مافیا خارج شود ساول می تواند جای شلیک شب معامله و خریداری انجام دهد.ساول گودمن فقط یکبار می تواند یکی از شهروندان ساده را به یک مافیای ساده تبدیل کند.با علامت او همان شب گرداننده آن فرد را از نقش جدیدش یعنی مافیای ساده مطلع می کند و وی را بیدار می کند تا هم تیمی های خود را بشناسد.اگر ساول گودمن شهروند غیرساده یا نوستراداموس را انتخاب کند با ضربدر گرداننده مواجه شده و گرداننده نشانش را بیدار نمی کند.توانمندی ساول و شلیک آن شب مافیا نیز از بین می رود.',\n        ckaneDesc:\n          'شهروندی است که در یکی از شب ها به انتخاب خود به دعوت گرداننده یکی از بازیکنان را نشان می دهد.اگر یک مافیا را درست نشان کرده باشد صبح روز بعد گرداننده ساید مافیای نشان شده را در جمع افشا می کند.و همشهری کین شب بعد کشته می شود.دکتر توانایی نجات او را ندارد.اما اگر نشانش از ساید مافیا نبود گرداننده هیچ چیزی اعلام نخواهد کرد و همشهری کین در بازی خواهد ماند و استعلامش از بین خواهد رفت.اگر او یا نشانش کشته شوند عملیات شب وی اجرا نشده و از بین نمی رود و همچنان باقی می ماند.استعلام پدرخوانده برای همشهری کین مافیایی است.',\n        leonDesc:\n          'هرشبی که بخواهد می تواند به یکی از اعضای تیم مافیا شلیک کند.اما با شلیک اشتباه به شهروندان به مجازات خودش کشته می شود و دکتر نمی تواند او را نجات دهد.لئون یک جلیقه دارد که یکبار از تیر نجات پیدا می کند.حداکثر دو شلیک دارد.',\n        doctorDesc:\n          'هرشب می تواند جان یک نفر چه عضو مافیا و چه عضو شهروندی را نجات دهد.جان خودش را یکبار می تواند در طول بازی نجات دهد ولی در نجات جان دیگران محدودیتی ندارد.',\n        constantineDesc:\n          'گرداننده کنستانتین را بیدار می کند تا او به انتخاب خود و تنها یک بار یک نفر از بازیکنان اخراجی اعم از مافیا شهروند و یا مستقل را به بازی برگرداند.غیر از نقش های افشا شده.توانایی های بازیکن احضار شده ادامه پیدا می کند و از بین نمی رود و از نو نمی شود.',\n        citizenDesk:\n          'نقش شهروند ساده کمک به هم تیمی های خود در تشخیص مافیا به درستی است و رای دادن با زرنگی به اعضای مافیاست. او در شب نقش خاصی را ایفا نمی کند و بیشتر به روند بازی و تیم شهروندی در پیروز شدن است.\\n شهروند ساده میبایست سعی کند در روز مافیا ها را با دقت شناسایی کند و به آن ها رای دهد و در شب عمل خاصی را انجام نمی دهد.',\n        nustraDesc:\n          'در شب معارفه گرداننده او را بیدار می کند.نوستراداموس به انتخاب خود سه بازیکن را به گرداننده نشان می دهد.سپس گرداننده به او تعداد مافیا های موجود در میان این سه را اعلام می کند و پیش بینی او مبنی بر پیروزی یکی از دو ساید را از او می پرسد.نوستراداموس پیش بینی می کند شهروندان برنده خواهند شد یا مافیا ها.از این پس او برای برنده شدن سایدی که انتخاب کرده است تلاش می کند.بدون آنکه دیگر افراد بدانند وی به چه سایدی پیوسته است.اگر ساید مورد انتخابش برنده شد او نیز برنده است و اگر ساید مورد انتخابش بازنده شد او نیز بازنده خواهد شد.شلیک هیچ یک از دو ساید بر او موثر نخواهد بود و در شب کشته نخواهد شد.مگر با حس ششم پدرخوانده اما در روز با رای گیری از بازی خارج خواهد شد.استعلام پدرخوانده برای وی شهروندی خواهد بود.',\n      },\n      lastMoveCards: {\n        lambsSilence: 'سکوت بره ها',\n        lambDesc:\n          'بازیکن اخراجی با نشان کردن دو نفر٬ آنان را بمدت یک روز سایلنت کرده و افرادی که نشان شده باشند٬ فردا حتی در دفاع امکان صحبت کردن ندارند. اگر تعداد بازیکنان به نصف رسید٬ در سکوت بره ها یک نفر سایلنت خواهد شد.',\n        IdentityDisclosure: 'افشای هویت',\n        identityDesc:\n          'اگر بازیکن اخراجی این کارت را انتخاب کند٬ گرداننده بدون نیاز به استعالم جمعی نقش دقیق او را فاش میکند و او از بازی بیرون میرود. در این حالت امکان بازگشت به بازی توسط کنستانتین را ندارد.',\n        beautifulMind: 'ذهن زیبا',\n        beautifalJackDesc:\n          'اگر صاحب این کارت بتواند فقط جک گنجشکه را از بین بازیکنان داخل بازی شناسایی کند. به بازی برمیگردد و جک گنجشکه بجای او از بازی خارج میشود.\\n اگر جک گنجشکه این کارت را انتخاب کند٬ بدون نیاز به استعالم به بازی باز میگردد اما سپر وی از بین رفته و با شلیک شب کشته خواهد شد',\n        beautifalNustraDesc:\n          'اگر صاحب این کارت بتواند فقط نوستراداموس را از بین بازیکنان داخل بازی شناسایی کند. به بازی برمیگردد و نوستراداموس بجای او از بازی خارج میشود.\\n اگر نوستراداموس این کارت را انتخاب کند٬ بدون نیاز به استعالم به بازی باز میگردد اما سپر وی از بین رفته و با شلیک شب کشته خواهد شد',\n        bracelet: 'دستبند',\n        braceletDesc:\n          'بازیکن اخراجی با کارت دستبند هرکس را نشان کند٬ توانمندی های ان شب را از وی میگیرد.\\n نکته: اگر تنها یک مافیا در بازی مانده باشد و کارت دسبتند دریافت کرده باشد٬ همچنان امکان شلیک خواهد داشت. )شات مختص به یک مافیا نیست٬ یک توانایی تیمی است(',\n        faceoff: 'تغییر چهره',\n        faceoffDesc:\n          'بازیکن قبل از خروج کارت نقش خود را با یکی از بازیکنان عوض می کند.',\n      },\n      godfather: 'پدرخوانده',\n      matador: 'ماتادور',\n      saul: 'ساول گودمن',\n      ckane: 'همشهری کین',\n      leon: 'لئون حرفه ای',\n      doctor: 'دکتر واتسون',\n      constantine: 'کنستانتین',\n      citizen: 'شهروند ساده',\n      nustradamus: 'نوستراداموس',\n      jack: 'جک گنجیشکه',\n    },\n    roles: 'نقش ها',\n    lastMoveCards: 'کارت های حرکت آخر',\n    senario: 'سناریو بازی',\n    myPlayers: 'بازیکن های من',\n    playerName: 'نام بازیکن',\n    oldPlayer: 'بازیکن قدیمی',\n    newPlayer: 'بازیکن جدید',\n    lastMove: 'حرکت آخر',\n    day: 'روز',\n    night: 'شب',\n    mafia: 'مافیا',\n    citizen: 'شهروند',\n    showRoles: 'نمایش نقش ها',\n    deleted: 'حذف شده ها',\n    noBodyRemovedFromGame: 'هیچ بازیکنی از بازی خارج نشده',\n    doYouWantToCloseGame: 'از بازی خارج می شوید ؟',\n    doYouWantToCloseApp: 'از برنامه خارج می شوید ؟',\n    closeIt: 'خارج شو!',\n    startGame: 'شروع بازی',\n    chooseRoleForPlayers: 'تعیین نقش برای بازیکن ها',\n    addPlayerToThisGame: 'اضافه کردن بازیکن به این بازی',\n    playersChoosen: 'بازیکنان حاضر در بازی',\n    anyPlayerExist: 'هیج بازیکنی نداری!',\n    gameTitle: 'بازی',\n    role: 'نقش',\n    player: 'بازیکن',\n    players: 'بازیکن ها',\n    godfather: 'پدرخوانده',\n    jackLastCards: 'کارت های جک گنجشکه',\n    nustraLastCards: 'کارت های نوستراداموس',\n    jackLast: 'کارت های جک',\n    nustraLast: 'کارت های نوستراداموس',\n    jackSenario: 'سناریو  جک گنجیشکه',\n    nustraSenario: 'سناریو  نوستراداموس',\n    description: 'توضیحات بازی',\n    jackDescription:\n      'بازی پدرخوانده جک گنجشکه، یک بازی دورهمی نقش مخفی بر پایه استدلال و استنتاج است در بازی  بازیکن ها به سه دسته اکثریت شهروند٬ تیم مافیا و تک نقش مستقل تقسیم میشوند. نقش هایی که از ابتدا جز صاحب نقش و گرداننده کسی از آن مطلع نیست. هدف شهروندان در دست گرفتن شهر و پاکسازی از مافیا هاست و پیروزی مافیاها در گرو برابری با تعداد شهروندان است البته به جز جک.\\n بازی در دو بخش شب ها و روز های متوالی انجام میشود. در روز معارفه٬ همه نقش خود را میدانند اما اعضای مافیا همتیمی های خود را نمیشناسند. بازیکنان 30 ثانیه فرصت دارند تا گفتگو کنند و خود را معرفی کنند روز معارفه چالش ندارد .سپس در شب معارفه گرداننده تیم مافیا را بیدار میکند تا همدیگر را بشناسند.\\n از آغاز هر روز گرداننده به اختیار خود به بازیکنان نوبت میدهد تا حداکثر 40 ثانیه به گفتگو بپردازند. روز ها همه نقش شهروند را بازی میکنند و در فرایند اتهام زنی٬ به چالش کشیدن، دفاع و رای گیری تالش میکنند اعضای مافیا را کشف و با اکثریت ارا از شهر خارج کنند. در زمان گفتگو بازیکنان دیگر در سکوت کامل میتوانند با عالمت دست تائید یا عدم تائید خود را نشان دهند.\\n در گفتگو هرکس میتواند دیگران را به مافیا بودن متهم کند یا به شهروند بودن اتهام را از آنان صلب کند اما هیچ کس حق ندارد به نقش و توانایی های شب خود به طور مستقیم یا غیرمستقیم اشاره کند و یا درباره نقش خود بلوف بزند – اطلاق به نقش ها و اتفاقات شب ممنوع است \\nهر روز پس از گفتگو با رای گیری مرحله اول٬ بازیکنانی که بیشترین رای اتهام نصف منهای یک دریافت کرده اند به دفاع میروند و از خود در برابر اتهامات دفاع میکنند. با رای گیری مرحله دوم که در روز و در برابر انظار همه بازیکنان اجرا میگردد (با اکثریت نسبی٬ فردی که بیشترین رای را آورده از شهر اخراج میشود) اگر تنها یک نفر به دفاع برسد، با حد نصاب ذکر شده در بالا خارج خواهد شد. اگر دو نفر و بیشتر به دفاع بیایند ٬هرکس تعداد بیشتری رای بیاورد از بازی خارج میشود)اگر همه صفر رای بیاورند در بازی خواهند نشست(و تعداد رای دادن به افراد حتی در دور دوم آزاد است حتی افرادی که در دفاع هستند میتوانند رای بدهند. اگر تعداد رای دور دوم دو نفر یکسان باشد٬ قرعه مرگ بازیکن اخراجی را تعیین میکند.زمان دفاع 40 ثانیه می باشد.',\n    gameRules: 'قوانین بازی',\n    nustraDescription:\n      'بازی پدرخوانده، یک بازی دورهمی نقش مخفی بر پایه استدلال و استنتاج است. در بازی پدرخوانده؛ بازیکن ها به سه دسته اکثریت شهروند٬ تیم مافیا و تک نقش مستقل تقسیم میشوند.\\n نقش هایی که از ابتدا جز صاحب نقش و گرداننده کسی از آن مطلع نیست. هدف شهروندان در دست گرفتن شهر و پاکسازی از مافیا هاست و پیروزی مافیاها در گرو برابری با تعداد شهروندان است. نقش مستقل خود انتخاب میکند با کدام تیم بازی کرده و سعی در پیروزی ساید مورد نظر دارد. \\nبازی در دو بخش شب ها و روز های متوالی انجام میشود. در روز معارفه٬ همه نقش خود را میدانند اما اعضای مافیا همتیمی های خود را نمیشناسند. بازیکنان 30 ثانیه فرصت دارند تا گفتگو کنند و خود را معرفی کنند )روز معارفه چالش ندارد .(سپس در شب معارفه گرداننده تیم مافیا را بیدار میکند تا همدیگر را بشناسند.\\n از آغاز هر روز گرداننده به اختیار خود به بازیکنان نوبت میدهد تا حداکثر 40 ثانیه به گفتگو بپردازند. روز ها همه نقش شهروند را بازی میکنند و در فرایند اتهام زنی٬ به چالش کشیدن، دفاع و رای گیری تالش میکنند اعضای مافیا را کشف و با اکثریت ارا از شهر خارج کنند. در زمان گفتگو بازیکنان دیگر در سکوت کامل میتوانند با عالمت دست تائید یا عدم تائید خود را نشان دهند.\\n در گفتگو هرکس میتواند دیگران را به مافیا بودن متهم کند یا به شهروند بودن اتهام را از آنان صلب کند اما هیچ کس حق ندارد به نقش و توانایی های شب خود به طور مستقیم یا غیرمستقیم اشاره کند و یا درباره نقش خود بلوف بزند – اطالق به نقش ها و اتفاقات شب ممنوع است \\nهر روز پس از گفتگو با رای گیری مرحله اول٬ بازیکنانی که بیشترین رای اتهام نصف منهای یک دریافت کرده اند به دفاع میروند و از خود در برابر اتهامات دفاع میکنند. با رای گیری مرحله دوم که در روز و در برابر انظار همه بازیکنان اجرا میگردد (با اکثریت نسبی٬ فردی که بیشترین رای را آورده از شهر اخراج میشود) اگر تنها یک نفر به دفاع برسد، با حد نصاب ذکر شده در بالا خارج خواهد شد. اگر دو نفر و بیشتر به دفاع بیایند ٬هرکس تعداد بیشتری رای بیاورد از بازی خارج میشود)اگر همه صفر رای بیاورند در بازی خواهند نشست(و تعداد رای دادن به افراد حتی در دور دوم آزاد است حتی افرادی که در دفاع هستند میتوانند رای بدهند. اگر تعداد رای دور دوم دو نفر یکسان باشد٬ قرعه مرگ بازیکن اخراجی را تعیین میکند.زمان دفاع 40 ثانیه می باشد.\\n در پایان رای گیری هر روز بازیکن اخراجی از بین شش کارت حرکت اخر یک کارت را به طور تصادفی انتخاب میکند. تنها با برداشتن اتفاقی کارت ذهن زیبا و حدس درست نقش نوستراداموس او بدون اعالم نقشش از سوی گرداننده به جای نوستراداموس به بازی بر میگردد. بازیکنی که رای خروج اورده است٬ امکان صحبت )وصیت ( ندارد و تنها باید به کارت حرکت اخر خود اکتفا کند. کارت های حرکت اخر باید اجرا شوند. ) اکت اجباریست ( در ابتدای هر روز گرداننده برای استعالم نقش های خارج از بازی رای گیری میکند. این رای گیری برای استعالم فقط 2 بار در کل بازی ممکن است. با نظر اکثریت بازیکنان گرداننده فقط ساید بازیکنان اخراجی را فاش میکند. استعالم نوستراداموس؛ مستقل خواهد بود\\n در بازی 2 استعالم وضعیت وجود دارد که با اعالم ساید انجام میگیرد.نوستراداموس با ساید مستقل اعالم میشود.',\n    nustraRules: {\n      first:\n        'مافیا در شب٬ باید از میان قابلیت های ساول و پدرخوانده یکی را انتخاب کند؛ یعنی؛ ۱ -یا تیر شلیک میشود ؛ ۲ -یا پدرخوانده از حس ششم خود استفاده میکند ؛ ۳ -یا ساول یکی از شهروندان ساده را میخرد ؛ و نمیتوان همه قابلیت ها را در یک شب استفاده کرد. دیگر بازیکنان نمیدانند که تیم مافیایی در شب از چه قابلیتی استفاده کردند. تنها درصورتی که پدرخوانده از حس ششم به درستی استفاده کرده باشد٬ بازیکنان صبح با اعالم فرد افشا شده توسط گرداننده متوجه میشوند که پدرخوانده از حس ششم استفاده کرده است.',\n      second:\n        'در شبی که قرار است ساول گود من خریداری کند،گرداننده اعالم میکند که قرار است خریداری توسط تیم مافیا انجام گیرد.',\n      third:\n        ' اگر نوستراداموس از بین 3 انتخاب استعلام 2 مافیا را بگیرد باید در ساید مافیا بازی کند.',\n      fourth:\n        ' اگر نوستراداموس کارت ذهن زیبا بکشد خودش را حدس می زند و به بازی بر می گردد ولی دیگر زره شب ندارد.',\n    },\n    jackRules: {\n      first:\n        'مافیا در شب٬ باید از میان قابلیت های ساول و پدرخوانده یکی را انتخاب کند؛ یعنی؛ ۱ -یا تیر شلیک میشود ؛ ۲ -یا پدرخوانده از حس ششم خود استفاده میکند ؛ ۳ -یا ساول یکی از شهروندان ساده را میخرد ؛ و نمیتوان همه قابلیت ها را در یک شب استفاده کرد. دیگر بازیکنان نمیدانند که تیم مافیایی در شب از چه قابلیتی استفاده کردند. تنها درصورتی که پدرخوانده از حس ششم به درستی استفاده کرده باشد٬ بازیکنان صبح با اعالم فرد افشا شده توسط گرداننده متوجه میشوند که پدرخوانده از حس ششم استفاده کرده است.',\n      second:\n        'در شبی که قرار است ساول گود من خریداری کند،گرداننده اعالم میکند که قرار است خریداری توسط تیم مافیا انجام گیرد.',\n      third: ' اگر جک و دو شهروند و سه مافیا در بازی باشد بازی تمام نشده است.',\n      fourth:\n        ' اگر جک کارتش شو شده باشد در ذهن زیبا باید فرد طلسم شده را حدس بزند.',\n      fifth: 'اگر همشهری کین شات شب شود استعلامش اعلام نمی شود.',\n      sixth: ' اگر جک بیرون باشد کارت ذهن زیبا حذف می شود.',\n      seventh:\n        'اگر کسی سلاخی پدرخوانده شود قابلیت استفاده توانایی در همان شب را هم ندارد.',\n    },\n    jackRoles: 'نقش های جک گنجیشکه',\n    nustraRoles: 'نقش های نوستراداموس',\n    chooseRoleProblem: 'فقط از یک نوع بازی میتونی کارت انتخاب کنی',\n    cardChoosingDescription:\n      'شما فقط میتونید از یک سبک بازی کارت انتخاب کنید درصورت تایید این اخطارانتخاب های شما حذف میشوند و به سبک دیگه ی بازی منتقل میشوید',\n    areYouAgree: 'موافقی؟',\n    addRoletoThisGame: 'اضافه کردن نقش به بازی',\n    free: 'مستقل',\n    roleAssignment: 'تعیین نقش',\n    allPlayersSeenTheirRoles: 'تمام بازیکنان کارت های خود را دیدن',\n    goToTheGame: 'برو به بازی',\n    insideGame: 'داخل بازی',\n    sitoutGame: 'حذف شده ها',\n    silent: 'سکوت',\n    speak: 'حرف بزن',\n    disability: 'بی خاصیت',\n    playerRemovedFromGame:\n      ' {player} از بازی حذف شد و می تواند توسط کنستانتین به بازی برگردانده شود',\n    addPlayerAndRoleAndGiveRole:\n      'بازیکن ها و نقش ها رو انتخاب کن و به بازیکن ها نقش بده تا بتونی بازی روشروع کنی',\n  },\n};\n\nexport default fa;\n","// import * as Localization from \"expo-localization\"\nimport * as localization from 'react-native-localize';\nimport i18n from 'i18n-js';\nimport {I18nManager} from 'react-native';\n\n// if English isn't your default language, move Translations to the appropriate language file.\nimport en, {Translations} from './en';\nimport fa from './fa';\nimport I18n from 'i18n-js';\nimport {translate} from './translate';\n\ni18n.fallbacks = true;\n// i18next.init({\n//   fallbackLng: ['en', 'fa', 'en-IR', 'en-US'],\n// });\n\nfunction interpolateString(\n  template: string,\n  variables: Record<string, string>,\n): string {\n  return template.replace(/{([^{}]*)}/g, (match, group) => {\n    return variables[group] || match;\n  });\n}\n\n// Updated translation function\nexport const translateWithOptions = (\n  key: TxKeyPath,\n  options?: Record<string, string>,\n): string => {\n  const translation = translate(key, options);\n\n  if (options) {\n    return interpolateString(translation, options);\n  }\n\n  return translation;\n};\n/**\n * we need always include \"*-US\" for some valid language codes because when you change the system language,\n * the language code is the suffixed with \"-US\". i.e. if a device is set to English (\"en\"),\n * if you change to another language and then return to English language code is now \"en-US\".\n */\n\ni18n.translations = {fa, 'en-IR': fa, en, 'en-US': en};\n// export const loadLocale = async () => {\n//   for (const locale of localization.getLocales()) {\n//     if (i18n.translations[locale.languageCode] !== null) {\n//       console.log({locale});\n//       switch (locale.countryCode) {\n//         case 'US':\n//           import('./en.ts').then(en => {\n//             i18n.translations = {en};\n//           });\n//           break;\n//         default:\n//         case 'IR':\n//           import('./fa.ts').then(fa => {\n//             i18n.translations = {fa};\n//           });\n//           break;\n//       }\n//       break;\n//     }\n//   }\n// };\n// const locales = localization.getLocales();\n\n// i18n.locale = localization.getLocales()[0].languageTag;\n\nexport const changeLang = (lang: string) => {\n  if (lang === 'en-US') {\n    // I18nManager.allowRTL(false);\n    I18nManager.forceRTL(false);\n  } else {\n    // I18nManager.allowRTL(true);\n    I18nManager.forceRTL(false);\n  }\n  if (lang) {\n    i18n.locale = lang;\n  } else {\n    i18n.locale = 'en-IR';\n  }\n};\n\nexport const isFarsi = I18n.locale === 'en-IR';\n// handle RTL languages\n// export const isRTL = localization.getLocales()[0].languageTag;\n// console.log({isRTL})\n// I18nManager.allowRTL(isRTL === 'en-IR');\n// I18nManager.forceRTL(isRTL === 'en-IR');\n\n/**\n * Builds up valid keypaths for translations.\n */\nexport type TxKeyPath = RecursiveKeyOf<Translations>;\n\n// via: https://stackoverflow.com/a/65333050\ntype RecursiveKeyOf<TObj extends object> = {\n  [TKey in keyof TObj & (string | number)]: RecursiveKeyOfHandleValue<\n    TObj[TKey],\n    `${TKey}`\n  >;\n}[keyof TObj & (string | number)];\n\ntype RecursiveKeyOfInner<TObj extends object> = {\n  [TKey in keyof TObj & (string | number)]: RecursiveKeyOfHandleValue<\n    TObj[TKey],\n    `['${TKey}']` | `.${TKey}`\n  >;\n}[keyof TObj & (string | number)];\n\ntype RecursiveKeyOfHandleValue<\n  TValue,\n  Text extends string,\n> = TValue extends any[]\n  ? Text\n  : TValue extends object\n  ? Text | `${Text}${RecursiveKeyOfInner<TValue>}`\n  : Text;\n","import \"./i18n\"\nexport * from \"./i18n\"\nexport * from \"./translate\"\n","import i18n from \"i18n-js\"\nimport { TxKeyPath } from \"./i18n\"\n\n/**\n * Translates text.\n *\n * @param key The i18n key.\n * @param options The i18n options.\n * @returns The translated text.\n *\n * @example\n * Translations:\n *\n * ```en.ts\n * {\n *  \"hello\": \"Hello, {{name}}!\"\n * }\n * ```\n *\n * Usage:\n * ```ts\n * import { translate } from \"i18n-js\"\n *\n * translate(\"common.ok\", { name: \"world\" })\n * // => \"Hello world!\"\n * ```\n */\nexport function translate(key: TxKeyPath, options?: i18n.TranslateOptions) {\n  return i18n.t(key, options)\n}\n","import React, {ReactNode, useEffect, useState} from 'react';\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer,\n  NavigatorScreenParams,\n  useNavigation,\n} from '@react-navigation/native';\nimport {\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n  createNativeStackNavigator,\n} from '@react-navigation/native-stack';\nimport {PlayersScreen} from '../screen/Players/playersScreen';\nimport {RolesScreen} from '../screen/Roles/RolesScreen';\nimport {PlayerListScreen} from '../screen/Players/PlayerListScreen';\nimport {RoleUpScreen} from '../screen/Roles/RoleUpScreen';\nimport {GamePlay} from '../screen/Game/GamePlay';\nimport {GameNightPlay} from '../screen/Game/GameNightPlay';\nimport {MainScreen} from '../screen/Home/MainScreen';\nimport {AllPlayers} from '../screen/Players/AllPlayers';\nimport {LearningScreen} from '../screen/Rules/LearningScreen';\nimport {RoleLearning} from '../screen/Rules/cards/RoleLearning';\nimport {GameRules} from '../screen/Rules/gameRules/GameRules';\nimport {Appearance, ColorSchemeName, useColorScheme} from 'react-native';\nimport {useStore} from '../constants/useStore';\nimport {observer} from 'mobx-react';\nimport {colors} from '../theme';\nimport {navigationRef, useBackButtonHandler} from './navigationUtilities';\nimport Config from '../config';\nimport {BottomNavigator, TabParamList} from './BottomNavigator';\nimport {HomeScreen} from '../screen/Home/HomeScreen';\nimport * as storage from '../utils/storage';\nimport {LastMoves} from '../screen/Rules/lastmove/LastMoves';\nimport BootSplash from 'react-native-bootsplash';\nimport NavigationWrapper from './navigationWrapper';\nimport {ShowCards} from '../screen/Game/showCards';\n\n// import {SafeAreaView} from 'react-native-safe-area-context';\nexport type AppStackParamList = {\n  // 🔥 Your screens go here\n  splash: undefined;\n  RPM: NavigatorScreenParams<TabParamList>;\n  main: undefined;\n  home: undefined;\n  learn: undefined;\n  players: undefined;\n  playerList: undefined;\n  allplayers: undefined;\n  roles: undefined;\n  roleCards: undefined;\n  lastMoves: undefined;\n  rules: undefined;\n  roleup: undefined;\n  showcards: undefined;\n  gameplay: undefined;\n  gamenight: undefined;\n\n  // IGNITE_GENERATOR_ANCHOR_APP_STACK_PARAM_LIST\n};\nconst exitRoutes = Config.exitRoutes;\n\nexport type AppStackScreenProps<T extends keyof AppStackParamList> =\n  NativeStackScreenProps<AppStackParamList, T>;\n\n// This adds types for useNavigation\n// https://reactnavigation.org/docs/typescript/#specifying-default-types-for-usenavigation-link-ref-etc\n// declare global {\n//   namespace ReactNavigation {\n//     interface RootParamList extends AppStackParamList {}\n//   }\n// }\n// Documentation: https://reactnavigation.org/docs/stack-navigator/\nconst Stack = createNativeStackNavigator<AppStackParamList>();\n// const defaultAuthState = {\n//   hasLoggedInOnce: false,\n//   accessToken: \"\",\n//   refreshToken: \"\",\n// }\nexport type StackNavigation = NativeStackNavigationProp<AppStackParamList>;\n\nconst AppStack = observer(function AppStack() {\n  const {\n    themeStore: {isDark},\n  } = useStore();\n  const navigation = useNavigation<StackNavigation>();\n  const colorScheme = useColorScheme() === 'dark';\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [initialRoute, setInitialRoute] = useState('main');\n  return (\n    <Stack.Navigator\n      initialRouteName=\"RPM\"\n      screenOptions={{\n        headerShown: false,\n        navigationBarColor: colorScheme ? colors.background : colors.background,\n      }}>\n      {/* <Stack.Screen name=\"splash\" component={SplashScreen} /> */}\n      <Stack.Screen name=\"RPM\" component={BottomNavigator} />\n      <Stack.Screen\n        name=\"main\"\n        component={MainScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"learn\"\n        component={LearningScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"home\"\n        component={HomeScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"allplayers\"\n        component={AllPlayers}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"players\"\n        component={PlayersScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"playerList\"\n        component={PlayerListScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"roles\"\n        component={RolesScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"roleCards\"\n        component={RoleLearning}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"lastMoves\"\n        component={LastMoves}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"rules\"\n        component={GameRules}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"roleup\"\n        component={RoleUpScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"showcards\"\n        component={ShowCards}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"gameplay\"\n        component={GamePlay}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"gamenight\"\n        component={GameNightPlay}\n        options={{headerShown: false}}\n      />\n    </Stack.Navigator>\n  );\n});\n\nexport interface NavigationProps\n  extends Partial<React.ComponentProps<typeof NavigationContainer>> {}\n\nexport const AppNavigator = observer(function AppNavigator(\n  props: NavigationProps,\n) {\n  const {\n    themeStore: {setTheme, isDark},\n  } = useStore();\n  const colorScheme = useColorScheme() === 'dark';\n  useBackButtonHandler(routeName => exitRoutes.includes(routeName));\n  const getAppTheme = async () => {\n    await storage.load('theme').then(res => {\n      if (res) {\n        Appearance.setColorScheme(res as ColorSchemeName);\n        setTheme('dark' === res);\n      }\n    });\n  };\n  useEffect(() => {\n    getAppTheme();\n  }, [isDark]);\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      theme={colorScheme ? DarkTheme : DefaultTheme}\n      onReady={() => {\n        BootSplash.hide();\n      }}\n      {...props}>\n      <NavigationWrapper>\n        <AppStack />\n      </NavigationWrapper>\n    </NavigationContainer>\n  );\n});\n\n// export default App;\n","import React, {useEffect, useState} from 'react';\n\nimport {\n  BottomTabScreenProps,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport {CompositeScreenProps, useNavigation} from '@react-navigation/native';\nimport {\n  I18nManager,\n  Platform,\n  Pressable,\n  TextStyle,\n  View,\n  ViewStyle,\n  useColorScheme,\n} from 'react-native';\nimport {useSafeAreaInsets} from 'react-native-safe-area-context';\nimport {colors, spacing} from '../theme';\nimport {AppStackParamList, AppStackScreenProps} from './AppNavigator';\nimport {observer} from 'mobx-react-lite';\nimport {translate} from '../i18n';\nimport {HomeScreen} from '../screen/Home/HomeScreen';\nimport {LearningScreen} from '../screen/Rules/LearningScreen';\nimport {ProfileScreen} from '../screen/Profile/ProfileScreen';\nimport {Icon} from '../components/Icon';\nimport {useStore} from '../constants/useStore';\nimport {AllPlayers} from '../screen/Players/AllPlayers';\nimport SettingScreen from '../screen/Settings/SettingScreen';\nimport * as storage from '../utils/storage';\n\n// import { useStores } from \"app/models\"\n\nexport type TabParamList = {\n  profile: undefined;\n  learning: undefined;\n  playGame: undefined;\n  myPlayers: undefined;\n  settings: undefined;\n};\n\n/**\n * Helper for automatically generating navigation prop types for each route.\n *\n * More info: https://reactnavigation.org/docs/typescript/#organizing-types\n */\nexport type RPMBottomTabScreenProps<T extends keyof TabParamList> =\n  CompositeScreenProps<\n    BottomTabScreenProps<TabParamList, T>,\n    AppStackScreenProps<keyof AppStackParamList>\n  >;\n\nconst Tab = createBottomTabNavigator<TabParamList>();\n\nexport const BottomNavigator = observer(function BottomNavigator() {\n  const {bottom} = useSafeAreaInsets();\n  const {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeStore: {isDark},\n    langStore: {language},\n  } = useStore();\n  const nav = useNavigation();\n  const colorScheme = useColorScheme() === 'dark';\n\n  const [fontFamily, setFontFamily] = useState<string>();\n  const getLang = async () => {\n    await storage.load('language').then(res => {\n      if (res === 'en-US') {\n        I18nManager.forceRTL(true);\n      } else {\n        I18nManager.forceRTL(false);\n      }\n    });\n  };\n\n  // useEffect(() => {\n  //   console.log({language});\n  // }, [language]);\n\n  useEffect(() => {\n    getLang();\n    if (language === 'en') {\n      setFontFamily('Wizard World');\n    } else {\n      setFontFamily('Digi Nofar Bold');\n    }\n  }, []);\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"myPlayers\"\n      backBehavior=\"initialRoute\"\n      screenOptions={{\n        unmountOnBlur: true,\n        headerShown: false,\n        tabBarHideOnKeyboard: false,\n        tabBarStyle: [$tabBar(colors), {height: bottom + 65}],\n        tabBarActiveTintColor: colorScheme\n          ? colors.bottomActiveTint\n          : colors.bottomActiveTint,\n        tabBarInactiveTintColor: colors.bottomInactiveTint,\n        tabBarLabelStyle: $tabBarLabel,\n        tabBarItemStyle: $tabBarItem,\n      }}>\n      <Tab.Screen\n        name=\"learning\"\n        component={LearningScreen}\n        options={{\n          tabBarLabel: `  ${translate('bottomNavigator.learning')}  `,\n          tabBarLabelStyle: {\n            fontFamily: fontFamily,\n            fontSize: language === 'fa' ? 16 : 12,\n\n            lineHeight: 32,\n          },\n          tabBarIcon: ({focused}) => (\n            <Icon\n              name=\"leanpub\"\n              // color={focused ? colors.tint : colors.text}\n              color={\n                focused ? colors.bottomActiveTint : colors.bottomInactiveTint\n              }\n              size={16}\n              style={undefined}\n            />\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"playGame\"\n        component={HomeScreen}\n        options={{\n          headerShown: true,\n          headerBackgroundContainerStyle: {backgroundColor: colors.background},\n          headerStyle: {backgroundColor: colors.background},\n          headerRightContainerStyle: {display: 'none'},\n          headerTitleContainerStyle: {display: 'none'},\n          headerTransparent: true,\n          headerLeft: () => (\n            <View\n              style={{\n                width: 50,\n                height: '100%',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Pressable\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n                onPress={() => {\n                  nav.reset({\n                    index: 0,\n                    routes: [{name: 'RPM' as never}],\n                  });\n                }}>\n                <Icon\n                  name={\n                    language === 'fa'\n                      ? 'chevron-left'\n                      : Platform.OS === 'web'\n                      ? 'chevron-left'\n                      : 'chevron-right'\n                  }\n                  size={25}\n                  style={{}}\n                  color={colors.text}\n                />\n              </Pressable>\n            </View>\n          ),\n          // tabBarAccessibilityLabel: translate(\"bottomNavigator.browseTab\"),\n          tabBarLabel: '',\n          tabBarStyle: {display: 'none'}, // translate(\"bottomNavigator.thirdTab\"),\n          tabBarIcon: () => (\n            <Icon\n              name=\"gamepad\"\n              color={colors.palette.neutral100}\n              size={50}\n              style={{\n                backgroundColor: colors.bottomCenterColor,\n                borderRadius: 35,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                overflow: 'hidden',\n                height: 70,\n                width: 70,\n                padding: '8%',\n              }}\n              // containerStyle={$container(colors)}\n            />\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"myPlayers\"\n        component={AllPlayers}\n        options={{\n          tabBarLabel: translate('bottomNavigator.players'),\n          tabBarLabelStyle: {\n            fontFamily: fontFamily,\n            fontSize: language === 'fa' ? 16 : 12,\n            lineHeight: 32,\n          },\n\n          tabBarIcon: ({focused}) => (\n            <Icon\n              name=\"users\"\n              color={\n                focused ? colors.bottomActiveTint : colors.bottomInactiveTint\n              }\n              size={16}\n              style={undefined}\n            />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"settings\"\n        component={SettingScreen}\n        options={{\n          tabBarLabel: translate('bottomNavigator.settings'),\n          tabBarLabelStyle: {\n            fontFamily: fontFamily,\n            fontSize: language === 'fa' ? 16 : 12,\n            lineHeight: 32,\n          },\n\n          tabBarIcon: ({focused}) => (\n            <Icon\n              name=\"cog\"\n              color={\n                focused ? colors.bottomActiveTint : colors.bottomInactiveTint\n              }\n              size={16}\n              style={undefined}\n            />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n});\n\nconst $tabBar = (colors: any): ViewStyle => ({\n  backgroundColor: colors.bottomTabBarBackground,\n  borderTopColor: colors.transparent,\n});\n\nconst $tabBarItem: ViewStyle = {\n  paddingTop: spacing.md,\n};\n\nconst $tabBarLabel: TextStyle = {\n  fontSize: 12,\n  lineHeight: 16,\n  flex: 1,\n};\n\nconst $container = (colors: any): ViewStyle => ({\n  borderRadius: 10,\n  backgroundColor: colors.tint,\n  bottom: 10,\n  padding: 10,\n});\n// const $midleIconStyle: ImageStyle = {\n//   resizeMode: 'contain',\n// };\n","export * from \"./AppNavigator\"\nexport * from \"./navigationUtilities\"\n// export other navigators from here\n","import {useState, useEffect, useRef} from 'react';\nimport {BackHandler, Platform} from 'react-native';\nimport {\n  NavigationState,\n  createNavigationContainerRef,\n} from '@react-navigation/native';\nimport Config from '../config';\nimport type {PersistNavigationConfig} from '../config/config.base';\nimport {useIsMounted} from '../utils/useIsMounted';\nimport type {AppStackParamList, NavigationProps} from './AppNavigator';\n\nimport * as storage from '../utils/storage';\n\ntype Storage = typeof storage;\n\n/**\n * Reference to the root App Navigator.\n *\n * If needed, you can use this to access the navigation object outside of a\n * `NavigationContainer` context. However, it's recommended to use the `useNavigation` hook whenever possible.\n * @see https://reactnavigation.org/docs/navigating-without-navigation-prop/\n *\n * The types on this reference will only let you reference top level navigators. If you have\n * nested navigators, you'll need to use the `useNavigation` with the stack navigator's ParamList type.\n */\nexport const navigationRef = createNavigationContainerRef<AppStackParamList>();\n\n/**\n * Gets the current screen from any navigation state.\n */\nexport function getActiveRouteName(\n  state: ReturnType<typeof navigationRef.getRootState>,\n): keyof AppStackParamList {\n  const route = state.routes[state.index];\n\n  // Found the active route -- return the name\n  if (!route.state) return route.name as keyof AppStackParamList;\n\n  // Recursive call to deal with nested routers\n  return getActiveRouteName(route.state as NavigationState<AppStackParamList>);\n}\n\n/**\n * Hook that handles Android back button presses and forwards those on to\n * the navigation or allows exiting the app.\n */\nexport function useBackButtonHandler(canExit: (routeName: string) => boolean) {\n  // ignore if iOS ... no back button!\n  if (Platform.OS === 'ios') return;\n\n  // The reason we're using a ref here is because we need to be able\n  // to update the canExit function without re-setting up all the listeners\n  const canExitRef = useRef(canExit);\n\n  useEffect(() => {\n    canExitRef.current = canExit;\n  }, [canExit]);\n\n  useEffect(() => {\n    // We'll fire this when the back button is pressed on Android.\n    const onBackPress = () => {\n      if (!navigationRef.isReady()) {\n        return false;\n      }\n\n      // grab the current route\n      const routeName = getActiveRouteName(navigationRef.getRootState());\n\n      // are we allowed to exit?\n      if (canExitRef.current(routeName)) {\n        // exit and let the system know we've handled the event\n        // BackHandler.exitApp();\n        return true;\n      }\n\n      // we can't exit, so let's turn this into a back action\n      if (navigationRef.canGoBack()) {\n        navigationRef.goBack();\n        return true;\n      }\n\n      return false;\n    };\n\n    // Subscribe when we come to life\n    BackHandler.addEventListener('hardwareBackPress', onBackPress);\n\n    // Unsubscribe when we're done\n    return () =>\n      BackHandler.removeEventListener('hardwareBackPress', onBackPress);\n  }, []);\n}\n\n/**\n * This helper function will determine whether we should enable navigation persistence\n * based on a config setting and the __DEV__ environment (dev or prod).\n */\nfunction navigationRestoredDefaultState(\n  persistNavigation: PersistNavigationConfig,\n) {\n  if (persistNavigation === 'always') return false;\n  if (persistNavigation === 'dev' && __DEV__) return false;\n  if (persistNavigation === 'prod' && !__DEV__) return false;\n\n  // all other cases, disable restoration by returning true\n  return true;\n}\n\n/**\n * Custom hook for persisting navigation state.\n */\nexport function useNavigationPersistence(\n  storage: Storage,\n  persistenceKey: string,\n) {\n  const [initialNavigationState, setInitialNavigationState] =\n    useState<NavigationProps['initialState']>();\n  const isMounted = useIsMounted();\n\n  const initNavState = navigationRestoredDefaultState(Config.persistNavigation);\n  const [isRestored, setIsRestored] = useState(initNavState);\n\n  const routeNameRef = useRef<keyof AppStackParamList | undefined>();\n\n  const onNavigationStateChange: NavigationProps['onStateChange'] = state => {\n    const previousRouteName = routeNameRef.current;\n    const currentRouteName = getActiveRouteName(state);\n\n    if (previousRouteName !== currentRouteName) {\n      // track screens.\n      // if (__DEV__) {\n      //   console.tron.log(currentRouteName);\n      // }\n    }\n\n    // Save the current route name for later comparison\n    routeNameRef.current = currentRouteName;\n\n    // Persist state to storage\n    storage.save(persistenceKey, state);\n  };\n\n  const restoreState = async () => {\n    try {\n      const state = (await storage.load(persistenceKey)) as\n        | NavigationProps['initialState']\n        | null;\n      if (state) setInitialNavigationState(state);\n    } finally {\n      if (isMounted()) setIsRestored(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!isRestored) restoreState();\n  }, [isRestored]);\n\n  return {\n    onNavigationStateChange,\n    restoreState,\n    isRestored,\n    initialNavigationState,\n  };\n}\n\n/**\n * use this to navigate without the navigation\n * prop. If you have access to the navigation prop, do not use this.\n * @see https://reactnavigation.org/docs/navigating-without-navigation-prop/\n */\nexport function navigate(...args: Parameters<typeof navigationRef.navigate>) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(...args);\n  }\n}\n\n/**\n * This function is used to go back in a navigation stack, if it's possible to go back.\n * If the navigation stack can't go back, nothing happens.\n * The navigationRef variable is a React ref that references a navigation object.\n * The navigationRef variable is set in the App component.\n */\nexport function goBack() {\n  if (navigationRef.isReady() && navigationRef.canGoBack()) {\n    navigationRef.goBack();\n  }\n}\n\n/**\n * resetRoot will reset the root navigation state to the given params.\n */\nexport function resetRoot(\n  state: Parameters<typeof navigationRef.resetRoot>[0] = {index: 0, routes: []},\n) {\n  if (navigationRef.isReady()) {\n    navigationRef.resetRoot(state);\n  }\n}\n","/**\n * @format\n * @flow strict-local\n */\n\nimport {useNavigation} from '@react-navigation/native';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {BackHandler, Alert, Pressable, View, StyleSheet} from 'react-native';\nimport {Modal} from '../components/Modal';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {backgroundColor} from '../constants/Constants';\nimport Text from '../components/Text';\nimport {colors} from '../theme';\nimport {translate} from '../i18n';\n\nconst NavigationWrapper = ({children}) => {\n  const [isBackHandled, setIsBackHandled] = useState(false);\n  const nav = useNavigation();\n  const exitRef = useRef<BottomSheetModal>(null);\n\n  useEffect(() => {\n    const backHandler = BackHandler.addEventListener(\n      'hardwareBackPress',\n      handleBackPress,\n    );\n\n    return () => backHandler.remove();\n  }, []);\n\n  const handleBackPress = () => {\n    if (!isBackHandled) {\n      setIsBackHandled(true);\n      if (nav.canGoBack() === false) {\n        exitRef?.current?.present();\n\n        return true;\n      }\n\n      nav.goBack();\n      // Your custom navigation logic here (e.g., show a confirmation dialog, go back to the previous screen, etc.)\n      // Example:\n\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    // Pass the children components and navigation prop to the wrapper\n    <>\n      {children}\n      <Modal\n        modalRef={exitRef}\n        index={0}\n        onDismiss={() => exitRef?.current?.close()}\n        snapPoints={['30%']}\n        backgroundStyle={{\n          backgroundColor: colors.cardBackground,\n        }}>\n        <View style={styles.selectImageContainer}>\n          <View>\n            <Text style={{fontSize: 20}}>\n              {translate('game.doYouWantToCloseApp')}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: 'row',\n              width: '80%',\n              justifyContent: 'space-around',\n            }}>\n            <Pressable\n              onPress={() => {\n                BackHandler.exitApp();\n              }}\n              style={[\n                styles.addImageBtnCard,\n                {\n                  backgroundColor: colors.background,\n                },\n              ]}>\n              <Text>{translate('common.ok')}</Text>\n            </Pressable>\n            <Pressable\n              onPress={() => {\n                setIsBackHandled(false);\n                exitRef?.current?.close();\n              }}\n              style={[\n                styles.addImageBtnCard,\n                {\n                  backgroundColor: colors.background,\n                },\n              ]}>\n              <Text>{translate('common.cancel')}</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  selectImageContainer: {\n    flexDirection: 'column',\n    height: '80%',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  addImageBtnCard: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    width: 80,\n    height: 40,\n  },\n});\n\nexport default NavigationWrapper;\n","import React, {\n  StrictMode,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport BottomSheet, {\n  BottomSheetBackdrop,\n  BottomSheetModal,\n  BottomSheetModalProvider,\n  BottomSheetView,\n} from '@gorhom/bottom-sheet';\nimport {DWidth, backgroundColor, getDayWord} from '../../constants/Constants';\nimport {FlatList, Image, Pressable, StyleSheet, View} from 'react-native';\nimport {useNavigation} from '@react-navigation/native';\nimport {useStore} from '../../constants/useStore';\nimport {Text} from '../../components/Text';\n\nconst GameNightPlay = () => {\n  const nav = useNavigation();\n  const {gameStore} = useStore();\n  const bottomSheetRef = useRef(null);\n  const night = gameStore.night;\n  const nightStory = gameStore.nightStory;\n  const rolePlayers = gameStore.rolePlayers;\n\n  const [players, setPlayers] = useState();\n  const [nightWord, setNightWord] = useState('');\n  const [toNight, setToNight] = useState([]);\n  const [sheetIndex, setSheetIndex] = useState(1);\n\n  const snapPoints = useMemo(() => [50, 500], []);\n  const handleSheetChanges = useCallback(index => {\n    setSheetIndex(index);\n  }, []);\n\n  useEffect(() => {\n    const n = getDayWord(night);\n    setNightWord(n);\n  }, [night]);\n\n  useEffect(() => {\n    if (nightStory && nightWord) {\n      const t = nightStory.filter(el => el.name.includes(nightWord));\n      setToNight(t);\n    }\n  }, [nightStory, nightWord]);\n\n  useEffect(() => {\n    if (rolePlayers) {\n      setPlayers(rolePlayers);\n      bottomSheetRef?.current?.snapToIndex(1);\n    }\n  }, [rolePlayers]);\n\n  const renderBackdrop = useCallback(\n    props => (\n      <BottomSheetBackdrop\n        onPress={() => {\n          bottomSheetRef?.current?.snapToIndex(0);\n        }}\n        pressBehavior={'collapse'}\n        {...props}\n        disappearsOnIndex={-1}\n        appearsOnIndex={0}\n        opacity={0.6}\n        animatedIndex={{value: 0}}\n      />\n    ),\n    [],\n  );\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: backgroundColor,\n        paddingHorizontal: 20,\n      }}>\n      <FlatList\n        data={players}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.flatContainer}\n        numColumns={3}\n        ListEmptyComponent={() => {\n          return (\n            <View style={styles.emptyList}>\n              <Image\n                source={require('../../assets/images/empty1.png')}\n                style={{width: '50%', height: 300}}\n              />\n              <Text style={{fontSize: 20, color: 'white'}}>\n                هیج بازیکنی نداری!\n              </Text>\n            </View>\n          );\n        }}\n        renderItem={({item}) => {\n          return (\n            <Pressable onPress={() => {}} style={styles.renderItem}>\n              <View style={styles.playerIcon}>\n                <Image\n                  source={\n                    item?.role?.image\n                      ? item?.role?.image\n                      : require('../../assets/images/player2.png')\n                  }\n                  style={{width: 80, height: 80}}\n                />\n              </View>\n              <Text style={{fontSize: 16, color: 'white'}}>\n                {item?.player?.name}\n              </Text>\n            </Pressable>\n          );\n        }}\n      />\n      <BottomSheet\n        enablePanDownToClose={false}\n        ref={bottomSheetRef}\n        index={0}\n        backdropComponent={sheetIndex === 1 ? renderBackdrop : null}\n        onDismiss={() => {\n          bottomSheetRef?.current?.snapToIndex(0);\n        }}\n        style={styles.shadow}\n        // handleStyle={styles.handle}\n        snapPoints={snapPoints}\n        onChange={handleSheetChanges}\n        //   backgroundStyle={backgroundStyle}\n      >\n        <BottomSheetView style={[styles.contentContainer]}>\n          <Text style={{fontSize: 20, marginBottom: 10}}>شب {nightWord}</Text>\n          <Text style={{fontSize: 18, marginBottom: 10}}>{toNight[0]?.jobs[0]?.role} بیدار شود</Text>\n          <Text style={{fontSize: 15, marginBottom: 10}}>{toNight[0]?.description}</Text>\n        </BottomSheetView>\n      </BottomSheet>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: 50,\n    alignItems: 'flex-end',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  flatContainer: {\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    // elevation: 5,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 80,\n  },\n  renderItem: {\n    width: DWidth / 3.2,\n    height: 105,\n    marginBottom: 15,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerIcon: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    overflow: 'hidden',\n  },\n  contentContainer: {\n    flex: 1,\n    paddingHorizontal: 15,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  shadow: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 8,\n    },\n    shadowOpacity: 0.46,\n    shadowRadius: 11.14,\n\n    elevation: 10,\n  },\n  handle: {\n    height: 0,\n    display: 'none',\n  },\n});\nexport {GameNightPlay};\n","/**\n * @format\n * @flow strict-local\n */\nimport React, {useEffect, useRef, useState} from 'react';\nimport {\n  Alert,\n  Animated,\n  BackHandler,\n  FlatList,\n  Image,\n  Platform,\n  Pressable,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport Text from '../../components/Text';\nimport IonIcon from 'react-native-vector-icons/Ionicons';\nimport ReactNativeModal from 'react-native-modal';\nimport {\n  DHeight,\n  DWidth,\n  backgroundColor,\n  getDayWord,\n} from '../../constants/Constants';\nimport {useIsFocused, useNavigation} from '@react-navigation/native';\nimport {useStore} from '../../constants/useStore';\nimport {PlayerDetail} from './PlayerDetail';\nimport {Modal} from '../../components/Modal';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {translate} from '../../i18n';\nimport {colors, spacing} from '../../theme';\nimport {SceneMap, TabView} from 'react-native-tab-view';\nimport {InsideGame} from './InsideGame';\nimport {Sitout} from './Sitout';\nimport {Icon} from '../../components/Icon';\n// import ZarinPalCheckout from 'zarinpal-checkout';\n\nconst GamePlay = () => {\n  const nav = useNavigation();\n  const isFocused = useIsFocused();\n  const {\n    gameStore,\n    playerStore,\n    roleStore,\n    langStore: {language},\n  } = useStore();\n  const players = gameStore.rolePlayers;\n  const lastMoveCards = gameStore.lastMoveCards;\n  const gameDay = gameStore.day;\n  const exitRef = useRef<BottomSheetModal>(null);\n  // const [showPayment, setShowPayment] = useState(true);\n\n  const [lastMoves, setLastMoves] = useState([]);\n  const [showLastCard, setShowLastCard] = useState(false);\n  const [clickedCard, setClickedCard] = useState();\n  const [day, setDay] = useState('');\n  // const [hasToken, setToken] = useState(false);\n\n  // useEffect(() => {\n  //   if (!hasToken) {\n  //     setShowPayment(true);\n  //   } else {\n  //     setShowPayment(false);\n  //   }\n  // }, [hasToken]);\n\n  useEffect(() => {\n    if (gameStore.gameType === 'jack') {\n      setLastMoves(gameStore.jackLastMove);\n    } else {\n      setLastMoves(gameStore.nustraLastMove);\n    }\n  }, [gameStore]);\n\n  useEffect(() => {\n    const word = getDayWord(gameDay);\n    setDay(word);\n  }, [gameDay]);\n\n  useEffect(() => {\n    if (lastMoveCards) {\n      const arr = [...lastMoveCards];\n      let currentIndex = arr.length,\n        randomIndex;\n\n      // While there remain elements to shuffle.\n      while (currentIndex != 0) {\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        // And swap it with the current element.\n        [arr[currentIndex], arr[randomIndex]] = [\n          arr[randomIndex],\n          arr[currentIndex],\n        ];\n      }\n      setLastMoves(arr);\n    }\n  }, [lastMoveCards]);\n\n  const removeItem = () => {\n    setShowLastCard(false);\n    if (clickedCard) {\n      const newCards = lastMoves.filter(el => el.id !== clickedCard.id);\n      setLastMoves(newCards);\n      // gameStore.updateLastCards(newCards);\n    }\n  };\n\n  const handleGoBack = () => {\n    return true;\n  };\n  useEffect(() => {\n    if (isFocused) {\n      BackHandler.addEventListener('hardwareBackPress', handleGoBack);\n    }\n    return () => {\n      BackHandler.removeEventListener('hardwareBackPress', handleGoBack);\n    };\n  }, [isFocused]);\n\n  const renderScene = SceneMap({\n    inside: InsideGame,\n    outside: Sitout,\n  });\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    {key: 'inside', title: translate('game.insideGame')},\n    {key: 'outside', title: translate('game.sitoutGame')},\n  ]);\n\n  // const payment = () => {\n  //   const zarinpal = ZarinPalCheckout.create(\n  //     '41a80d95-7a88-4fad-8ad8-40be0c654c62',\n  //     false,\n  //   );\n\n  //   zarinpal\n  //     .PaymentRequest({\n  //       Amount: '1000', // In Tomans\n  //       CallbackURL: 'https://your-safe-api/example/zarinpal/validate',\n  //       Description: 'A Payment from Godfather',\n  //       Email: 'farshad.shayan1996@gmail.com',\n  //       Mobile: '09190396649',\n  //     })\n  //     .then(response => {\n  //       if (response.status === 100) {\n  //         console.log(response.url);\n  //       }\n  //     })\n  //     .catch(err => {\n  //       console.error(err);\n  //     });\n  // };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        width: '100%',\n        paddingTop: 10,\n        backgroundColor: colors.background,\n      }}>\n      <View style={styles.header}>\n        <Text style={{fontSize: 20}}>{translate('game.day')}</Text>\n        <View\n          style={{\n            flexDirection: 'row-reverse',\n            width: '70%',\n            alignItems: 'center',\n            justifyContent: 'space-around',\n          }}>\n          <Pressable\n            onPress={() => {\n              setShowLastCard(true);\n            }}\n            style={{\n              backgroundColor: colors.cardBackground,\n              elevation: 2,\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 8,\n              width: 100,\n              // padding: 10,\n            }}>\n            <Text style={{fontSize: 20}}>{translate('game.lastMove')}</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              // nav.navigate('gamenight')\n            }}>\n            <IonIcon name=\"sunny-outline\" size={30} color={'white'} />\n          </Pressable>\n          <Pressable\n            style={{widht: 50}}\n            onPress={() => exitRef?.current?.present()}>\n            <Icon\n              name={\n                language === 'fa'\n                  ? 'chevron-left'\n                  : Platform.OS !== 'web'\n                  ? 'chevron-right'\n                  : 'chevron-left'\n              }\n              size={25}\n              color={colors.text}\n            />\n          </Pressable>\n        </View>\n      </View>\n      <TabView\n        navigationState={{index, routes}}\n        renderScene={renderScene}\n        onIndexChange={setIndex}\n        key={index}\n        renderTabBar={props => {\n          const inputRange = props.navigationState.routes.map((x, i) => i);\n          return (\n            <View style={styles.tabBar}>\n              {props.navigationState.routes.map((route, i) => {\n                const opacity = props.position.interpolate({\n                  inputRange,\n                  outputRange: inputRange.map(inputIndex =>\n                    inputIndex === i ? 1 : 0.3,\n                  ),\n                });\n\n                return (\n                  <TouchableOpacity\n                    style={styles.tabItem}\n                    key={route.key}\n                    onPress={() => {\n                      setIndex(i);\n                    }}>\n                    <Animated.Text\n                      style={{\n                        opacity,\n                        color: colors.text,\n                        fontSize: language === 'fa' ? spacing.lg : spacing.md,\n                        // lineHeight: 32,\n                        paddingHorizontal: Platform.OS === 'ios' ? 12 : 5,\n                        paddingTop: Platform.OS === 'ios' ? 12 : 10,\n                        // padding: 10,\n                        fontFamily:\n                          language === 'fa'\n                            ? 'Digi Nofar Bold'\n                            : 'Wizard World',\n                      }}>\n                      {route.title}\n                    </Animated.Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          );\n        }}\n        initialLayout={{width: layout.width}}\n      />\n\n      <ReactNativeModal\n        isVisible={showLastCard}\n        deviceWidth={'100%'}\n        deviceHeight={DHeight}\n        onBackButtonPress={() => {\n          setShowLastCard(!showLastCard);\n        }}\n        onBackdropPress={() => {\n          setShowLastCard(!showLastCard);\n        }}\n        style={[styles.modalContainer]}>\n        <View\n          style={[\n            styles.modalView,\n            {\n              backgroundColor: colors.cardBackground,\n              width: DWidth,\n              height: DHeight * 0.9,\n              padding: 10,\n            },\n          ]}>\n          <View>\n            <Pressable\n              onPress={() => removeItem()}\n              style={{\n                backgroundColor: 'white',\n                width: 40,\n                height: 40,\n                borderRadius: 20,\n                marginBottom: 20,\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}>\n              <Icon name=\"times\" size={18} color={'black'} />\n            </Pressable>\n          </View>\n          <FlatList\n            data={lastMoves}\n            keyExtractor={item => item.id}\n            renderItem={({item, index}) => {\n              return (\n                <CardList\n                  item={item}\n                  setClickedCard={setClickedCard}\n                  index={index}\n                  key={item.id}\n                />\n              );\n            }}\n          />\n        </View>\n      </ReactNativeModal>\n\n      <Modal\n        modalRef={exitRef}\n        index={0}\n        onDismiss={() => exitRef?.current?.close()}\n        snapPoints={['30%']}\n        backgroundStyle={{\n          backgroundColor: colors.cardBackground,\n        }}>\n        <View style={styles.selectImageContainer}>\n          <View>\n            <Text style={{fontSize: 20}}>\n              {translate('game.doYouWantToCloseGame')}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: 'row',\n              width: '80%',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}>\n            <Pressable\n              onPress={() => {\n                gameStore.gameReset();\n                playerStore.resetPlayers();\n                roleStore.resetRoles();\n                nav.navigate('RPM');\n              }}\n              style={[\n                styles.addImageBtnCard,\n                {\n                  backgroundColor: colors.background,\n                },\n              ]}>\n              <Text>{translate('game.closeIt')}</Text>\n            </Pressable>\n            <Pressable\n              onPress={() => {\n                exitRef?.current?.close();\n              }}\n              style={[\n                styles.addImageBtnCard,\n                {\n                  backgroundColor: colors.background,\n                },\n              ]}>\n              <Text>{translate('common.cancel')}</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst CardList = ({item, setClickedCard, index}) => {\n  const [isShowLastMove, setIsShowLastMove] = useState(false);\n\n  return (\n    <Pressable\n      key={item.id}\n      onPress={() => {\n        setClickedCard(item);\n        setIsShowLastMove(!isShowLastMove);\n      }}\n      style={{\n        width: DWidth * 0.8,\n        // marginLeft: 10,\n        // height: 140,\n        paddingHorizontal: 20,\n        marginBottom: 15,\n        borderRadius: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: colors.background,\n      }}>\n      {isShowLastMove ? (\n        <>\n          <Text style={{fontSize: 22, textAlign: 'center'}}>\n            {item.description}\n          </Text>\n          <Text style={{fontSize: 22}}>{item.title}</Text>\n        </>\n      ) : (\n        <Text style={{fontSize: 30}}>{index + 1}</Text>\n      )}\n    </Pressable>\n  );\n};\nconst styles = StyleSheet.create({\n  flatContainer: {\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  header: {\n    width: '100%',\n    height: 50,\n    marginTop: 50,\n    alignItems: 'center',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    width: DWidth * 0.3,\n    height: 80,\n    marginBottom: 15,\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    marginLeft: '25%',\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n    height: 300,\n  },\n  modalView: {\n    width: DWidth / 1.5,\n    height: DHeight / 2.2,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    borderRadius: 10,\n    elevation: 10,\n  },\n  selectImageContainer: {\n    flexDirection: 'column',\n    height: '100%',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  addImageBtnCard: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    width: '45%',\n    height: 50,\n    marginBottom: 15,\n  },\n  tabBar: {\n    flexDirection: 'row',\n    // paddingTop: 50,\n  },\n  tabItem: {\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // padding: 16,\n  },\n});\n\nexport {GamePlay};\n","import {observer} from 'mobx-react';\nimport React, {useEffect, useState} from 'react';\nimport {FlatList, Image, StyleSheet, View} from 'react-native';\nimport {PlayerDetail} from './PlayerDetail';\nimport {DHeight, DWidth} from '../../constants/Constants';\nimport {colors} from '../../theme';\nimport {useStore} from '../../constants/useStore';\nimport ReactNativeModal from 'react-native-modal';\nimport Text from '../../components/Text';\nimport {showToast} from '../../utils/snackbar';\nimport {translate, translateWithOptions} from '../../i18n';\nimport {Modal} from '../../components/Modal';\n\nconst InsideGame = observer(() => {\n  const {gameStore} = useStore();\n  const players = gameStore.rolePlayers;\n\n  const [gamers, setGamers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [removedPlayers, setRemovedPlayers] = useState([]);\n  const [detailPlayer, setDetailPlayer] = useState();\n  const [showRole, setShowRole] = useState(false);\n\n  const removeDeadPlayer = p => {\n    const removed = [...removedPlayers];\n    removed.push(p);\n    const arr = gamers.filter(el => el?.player?.id !== p?.player?.id);\n    gameStore.updateRolePlayers(arr);\n    setRemovedPlayers(removed);\n    gameStore.updateRemovedPlayers(removed);\n    showToast({\n      text: translateWithOptions('game.playerRemovedFromGame', {\n        player: p.player.name,\n      }),\n      duration: 5000,\n      mode: 'warning',\n    });\n  };\n  useEffect(() => {\n    if (players) {\n      setGamers(players);\n    }\n  }, [players]);\n  return (\n    <View style={{flex: 1, width: '100%', paddingBottom: 20}}>\n      <FlatList\n        data={gamers}\n        keyExtractor={item => item.player.id}\n        // contentContainerStyle={{\n        //   width: DWidth * 0.9,\n        //   //   marginTop: 20,\n        //   //   marginBottom: 50,\n        //   //   minHeight: DHeight * 0.6,\n        //   marginHorizontal: DWidth * 0.05,\n        // }}\n        renderItem={({item, index}) => {\n          return (\n            <PlayerDetail\n              key={item.player.id}\n              item={item}\n              setRemovePlayer={p => removeDeadPlayer(p)}\n              index={index}\n              setDetailPlayer={setDetailPlayer}\n              setShowModal={setShowModal}\n              showRole={showRole}\n            />\n          );\n        }}\n      />\n\n      <ReactNativeModal\n        isVisible={showModal}\n        deviceWidth={DWidth}\n        deviceHeight={DHeight}\n        onBackButtonPress={() => {\n          setShowModal(!showModal);\n        }}\n        onBackdropPress={() => {\n          setShowModal(!showModal);\n        }}>\n        <View\n          style={[\n            styles.modalView,\n            {\n              backgroundColor: colors.cardBackground,\n            },\n          ]}>\n          <View\n            style={{\n              width: DWidth / 2,\n              height: 250,\n              justifyContent: 'center',\n              alignItems: 'center',\n              overflow: 'hidden',\n              borderRadius: 10,\n            }}>\n            <Image\n              source={detailPlayer?.role.image}\n              style={{width: '100%', height: '100%'}}\n            />\n          </View>\n          <View\n            style={{\n              width: DWidth / 2,\n              justifyContent: 'space-around',\n              alignItems: 'center',\n            }}>\n            <Text style={{fontSize: 26}}>{detailPlayer?.role.title}</Text>\n            <Text style={{fontSize: 24}}>{detailPlayer?.player.name}</Text>\n          </View>\n        </View>\n      </ReactNativeModal>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    marginLeft: '25%',\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n    height: 300,\n  },\n  modalView: {\n    width: DWidth / 1.5,\n    height: DHeight / 1.75,\n    marginHorizontal: DWidth / 8.5,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    borderRadius: 10,\n    elevation: 10,\n  },\n});\n\nexport {InsideGame};\n","import React, {useEffect, useState} from 'react';\nimport {Image, Pressable, StyleSheet, View} from 'react-native';\nimport {DWidth} from '../../constants/Constants';\nimport Text from '../../components/Text';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {colors} from '../../theme';\nimport {translate} from '../../i18n';\nimport {showToast} from '../../utils/snackbar';\n\nconst PlayerDetail = ({\n  index,\n  setDetailPlayer,\n  setShowModal,\n  item,\n  setRemovePlayer,\n  showRole,\n}) => {\n  const [isSilent, setSilent] = useState(false);\n  const [isShot, setShot] = useState(false);\n  // const [hasShield, setHasShield] = useState(item.role.shield);\n  const [hasAbility, setHasAbility] = useState(true);\n\n  return (\n    <View\n      style={[\n        styles.renderItem,\n        {\n          backgroundColor: colors.cardBackground,\n        },\n      ]}\n      key={index}>\n      <Pressable\n        onPress={() => {\n          setDetailPlayer(item);\n          setShowModal(true);\n        }}\n        style={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          width: '28%',\n          height: 60,\n        }}>\n        {item?.role?.shield ? (\n          <View\n            style={{\n              position: 'absolute',\n              top: -30,\n              right: -10,\n              zIndex: 10,\n              backgroundColor: colors.special,\n              borderRadius: 10,\n              padding: 5,\n            }}>\n            <Icon name={'shield'} color={colors.text} size={20} />\n          </View>\n        ) : null}\n        <Image\n          source={\n            showRole\n              ? item.role.image\n              : require('../../assets/images/player2.png')\n          }\n          resizeMode=\"contain\"\n          style={{width: 60, height: 60, borderRadius: 10}}\n        />\n        <Text style={{fontSize: 18}}>{item.player.name}</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          setSilent(!isSilent);\n        }}\n        style={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          height: 60,\n        }}>\n        <Icon\n          name={isSilent ? 'volume-off' : 'volume-up'}\n          color={colors.text}\n          size={30}\n        />\n        <Text>\n          {isSilent ? translate('game.silent') : translate('game.speak')}\n        </Text>\n      </Pressable>\n\n      <View\n        onPress={() => {\n          setSilent(!isSilent);\n        }}\n        style={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          height: 60,\n        }}></View>\n\n      <Pressable\n        onPress={() => {\n          setHasAbility(!hasAbility);\n        }}\n        style={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          height: 60,\n        }}>\n        <Icon\n          name={'ban'}\n          color={hasAbility ? colors.textDim : colors.text}\n          size={30}\n        />\n        <Text style={{color: hasAbility ? colors.textDim : colors.text}}>\n          {translate('game.disability')}\n        </Text>\n      </Pressable>\n\n      <Pressable\n        onPress={() => {\n          setRemovePlayer(item);\n          showToast({\n            mode: 'info',\n            text: 'بازیکن از بازی خارج شد،در صورتی که کنستانتین نباشد و کنستانتین خارج هم نشده باشد می توانید بازیکن را به بازی برگردانید',\n          });\n          // setDead(!isDead);\n        }}\n        style={{\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          height: 60,\n        }}>\n        <Icon name={'trash'} color={colors.text} size={30} />\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  renderItem: {\n    // width: DWidth * 0.9,\n    height: 120,\n    marginBottom: 10,\n    borderRadius: 15,\n    padding: 10,\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\n\nexport {PlayerDetail};\n","import React, {useEffect, useState} from 'react';\nimport {FlatList, Image, Pressable, StyleSheet, View} from 'react-native';\nimport Text from '../../components/Text';\nimport {DHeight, DWidth} from '../../constants/Constants';\nimport {translate} from '../../i18n';\nimport {useStore} from '../../constants/useStore';\nimport {colors} from '../../theme';\n\nconst Sitout = () => {\n  const {gameStore} = useStore();\n  const players = gameStore.removedPlayers;\n  const gamers = gameStore.rolePlayers;\n\n  const [removedPlayers, setRemovedPlayers] = useState([]);\n  // const [returnDisable, setReturnDisable] = useState(false);\n  const returnPlayer = item => {\n    const arr = [...gamers];\n    arr.push(item);\n    const removed = removedPlayers.filter(\n      el => el?.player?.id !== item?.player?.id,\n    );\n    gameStore.updateRolePlayers(arr);\n    setRemovedPlayers(removed);\n    gameStore.updateRemovedPlayers(removed);\n    // setReturnDisable(true);\n  };\n  useEffect(() => {\n    if (players) {\n      setRemovedPlayers(players);\n    }\n  }, [players]);\n  return (\n    <FlatList\n      data={removedPlayers}\n      keyExtractor={(index, item) => item.id}\n      numColumns={3}\n      contentContainerStyle={{\n        width: DWidth * 0.9,\n        // height: DHeight * 0.3,\n        // marginTop: 20,\n        marginHorizontal: DWidth * 0.05,\n      }}\n      ListEmptyComponent={() => {\n        return (\n          <View style={[styles.emptyList, {justifyContent: 'flex-start'}]}>\n            <Image\n              source={require('../../assets/images/empty1.png')}\n              style={{width: '30%', height: 100}}\n            />\n            <Text style={{fontSize: 20}}>\n              {translate('game.noBodyRemovedFromGame')}{' '}\n            </Text>\n          </View>\n        );\n      }}\n      renderItem={({item, index}) => {\n        return (\n          <Pressable\n            style={[\n              styles.renderItem,\n              {\n                flexDirection: 'column',\n              },\n            ]}\n            key={index}\n            onPress={() => {\n              returnPlayer(item);\n            }}>\n            <Image\n              source={require('../../assets/images/player2.png')}\n              style={{width: 60, height: 60, borderRadius: 10}}\n            />\n            <Text>{item.player.name}</Text>\n          </Pressable>\n        );\n      }}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    width: DWidth * 0.3,\n    height: 80,\n    marginBottom: 15,\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n});\n\nexport {Sitout};\n","import React, {useEffect, useState} from 'react';\nimport {FlatList, Image, Pressable, StyleSheet, View} from 'react-native';\nimport Text from '../../components/Text';\nimport {useStore} from '../../constants/useStore';\nimport {DHeight, DWidth} from '../../constants/Constants';\nimport ReactNativeModal from 'react-native-modal';\nimport {useNavigation} from '@react-navigation/native';\nimport {translate} from '../../i18n';\nimport Header from '../../components/Header';\nimport {colors, spacing} from '../../theme';\n\nconst ShowCards = () => {\n  const {\n    gameStore,\n    langStore: {language},\n  } = useStore();\n  const nav = useNavigation();\n  const rolePlayers = gameStore.rolePlayers;\n  const [gamers, setGamers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [detailPlayer, setDetailPlayer] = useState();\n\n  useEffect(() => {\n    if (rolePlayers) {\n      setGamers(rolePlayers);\n    }\n  }, [rolePlayers]);\n\n  const endShowCard = () => {\n    setShowModal(false);\n    const arr = gamers.filter(\n      el => el.player.name !== detailPlayer.player.name,\n    );\n    setGamers(arr);\n    setDetailPlayer(null);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        width: '100%',\n        paddingVertical: 20,\n        marginBottom: 20,\n        backgroundColor: colors.background,\n      }}>\n      <Header title={translate('game.showRoles')} />\n      <FlatList\n        data={gamers}\n        keyExtractor={item => item.player.id}\n        numColumns={3}\n        // contentContainerStyle={{\n        //   // width: DWidth * 0.9,\n        //   marginTop: 20,\n        //   // marginHorizontal: DWidth * 0.05,\n        // }}\n        ListEmptyComponent={() => {\n          return (\n            <View style={styles.emptyList}>\n              <Image\n                source={require('../../assets/images/empty1.png')}\n                style={{width: 100, height: 150}}\n              />\n              <Text style={{fontSize: 20, marginTop: 40}}>\n                {translate('game.allPlayersSeenTheirRoles')}\n              </Text>\n            </View>\n          );\n        }}\n        renderItem={({item}) => {\n          return (\n            <Pressable\n              style={[\n                styles.renderItem,\n                {\n                  marginBottom: language === 'fa' ? 30 : 45,\n                },\n              ]}\n              key={item.player.id}\n              onPress={() => {\n                setDetailPlayer(item);\n                setShowModal(true);\n              }}>\n              <Image\n                source={require('../../assets/images/player2.png')}\n                style={{width: 100, height: 100, borderRadius: 10}}\n              />\n              <Text>{item.player.name}</Text>\n            </Pressable>\n          );\n        }}\n      />\n      <Pressable\n        style={{\n          width: 200,\n          height: 40,\n          borderRadius: 10,\n          backgroundColor: colors.modalBackground,\n          justifyContent: 'center',\n          alignItems: 'center',\n          position: 'absolute',\n          bottom: 30,\n          marginLeft: DWidth / 2 - 100,\n        }}\n        onPress={() => {\n          if (!gamers.length) {\n            nav.navigate('gameplay');\n          }\n        }}>\n        <Text style={{fontSize: 18}}>{translate('game.goToTheGame')}</Text>\n      </Pressable>\n      <ReactNativeModal\n        isVisible={showModal}\n        // deviceWidth={DWidth}\n        // deviceHeight={DHeight}\n        onBackButtonPress={() => {\n          endShowCard();\n        }}\n        onBackdropPress={() => {\n          endShowCard();\n        }}>\n        <View\n          style={[\n            styles.modalView,\n            {\n              backgroundColor: colors.cardBackground,\n            },\n          ]}>\n          {detailPlayer && (\n            <View\n              style={{\n                width: '50%',\n                height: 280,\n                justifyContent: 'center',\n                alignItems: 'center',\n                overflow: 'hidden',\n                borderRadius: 10,\n              }}>\n              <Image\n                source={detailPlayer?.role?.image}\n                style={{width: '100%', height: '100%'}}\n              />\n            </View>\n          )}\n          <View\n            style={{\n              width: DWidth / 2,\n              justifyContent: 'space-around',\n              alignItems: 'center',\n            }}>\n            <Text style={{fontSize: spacing.lg}}>\n              {detailPlayer?.role.title}\n            </Text>\n            <Text style={{fontSize: spacing.md}}>\n              {detailPlayer?.player.name}\n            </Text>\n          </View>\n        </View>\n      </ReactNativeModal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flatContainer: {\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  header: {\n    width: '100%',\n    height: 50,\n    alignItems: 'flex-end',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    // marginTop: 80,\n  },\n  renderItem: {\n    width: '33%',\n    height: 105,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    marginLeft: '25%',\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n    height: 300,\n  },\n  modalView: {\n    width: '100%',\n    height: DHeight / 2,\n    // marginHorizontal: DWidth / 8.5,\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    borderRadius: 10,\n    elevation: 2,\n  },\n});\nexport {ShowCards};\n","import React, {useEffect, useState} from 'react';\nimport {\n  ImageBackground,\n  Pressable,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Text from '../../components/Text';\nimport {useNavigation} from '@react-navigation/native';\nimport {useStore} from '../../constants/useStore';\nimport {observer} from 'mobx-react';\nimport {colors, spacing} from '../../theme';\nimport {translate} from '../../i18n';\nimport {showToast} from '../../utils/snackbar';\n\nconst HomeScreen = observer(() => {\n  const nav = useNavigation();\n  const {\n    playerStore,\n    gameStore,\n    roleStore,\n    langStore: {language},\n  } = useStore();\n  const players = playerStore.players;\n  const playersWithOutRoles = playerStore.playersWithoutRole;\n  const roles = gameStore.roles;\n  const rolePlayers = gameStore.rolePlayers;\n\n  const Mafia = roles.filter(el => el.side === 'mafia');\n  const Free = roles.filter(el => el.side === 'free');\n  // const [playersWithOutRoles, setPlayersWithOutRoles] = useState(0);\n  const [startDisable, setStartDisable] = useState(true);\n\n  useEffect(() => {\n    if (rolePlayers.length) {\n      if (rolePlayers[0]?.role?.title && rolePlayers[0]?.player?.name) {\n        setStartDisable(false);\n      }\n    } else {\n      setStartDisable(true);\n    }\n  }, [rolePlayers]);\n\n  useEffect(() => {\n    return () => {\n      playerStore.resetPlayers();\n      gameStore.gameReset();\n      roleStore.resetRoles();\n    };\n  }, []);\n\n  return (\n    // <SafeAreaView\n    //   style={{\n    //     flex: 1,\n    //     paddingHorizontal: 10,\n    //     backgroundColor: colors.background,\n    //   }}>\n    <View\n      style={{\n        flex: 1,\n        width: '100%',\n        paddingVertical: 30,\n        paddingHorizontal: 10,\n        backgroundColor: colors.background,\n        justifyContent: 'space-around',\n      }}>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: 30,\n        }}>\n        <Text style={{fontSize: 30, color: colors.text}}>\n          {translate('game.godfather')}\n        </Text>\n      </View>\n      <View style={styles.viewCard}>\n        <ImageBackground\n          source={require('../../assets/images/bg1.jpeg')}\n          resizeMode=\"cover\"\n          imageStyle={{width: '100%'}}\n          style={[styles.playersCard, {elevation: 3}]}>\n          <View\n            style={[\n              styles.playersCard,\n              {\n                backgroundColor: colors.overlayBackground,\n                elevation: 3,\n                padding: 10,\n                justifyContent: 'space-between',\n              },\n            ]}>\n            <View style={styles.rightContent}>\n              <Text style={{fontSize: 25}}>{translate('game.players')}</Text>\n              <Text style={{fontSize: 18, marginRight: 10, marginTop: 10}}>\n                {players?.length} {translate('game.player')}\n              </Text>\n            </View>\n            <Pressable\n              style={[\n                styles.addBtn,\n                {\n                  backgroundColor: colors.cardBackground,\n                },\n              ]}\n              onPress={() => {\n                nav.navigate('players');\n              }}>\n              <Icon name=\"plus\" size={20} color=\"white\" />\n            </Pressable>\n          </View>\n        </ImageBackground>\n      </View>\n      <View style={styles.viewCard}>\n        <ImageBackground\n          source={require('../../assets/images/bg2.jpeg')}\n          resizeMode=\"cover\"\n          imageStyle={{width: '100%'}}\n          style={[styles.playersCard, {elevation: 3}]}>\n          <View\n            style={[\n              styles.playersCard,\n              {\n                backgroundColor: colors.overlayBackground,\n                elevation: 3,\n                padding: 10,\n                justifyContent: 'space-between',\n              },\n            ]}>\n            <View style={styles.rightContent}>\n              <Text style={{fontSize: 25}}>{translate('game.roles')}</Text>\n              <Text style={{fontSize: 18, marginRight: 10, marginTop: 10}}>\n                {roles?.length} {translate('game.role')}\n              </Text>\n            </View>\n            <Pressable\n              style={[\n                styles.addBtn,\n                {\n                  backgroundColor: colors.cardBackground,\n                },\n              ]}\n              onPress={() => nav.navigate('roles')}>\n              <Icon name=\"plus\" size={20} color=\"white\" />\n            </Pressable>\n          </View>\n        </ImageBackground>\n      </View>\n      <View style={[styles.viewCard, {height: language === 'fa' ? 150 : 180}]}>\n        <ImageBackground\n          source={require('../../assets/images/bg4.webp')}\n          resizeMode=\"cover\"\n          imageStyle={{width: '100%'}}\n          style={[\n            styles.playersCard,\n            {elevation: 3, height: language === 'fa' ? 150 : 180},\n          ]}>\n          <View\n            style={[\n              styles.playersCard,\n              {\n                backgroundColor: colors.overlayBackground,\n                elevation: 3,\n                padding: 10,\n                height: '100%',\n                justifyContent: 'space-between',\n              },\n            ]}>\n            <View\n              style={{\n                width: '100%',\n                height: '100%',\n                flexDirection: 'row-reverse',\n              }}>\n              <View\n                style={{\n                  width: '70%',\n                  height: '100%',\n                  justifyContent: 'space-around',\n                  alignItems: 'flex-end',\n                }}>\n                <Text style={{fontSize: 20}}>\n                  {translate('game.chooseRoleForPlayers')}\n                </Text>\n                <View\n                  style={{\n                    flexDirection: 'row-reverse',\n                    height: language === 'fa' ? 40 : 20,\n                    width: '100%',\n                    // justifyContent: 'flex-start',\n                    // borderWidth: 1,\n                  }}>\n                  <Text style={{fontSize: spacing.lg}}>\n                    {translate('game.citizen')} :{' '}\n                  </Text>\n                  <View\n                    style={[\n                      styles.roleCounter,\n                      {\n                        backgroundColor: colors.cardBackground,\n                      },\n                    ]}>\n                    <Text style={{fontSize: spacing.lg}}>\n                      {roles?.length - Mafia?.length - Free?.length}\n                    </Text>\n                  </View>\n                  <Text style={{fontSize: spacing.lg, marginRight: 10}}>\n                    {translate('game.mafia')} :\n                  </Text>\n                  <View\n                    style={[\n                      styles.roleCounter,\n                      {\n                        backgroundColor: colors.cardBackground,\n                      },\n                    ]}>\n                    <Text style={{fontSize: spacing.lg}}>{Mafia?.length}</Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    flexDirection: 'row-reverse',\n                    height: language === 'fa' ? 40 : 20,\n                    marginTop: 30,\n                  }}>\n                  <Text style={{fontSize: spacing.lg}}>\n                    {translate('game.free')} :{' '}\n                  </Text>\n                  <View\n                    style={[\n                      styles.roleCounter,\n                      {\n                        backgroundColor: colors.cardBackground,\n                      },\n                    ]}>\n                    <Text style={{fontSize: spacing.lg}}>{Free?.length}</Text>\n                  </View>\n                </View>\n              </View>\n              <View\n                style={{\n                  width: '30%',\n                  height: '100%',\n                  justifyContent: 'center',\n                }}>\n                <Pressable\n                  style={[\n                    styles.addBtn,\n                    {\n                      backgroundColor: colors.cardBackground,\n                    },\n                  ]}\n                  onPress={() => nav.navigate('roleup')}>\n                  <Icon name=\"random\" size={20} color=\"white\" />\n                </Pressable>\n              </View>\n            </View>\n          </View>\n        </ImageBackground>\n      </View>\n      <View\n        style={{\n          width: '100%',\n          height: 50,\n          backgroundColor: colors.modalBackground,\n          borderRadius: 10,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <Pressable\n          // disabled={startDisable}\n          onPress={() => {\n            if (startDisable) {\n              showToast({\n                text: translate('game.addPlayerAndRoleAndGiveRole'),\n                mode: 'warning',\n                duration: 3000,\n              });\n            } else {\n              nav.navigate('showcards');\n            }\n          }}\n          style={{\n            width: '100%',\n            height: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <Text style={{fontSize: 20}}>{translate('game.startGame')}</Text>\n        </Pressable>\n      </View>\n    </View>\n    // </SafeAreaView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  playersCard: {\n    width: '100%',\n    height: 120,\n    flexDirection: 'row-reverse',\n    alignItems: 'center',\n    borderRadius: 10,\n  },\n  rightContent: {\n    width: '60%',\n    height: '90%',\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  addBtn: {\n    width: 50,\n    height: 50,\n    marginLeft: 20,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  viewCard: {\n    overflow: 'hidden',\n    height: 110,\n    borderRadius: 10,\n  },\n  roleCounter: {\n    width: 30,\n    // height: 30,\n    borderRadius: 5,\n    marginHorizontal: 5,\n    alignItems: 'center',\n    // marginLeft: 10,\n  },\n});\n\nexport {HomeScreen};\n","import React from 'react';\nimport {ImageBackground, Pressable, StyleSheet, View} from 'react-native';\nimport Text from '../../components/Text';\nimport {backgroundColor} from '../../constants/Constants';\nimport {useNavigation} from '@react-navigation/native';\nimport {observer} from 'mobx-react';\n\nconst MainScreen = observer(() => {\n  const nav = useNavigation();\n  return (\n    <View style={{flex: 1, backgroundColor: backgroundColor}}>\n      <ImageBackground\n        source={require('../../assets/images/mafia4.jpeg')}\n        style={{width: '100%', height: '100%'}}\n        imageStyle={{\n          width: '100%',\n          height: '100%',\n        }}>\n        <View\n          style={{\n            width: '100%',\n            height: '100%',\n            justifyContent: 'space-around',\n            paddingRight: '10%',\n          }}>\n          <View style={styles.viewContainer}>\n            <Pressable\n              onPress={() => {\n                nav.navigate('allplayers');\n              }}\n              style={styles.pressable}>\n              <Text type=\"bold\" style={{fontSize: 20}} >\n                بازیکن ها\n              </Text>\n            </Pressable>\n          </View>\n          <View style={styles.viewContainer}>\n            <Pressable onPress={()=> nav.navigate('learn')} style={styles.pressable}>\n              <Text type=\"bold\" style={{fontSize: 20}}>\n                آموزش\n              </Text>\n            </Pressable>\n          </View>\n          <View style={styles.viewContainer}>\n            <Pressable\n              onPress={() => {\n                nav.navigate('home');\n              }}\n              style={styles.pressable}>\n              <Text type=\"bold\" style={{fontSize: 20}}>\n                شروع بازی\n              </Text>\n            </Pressable>\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  viewContainer: {\n    backgroundColor: 'white',\n    width: '50%',\n    height: 80,\n    borderRadius: 12,\n    overflow: 'hidden',\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  pressable: {\n    width: '100%',\n    height: '100%',\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport {MainScreen};\n","/**\n * @format\n * @flow strict-local\n */\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {observer} from 'mobx-react';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {useStore} from '../../constants/useStore';\nimport {useNavigation} from '@react-navigation/native';\nimport {\n  DeviceEventEmitter,\n  FlatList,\n  Image,\n  Keyboard,\n  NativeEventEmitter,\n  NativeModules,\n  PermissionsAndroid,\n  Platform,\n  Pressable,\n  StyleSheet,\n  TextInput,\n  View,\n  useColorScheme,\n} from 'react-native';\nimport {DHeight, DWidth, backgroundColor} from '../../constants/Constants';\nimport Header from '../../components/Header';\nimport {PlayerRow} from './PlayerRow';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {BottomSheetModal, BottomSheetTextInput} from '@gorhom/bottom-sheet';\nimport {Modal} from '../../components/Modal';\nimport Text from '../../components/Text';\nimport {launchCamera, launchImageLibrary} from 'react-native-image-picker';\nimport {colors, spacing} from '../../theme';\nimport {translate, translateWithOptions} from '../../i18n';\nimport * as storage from '../../utils/storage';\nimport I18n from 'i18n-js';\nimport {showToast} from '../../utils/snackbar';\n\nconst {CameraModule} = NativeModules;\nconst cameraEventEmitter = new NativeEventEmitter();\n\n// import player from '../../assets/images/player2.png';\nconst AllPlayers = observer(() => {\n  const player = require('../../assets/images/player2.png');\n\n  const [players, setPlayers] = useState([]);\n  const {\n    langStore: {language},\n  } = useStore();\n  const nav = useNavigation();\n  const addRef = useRef<BottomSheetModal>(null);\n  const cameraModal = useRef<BottomSheetModal>(null);\n  const colorScheme = useColorScheme() === 'dark';\n\n  const [userPicture, setUserPicture] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const getPlayers = async () => {\n    return await storage.load('players');\n  };\n  useEffect(() => {\n    getPlayers().then(myPlayer => {\n      if (myPlayer) {\n        setPlayers(myPlayer);\n      }\n    });\n  }, []);\n\n  const addPicture = () => {\n    Keyboard.dismiss();\n    cameraModal?.current?.present();\n  };\n  const takePhoto = () => {\n    cameraModal.current.close();\n    if (Platform.OS === 'android') {\n      CameraModule.startCamera();\n\n      const imageCapturedListener = cameraEventEmitter.addListener(\n        'imageCaptured',\n        imageUri => {\n          if (imageUri !== null) {\n            setUserPicture(imageUri);\n            imageCapturedListener.remove();\n          }\n        },\n      );\n    } else {\n      launchCamera(\n        {\n          cameraType: 'back',\n          mediaType: 'photo',\n          maxHeight: 200,\n          maxWidth: 200,\n          quality: 0.3,\n          includeBase64: true,\n        },\n\n        response => {\n          if (response) {\n            if (!response.didCancel) {\n              if (response?.assets[0]) {\n                const file = {\n                  file: `data:image/jpeg;base64,${response.assets[0].base64}`,\n                };\n                // this.changeAvatar(this.props.user.id, response.data).then(() =>\n                // {\n                // \tthis.props.fetchUser();\n                // });\n              }\n            }\n          }\n        },\n      );\n    }\n  };\n\n  const selectFromDoc = () => {\n    cameraModal?.current?.close();\n    Keyboard.dismiss();\n    if (Platform.OS === 'android') {\n      PermissionsAndroid.request(\n        PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,\n      ).then(() => {\n        launchImageLibrary(\n          {\n            title: 'انتخاب از گالری',\n            // maxWidth: 600,\n            // maxHeight: 600,\n            quality: 0.7,\n            mediaType: 'photo',\n            includeBase64: true,\n            // eslint-disable-next-line\n          },\n          response => {\n            if (response) {\n              if (!response.didCancel) {\n                if (response?.assets[0]) {\n                  const file = `data:image/jpeg;base64,${response.assets[0].base64}`;\n\n                  setUserPicture(file);\n\n                  // this.changeAvatar(this.props.user.id, response.data).then(() =>\n                  // {\n                  // \tthis.props.fetchUser();\n                  // });\n                }\n              }\n            }\n          },\n        );\n      });\n    } else {\n      launchCamera(\n        {\n          title: 'دوربین',\n          // maxWidth: 600,\n          // maxHeight: 600,\n          quality: 0.7,\n          mediaType: 'photo',\n          includeBase64: true,\n          // eslint-disable-next-line\n        },\n        response => {\n          if (response) {\n            if (!response.didCancel) {\n              if (response?.assets[0]) {\n                const file = `data:image/jpeg;base64,${response.assets[0].base64}`;\n\n                setUserPicture(file);\n\n                // this.changeAvatar(this.props.user.id, response.data).then(\n                //   () => {\n                //     this.props.fetchUser();\n                //   },\n                // );\n              }\n            }\n          }\n        },\n      );\n    }\n  };\n\n  const addPlayer = () => {\n    if (playerName) {\n      addRef?.current?.close();\n      const arr = [...players];\n      arr.push({id: Date.now(), name: playerName, avatar: userPicture});\n      storage.save('players', arr);\n      setPlayers(arr);\n      showToast({\n        text: translateWithOptions('players.addPlayerSucceed', {\n          player: playerName,\n        }),\n      });\n      setPlayerName('');\n      setUserPicture('');\n    } else {\n      showToast({\n        text: translate('players.shouldWritePlayerName'),\n        mode: 'danger',\n      });\n    }\n  };\n\n  const removeItem = id => {\n    const arr = [...players];\n    const filteredArr = arr.filter(item => item.id !== id);\n    AsyncStorage.setItem('players', JSON.stringify(filteredArr));\n    setPlayers(filteredArr);\n  };\n  return (\n    <View\n      style={{\n        width: '100%',\n        paddingTop: 20,\n        height: '100%',\n        backgroundColor: colors.background,\n      }}>\n      <Header title={translate('game.myPlayers')} />\n      {players ? (\n        <FlatList\n          data={players}\n          keyExtractor={item => item.id}\n          // style={{flex: 0.7, maxHeight: DHeight * 0.8}}\n          contentContainerStyle={{\n            marginTop: 20,\n            paddingBottom: 50,\n            // marginBottom: 40,\n          }}\n          ListEmptyComponent={() => {\n            return (\n              <View style={styles.emptyList}>\n                <Image\n                  source={require('../../assets/images/empty1.png')}\n                  style={{width: 100, height: 150}}\n                />\n                <Text style={{fontSize: 20}}>\n                  {translate('game.anyPlayerExist')}\n                </Text>\n              </View>\n            );\n          }}\n          renderItem={({item}) => {\n            return (\n              <PlayerRow\n                item={item}\n                key={item?.id}\n                removeItem={() => removeItem(item.id)}\n              />\n            );\n          }}\n        />\n      ) : null}\n      <View\n        style={[\n          styles.addBtn,\n          {\n            backgroundColor: !colorScheme\n              ? colors.modalBackground\n              : colors.bottomCenterColor,\n          },\n        ]}>\n        <Pressable\n          onPress={() => {\n            addRef?.current?.present();\n          }}\n          style={styles.addBtnIcon}>\n          <Icon name=\"user-plus\" size={20} color={colors.text} />\n        </Pressable>\n      </View>\n      <Modal\n        modalRef={addRef}\n        index={0}\n        onDismiss={() => {\n          console.log('dismiss called');\n          addRef.current.close();\n        }}\n        onBackdropPress={() => {\n          console.log('backdrop pressed ');\n          addRef.current.close();\n        }}\n        snapPoints={['70%']}\n        backgroundStyle={{\n          backgroundColor: colors.modalBackground,\n        }}\n        onChange={e => {}}>\n        <View\n          style={{\n            height: '100%',\n            width: '100%',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n          }}>\n          <Pressable\n            onPress={() => {\n              addPicture();\n            }}\n            hitSlop={10}>\n            <View style={styles.userphoto}>\n              <Image\n                source={userPicture ? {uri: userPicture} : player}\n                style={{width: '100%', height: '100%'}}\n              />\n            </View>\n            <Icon\n              name=\"camera\"\n              size={25}\n              color={'white'}\n              style={{\n                position: 'absolute',\n                bottom: -10,\n                right: -10,\n                backgroundColor: '#2b60b5',\n                padding: 5,\n                borderRadius: 12.5,\n                overflow: 'hidden',\n                // borderWidth: 1,\n              }}\n            />\n          </Pressable>\n          <BottomSheetTextInput\n            value={playerName}\n            onChangeText={text => {\n              setPlayerName(text);\n            }}\n            // autoFocus={true}\n            style={[\n              styles.modalInput,\n              {\n                backgroundColor: colors.background,\n                color: colors.text,\n                fontSize: language === 'fa' ? spacing.lg : 16,\n                fontFamily:\n                  language === 'fa' ? 'Digi Nofar Bold' : 'Wizard World',\n              },\n            ]}\n            selectionColor={colors.text}\n            placeholder={translate('game.playerName')}\n            placeholderTextColor={colors.textDim}\n          />\n          <Pressable\n            onPress={() => {\n              addPlayer();\n            }}\n            style={[\n              styles.modalBtn,\n              {\n                backgroundColor: colors.background,\n              },\n            ]}>\n            <Text>{translate('common.addBtn')}</Text>\n          </Pressable>\n        </View>\n      </Modal>\n      <Modal\n        modalRef={cameraModal}\n        index={0}\n        onDismiss={() => cameraModal?.current?.close()}\n        snapPoints={['50%']}\n        vertical={30}\n        backgroundStyle={{\n          backgroundColor: colors.background,\n        }}>\n        <View style={styles.selectImageContainer}>\n          <Pressable onPress={takePhoto} style={styles.addImageBtnCard}>\n            <View style={styles.addPhotoCard}>\n              <Icon name=\"camera\" size={50} color={'white'} />\n            </View>\n            <Text style={{color: 'white'}}>{translate('common.camera')}</Text>\n          </Pressable>\n          <Pressable onPress={selectFromDoc} style={styles.addImageBtnCard}>\n            <View style={styles.addPhotoCard}>\n              <Icon name=\"image\" size={50} color={'white'} />\n            </View>\n            <Text style={{color: 'white'}}>{translate('common.gallery')}</Text>\n          </Pressable>\n        </View>\n      </Modal>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  addBtn: {\n    width: 60,\n    height: 60,\n    position: 'absolute',\n    bottom: 40,\n    right: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 10,\n    backgroundColor: 'white',\n  },\n  addBtnIcon: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  userphoto: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  modalInput: {\n    width: '90%',\n    height: 60,\n    // paddingTop: 10,\n    paddingHorizontal: 5,\n    borderRadius: 8,\n    textAlign: I18n.locale === 'en-IR' ? 'right' : 'left',\n    textAlignVertical: 'center',\n    color: colors.text,\n    fontSize: 20,\n    backgroundColor: colors.inputBackground,\n    // fontFamily: 'IRANSansXNoEn-Medium',\n  },\n  modalBtn: {\n    width: '90%',\n    height: 50,\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n  },\n  addPhotoCard: {\n    borderWidth: 1,\n    padding: 15,\n    borderRadius: 15,\n    borderColor: 'white',\n  },\n  selectImageContainer: {\n    flexDirection: 'row-reverse',\n    height: '100%',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  addImageBtnCard: {justifyContent: 'center', alignItems: 'center'},\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    // marginTop: 80,\n  },\n});\n\nexport {AllPlayers};\n","import React, {useEffect, useState} from 'react';\nimport {FlatList, Image, Pressable, StyleSheet, View} from 'react-native';\nimport Text from '../../components/Text';\nimport {observer} from 'mobx-react';\nimport {useStore} from '../../constants/useStore';\nimport {DHeight, DWidth, backgroundColor} from '../../constants/Constants';\nimport {useNavigation} from '@react-navigation/native';\nimport Header from '../../components/Header';\nimport {translate} from '../../i18n';\nimport {colors} from '../../theme';\nimport * as storage from '../../utils/storage';\n\nconst PlayerListScreen = observer(({route}) => {\n  const [players, setPlayers] = useState([]);\n  const nav = useNavigation();\n  const gamePlayers = route.params.gamePlayers;\n  const {playerStore} = useStore();\n  const getPlayers = async () => {\n    return await storage.load('players');\n  };\n  useEffect(() => {\n    getPlayers()\n      .then(res => {\n        const _players = res;\n\n        const filteredArray = _players.filter(\n          item =>\n            !gamePlayers.some(s => JSON.stringify(s) === JSON.stringify(item)),\n        );\n        setPlayers(filteredArray);\n      })\n      .catch(err => {});\n  }, []);\n\n  const selectPlayer = item => {\n    playerStore.addPlayers(item);\n    const arr = [...players];\n    const newList = arr.filter(el => el !== item);\n    setPlayers(newList);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        width: '100%',\n        backgroundColor: colors.background,\n        paddingTop: 20,\n        // paddingBottom: 60,\n      }}>\n      <Header\n        backPress={() => nav.goBack()}\n        title={translate('game.addPlayerToThisGame')}\n      />\n\n      <FlatList\n        data={players}\n        keyExtractor={item => item.id}\n        numColumns={3}\n        ListEmptyComponent={() => {\n          return (\n            <View style={styles.emptyList}>\n              <Image\n                source={require('../../assets/images/empty1.png')}\n                style={{width: 100, height: 150}}\n              />\n              <Text style={{fontSize: 20}}>\n                {translate('game.anyPlayerExist')}\n              </Text>\n            </View>\n          );\n        }}\n        renderItem={({item}) => {\n          return (\n            <Pressable\n              style={styles.playerIcon}\n              key={item.id}\n              onPress={() => selectPlayer(item)}>\n              <Image\n                source={\n                  item?.avatar\n                    ? {uri: item.avatar}\n                    : require('../../assets/images/player2.png')\n                }\n                style={{width: 80, height: 80, borderRadius: 10}}\n              />\n              <Text>{item.name}</Text>\n            </Pressable>\n          );\n        }}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: 50,\n    marginBottom: 30,\n    alignItems: 'flex-end',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: DHeight * 0.7,\n    // marginTop: 80,\n  },\n  playerIcon: {\n    width: '33%',\n    height: 105,\n    marginBottom: 15,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\nexport {PlayerListScreen};\n","import React from 'react';\nimport {Image, Pressable, View} from 'react-native';\nimport Text from '../../components/Text';\nimport { colors } from '../../theme';\nimport { Icon } from '../../components/Icon';\n\nconst PlayerRow = ({item, removeItem}) => {\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        height: 70,\n        justifyContent: 'space-between',\n        marginBottom: 10,\n        marginHorizontal: 15,\n        padding: 10,\n        backgroundColor: colors.cardBackground,\n        borderRadius: 10,\n      }}>\n      <View style={{flexDirection: 'row-reverse', alignItems: 'center'}}>\n        <View\n          style={{width: 50, height: 50, borderRadius: 25, overflow: 'hidden'}}>\n          <Image\n            source={\n              item?.avatar\n                ? {uri: item?.avatar}\n                : require('../../assets/images/player2.png')\n            }\n            style={{width: 50, height: 50}}\n          />\n        </View>\n        <View style={{marginRight: 10}}>\n          <Text style={{}}>{item?.name}</Text>\n        </View>\n      </View>\n      <View>\n        <Pressable\n          style={{\n            width: 60,\n            height: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          onPress={removeItem}>\n          <Icon name=\"trash\" size={30} color={colors.text} />\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nexport {PlayerRow};\n","/**\n * @format\n * @flow strict-local\n */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport {\n  BackHandler,\n  FlatList,\n  Image,\n  Keyboard,\n  PermissionsAndroid,\n  Pressable,\n  StyleSheet,\n  TextInput,\n  View,\n} from 'react-native';\nimport Text from '../../components/Text';\nimport {DHeight, DWidth, backgroundColor} from '../../constants/Constants';\nimport {observer} from 'mobx-react';\nimport {useStore} from '../../constants/useStore';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Modal} from '../../components/Modal';\nimport {useNavigation} from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {BottomSheetModal, BottomSheetTextInput} from '@gorhom/bottom-sheet';\nimport {launchCamera, launchImageLibrary} from 'react-native-image-picker';\nimport {translate, translateWithOptions} from '../../i18n';\nimport {colors} from '../../theme';\nimport Header from '../../components/Header';\nimport * as storage from '../../utils/storage';\nimport I18n from 'i18n-js';\nimport {showToast} from '../../utils/snackbar';\nimport {Toast} from 'react-native-toast-notifications';\n\nconst PlayersScreen = observer(() => {\n  const player = require('../../assets/images/player2.png');\n\n  const {\n    playerStore,\n    langStore: {language},\n  } = useStore();\n  const allPlayers = playerStore.getPlayers();\n  const nav = useNavigation();\n  const addPlayerRef = useRef<BottomSheetModal>(null);\n  const cameraRef = useRef<BottomSheetModal>(null);\n\n  const [players, setPlayers] = useState(allPlayers);\n  const [userPicture, setUserPicture] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [formVisible, setFormVisible] = useState(false);\n  const [isFabVisible, setFabVisible] = useState(false);\n\n  // useEffect(() => {\n  //   if (allPlayers) {\n  //     setPlayers(allPlayers);\n  //   }\n  // }, [allPlayers]);\n\n  const addPlayer = async () => {\n    if (playerName) {\n      const newPlayer = {\n        id: Date.now(),\n        name: playerName,\n        avatar: userPicture,\n      };\n      await storage.load('players').then(players => {\n        const arr = players || [];\n        arr.push(newPlayer);\n        storage.save('players', arr);\n        playerStore.addPlayers(newPlayer);\n        // setPlayers();\n        setPlayerName('');\n        setUserPicture('');\n      });\n      showToast({\n        text: translateWithOptions('players.addPlayerSucceed', {\n          player: playerName,\n        }),\n      });\n\n      // showToast({\n      //   text: translateWithOptions(\"players.addPlayerSucceed\", {player: playerName}),\n      // });\n    } else {\n      showToast({\n        text: translate('players.shouldWritePlayerName'),\n        mode: 'danger',\n      });\n    }\n  };\n\n  const removePlayer = item => {\n    playerStore.removePlayers(item);\n  };\n\n  const addPicture = () => {\n    Keyboard.dismiss();\n    cameraRef?.current?.present();\n  };\n  useEffect(() => {\n    if (allPlayers) {\n      setPlayers(allPlayers);\n      playerStore.setPlayerRole(allPlayers.length);\n    }\n  }, [allPlayers]);\n  const takePhoto = () => {\n    cameraRef.current.close();\n    if (Platform.OS === 'android') {\n      PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.CAMERA).then(\n        () => {\n          launchCamera(\n            {\n              cameraType: 'back',\n              mediaType: 'photo',\n              maxHeight: 200,\n              maxWidth: 200,\n              quality: 0.3,\n              includeBase64: true,\n            },\n            response => {\n              if (response) {\n                if (!response.didCancel) {\n                  if (response?.assets[0]) {\n                    setUserPicture(response?.assets[0]?.uri);\n                    const file = {\n                      file: `data:image/jpeg;base64,${response.assets[0].base64}`,\n                    };\n                  }\n                }\n              }\n            },\n          );\n        },\n      );\n    } else {\n      launchCamera(\n        {\n          cameraType: 'back',\n          mediaType: 'photo',\n          maxHeight: 200,\n          maxWidth: 200,\n          quality: 0.3,\n          includeBase64: true,\n        },\n\n        response => {\n          if (response) {\n            if (!response.didCancel) {\n              if (response?.assets[0]) {\n                const file = {\n                  file: `data:image/jpeg;base64,${response.assets[0].base64}`,\n                };\n                // this.changeAvatar(this.props.user.id, response.data).then(() =>\n                // {\n                // \tthis.props.fetchUser();\n                // });\n              }\n            }\n          }\n        },\n      );\n    }\n  };\n\n  const selectFromDoc = () => {\n    cameraRef?.current?.close();\n    Keyboard.dismiss();\n    if (Platform.OS === 'android') {\n      PermissionsAndroid.request(\n        PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,\n      ).then(() => {\n        launchImageLibrary(\n          {\n            title: 'انتخاب از گالری',\n            // maxWidth: 600,\n            // maxHeight: 600,\n            quality: 0.7,\n            mediaType: 'photo',\n            includeBase64: true,\n            // eslint-disable-next-line\n          },\n          response => {\n            if (response) {\n              if (!response.didCancel) {\n                if (response?.assets[0]) {\n                  const file = `data:image/jpeg;base64,${response.assets[0].base64}`;\n\n                  setUserPicture(file);\n\n                  // this.changeAvatar(this.props.user.id, response.data).then(() =>\n                  // {\n                  // \tthis.props.fetchUser();\n                  // });\n                }\n              }\n            }\n          },\n        );\n      });\n    } else {\n      launchCamera(\n        {\n          title: 'دوربین',\n          // maxWidth: 600,\n          // maxHeight: 600,\n          quality: 0.7,\n          mediaType: 'photo',\n          includeBase64: true,\n          // eslint-disable-next-line\n        },\n        response => {\n          if (response) {\n            if (!response.didCancel) {\n              if (response?.assets[0]) {\n                const file = `data:image/jpeg;base64,${response.assets[0].base64}`;\n\n                setUserPicture(file);\n\n                // this.changeAvatar(this.props.user.id, response.data).then(\n                //   () => {\n                //     this.props.fetchUser();\n                //   },\n                // );\n              }\n            }\n          }\n        },\n      );\n    }\n  };\n\n  // useEffect(() => {\n  //   BackHandler.addEventListener('hardwareBackPress', handleBack);\n  //   return () => {\n  //     BackHandler.remove()\n  //   };\n  // }, []);\n\n  // const handleBack = () => {\n  //   nav.goBack();\n  // };\n  return (\n    <View\n      // onTouchStart={() => setFabVisible(false)}\n      style={{\n        flex: 1,\n        width: '100%',\n        backgroundColor: colors.background,\n        paddingTop: 10,\n      }}>\n      <Header\n        backPress={() => nav.goBack()}\n        title={translate('game.addPlayerToThisGame')}\n      />\n\n      <View\n        style={{\n          width: '100%',\n          alignItems: 'flex-end',\n          // marginVertical: 20,\n          marginBottom: 20,\n          paddingHorizontal: 20,\n        }}>\n        <Text style={{fontSize: 22}}>{translate('game.playersChoosen')}</Text>\n      </View>\n      <FlatList\n        data={players}\n        keyExtractor={item => item.id}\n        numColumns={3}\n        ListEmptyComponent={() => {\n          return (\n            <View style={styles.emptyList}>\n              <Image\n                source={require('../../assets/images/empty1.png')}\n                style={{width: 100, height: 150}}\n              />\n              <Text style={{fontSize: 20}}>\n                {translate('game.anyPlayerExist')}\n              </Text>\n            </View>\n          );\n        }}\n        renderItem={({item}) => {\n          return (\n            <Pressable\n              onLongPress={() => removePlayer(item)}\n              style={styles.renderItem}>\n              <View style={styles.playerIcon}>\n                <Image\n                  source={\n                    item?.avatar\n                      ? {uri: item?.avatar}\n                      : require('../../assets/images/player2.png')\n                  }\n                  style={{width: 80, height: 80}}\n                />\n              </View>\n              <Text>{item.name}</Text>\n            </Pressable>\n          );\n        }}\n      />\n      {isFabVisible ? (\n        <View\n        // style={{\n        //   width: 110,\n        //   height: 170,\n        //   position: 'absolute',\n        //   bottom: 50,\n        //   right: 20,\n        // }}\n        >\n          <View\n            style={{width: 110, position: 'absolute', bottom: 70, right: 110}}>\n            <Pressable\n              style={{\n                backgroundColor: colors.modalBackground,\n                height: 45,\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderRadius: 10,\n              }}\n              onPress={() => {\n                nav.navigate('playerList', {\n                  gamePlayers: allPlayers,\n                });\n                setFabVisible(false);\n              }}>\n              <Text>{translate('game.oldPlayer')}</Text>\n            </Pressable>\n          </View>\n          <View\n            style={{width: 110, position: 'absolute', bottom: 130, right: 20}}>\n            <Pressable\n              style={{\n                marginTop: 20,\n                backgroundColor: colors.modalBackground,\n                height: 45,\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderRadius: 10,\n              }}\n              onPress={() => {\n                setFabVisible(false);\n                addPlayerRef?.current?.present();\n              }}>\n              <Text>{translate('game.newPlayer')}</Text>\n            </Pressable>\n          </View>\n        </View>\n      ) : null}\n      <View style={[styles.addBtn, {backgroundColor: colors.modalBackground}]}>\n        <Pressable\n          onPress={() => {\n            setFabVisible(!isFabVisible);\n          }}\n          style={styles.addBtnIcon}>\n          <Icon name=\"user-plus\" size={20} color={colors.text} />\n        </Pressable>\n      </View>\n      <Modal\n        modalRef={addPlayerRef}\n        index={0}\n        onDismiss={() => {}}\n        snapPoints={[DHeight * 0.6]}\n        backgroundStyle={{backgroundColor: colors.modalBackground}}\n        onChange={e => {}}>\n        <View\n          style={{\n            backgroundColor: colors.modalBackground,\n            height: '100%',\n            width: '100%',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n          }}>\n          <Pressable\n            onPress={() => {\n              addPicture();\n            }}\n            hitSlop={10}>\n            <View style={styles.userphoto}>\n              <Image\n                source={userPicture ? {uri: userPicture} : player}\n                style={{width: '100%', height: '100%'}}\n              />\n            </View>\n            <Icon\n              name=\"camera\"\n              size={25}\n              color={'white'}\n              style={{\n                position: 'absolute',\n                bottom: -10,\n                right: -10,\n                backgroundColor: '#2b60b5',\n                padding: 5,\n                borderRadius: 12.5,\n                overflow: 'hidden',\n                // borderWidth: 1,\n              }}\n            />\n          </Pressable>\n          <BottomSheetTextInput\n            value={playerName}\n            onChangeText={text => {\n              setPlayerName(text);\n            }}\n            style={[\n              styles.modalInput,\n              {\n                backgroundColor: colors.background,\n                color: colors.text,\n                fontSize: language === 'fa' ? 20 : 16,\n                fontFamily:\n                  language === 'fa' ? 'Digi Nofar Bold' : 'Wizard World',\n              },\n            ]}\n            selectionColor={colors.text}\n            placeholder={translate('game.playerName')}\n            placeholderTextColor={colors.text}\n          />\n\n          <Pressable\n            onPress={() => {\n              addPlayer();\n            }}\n            style={[\n              styles.modalBtn,\n              {\n                backgroundColor: colors.background,\n              },\n            ]}>\n            <Text>{translate('common.addBtn')}</Text>\n          </Pressable>\n        </View>\n      </Modal>\n      <Modal\n        modalRef={cameraRef}\n        index={0}\n        onDismiss={() => cameraRef?.current?.close()}\n        snapPoints={['30%']}\n        // vertical={20}\n        backgroundStyle={{\n          backgroundColor: backgroundColor,\n        }}>\n        <View style={styles.selectImageContainer}>\n          <Pressable onPress={takePhoto} style={styles.addImageBtnCard}>\n            <View style={styles.addPhotoCard}>\n              <Icon name=\"camera\" size={50} color={'white'} />\n            </View>\n            <Text style={{color: 'white'}}>{translate('common.camera')}</Text>\n          </Pressable>\n          <Pressable onPress={selectFromDoc} style={styles.addImageBtnCard}>\n            <View style={styles.addPhotoCard}>\n              <Icon name=\"image\" size={50} color={'white'} />\n            </View>\n            <Text style={{color: 'white'}}>{translate('common.gallery')}</Text>\n          </Pressable>\n        </View>\n      </Modal>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: 50,\n    alignItems: 'flex-end',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  flatContainer: {\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    // elevation: 5,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: DHeight * 0.7,\n    // marginTop: 80,\n  },\n  renderItem: {\n    width: '33%',\n    height: 105,\n    marginBottom: 15,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerIcon: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    overflow: 'hidden',\n  },\n  addBtn: {\n    width: 60,\n    height: 60,\n    position: 'absolute',\n    bottom: 60,\n    right: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n  },\n  addBtnIcon: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    marginLeft: '25%',\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n    height: 200,\n  },\n  modalView: {\n    width: DWidth / 2,\n    height: DHeight / 6,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    elevation: 10,\n  },\n  modalInput: {\n    width: '90%',\n    height: 60,\n    borderWidth: 0.2,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    textAlign: I18n.locale === 'en-IR' ? 'right' : 'left',\n  },\n  modalBtn: {\n    width: '90%',\n    height: 50,\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    backgroundColor: '#2b60b5',\n  },\n  userphoto: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  addPhotoCard: {\n    borderWidth: 1,\n    padding: 15,\n    borderRadius: 15,\n    borderColor: 'white',\n  },\n  selectImageContainer: {\n    flexDirection: 'row-reverse',\n    height: '100%',\n    width: '100%',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  addImageBtnCard: {justifyContent: 'center', alignItems: 'center'},\n});\n\nexport {PlayersScreen};\n","import {observer} from 'mobx-react';\nimport React, {useEffect, useState} from 'react';\nimport {\n  FlatList,\n  Image,\n  Pressable,\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {useStore} from '../../constants/useStore';\nimport {DWidth} from '../../constants/Constants';\nimport {Icon} from '../../components/Icon';\nimport Text from '../../components/Text';\nimport {spacing} from '../../theme';\n\nconst JackRolesScreen = observer(() => {\n  const {\n    langStore: {language},\n    roleStore: {jackRoles},\n    gameStore,\n  } = useStore();\n  const roles = gameStore.getRoles();\n  //   const addRoles = gameStore.addRoles;\n  const [gameRoles, setGameRoles] = useState([]);\n  const [citizen, setCitizen] = useState(1);\n\n  useEffect(() => {\n    setGameRoles(jackRoles);\n  }, [jackRoles]);\n\n  const addRole = item => {\n    gameStore.setGameType('jack');\n    const existItem = roles.findIndex(el => el === item);\n    if (existItem === -1) {\n      gameStore.addRoles(item);\n      const fakeRole = [...gameRoles];\n      const selectedIndex = fakeRole.findIndex(el => el.id === item.id);\n      fakeRole[selectedIndex].active = false;\n      setGameRoles(fakeRole);\n    } else {\n      if (item.title === 'شهروند ساده') {\n        const fakeRole = [...roles];\n        return fakeRole?.map(el => {\n          if (el.title === item.title) {\n            const ind = fakeRole.filter(item => item.title !== 'شهروند ساده');\n            const arr = [...jackRoles];\n            arr.map(item => {\n              if (item.title === 'شهروند ساده') item.active = true;\n            });\n            setGameRoles(arr);\n            gameStore.updateRoles(ind);\n          }\n        });\n      }\n      gameStore.removeRoles(item);\n      const fakeRole = [...gameRoles];\n      const selectedIndex = fakeRole.findIndex(el => el.id === item.id);\n      fakeRole[selectedIndex].active = true;\n      setGameRoles(fakeRole);\n    }\n  };\n\n  const addCitizen = () => {\n    const newCitizen = jackRoles[8];\n    newCitizen.id = Date.now();\n    newCitizen.active = false;\n    setCitizen(citizen + 1);\n    gameStore.addRoles(newCitizen);\n  };\n\n  const removeCitizen = () => {\n    const lastIndex = roles.length - 1;\n    setCitizen(citizen - 1);\n    gameStore.roles.splice(lastIndex, 1);\n  };\n\n  return (\n    // {gameRoles?.length ? (\n    <FlatList\n      data={jackRoles}\n      keyExtractor={item => item.id}\n      // contentContainerStyle={styles.flatContainer}\n      numColumns={3}\n      renderItem={({item}) => {\n        return (\n          <Pressable\n            key={item.id}\n            // disabled={!item.active}\n            onPress={() => {\n              addRole(item);\n            }}\n            style={styles.renderItem}>\n            <View style={[styles.playerIcon]}>\n              {item.title !== 'شهروند ساده' ? (\n                !item.active ? (\n                  <View\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      zIndex: 100,\n                      backgroundColor: 'rgba(256,256,256,0.4)',\n                    }}>\n                    <View\n                      style={{\n                        width: 30,\n                        height: 30,\n                        borderRadius: 15,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        position: 'absolute',\n                        zIndex: 100,\n                        backgroundColor: 'green',\n                      }}>\n                      <Icon name=\"check\" color=\"white\" size={18} />\n                    </View>\n                  </View>\n                ) : null\n              ) : !item.active ? (\n                <View\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    zIndex: 100,\n                    backgroundColor: 'rgba(256,256,256,0.1)',\n                  }}>\n                  <View\n                    style={{\n                      width: 30,\n                      height: 30,\n                      borderRadius: 15,\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      position: 'absolute',\n                      zIndex: 100,\n                      backgroundColor: 'green',\n                    }}>\n                    <Icon name=\"check\" color=\"white\" size={18} />\n                  </View>\n                  <View\n                    style={{\n                      backgroundColor: 'white',\n                      borderRadius: 12,\n                      width: '60%',\n                      left: '20%',\n                      alignItems: 'center',\n                      justifyContent: 'space-around',\n                      height: 30,\n                      position: 'absolute',\n                      flexDirection: 'row',\n                      bottom: 40,\n                    }}>\n                    <Pressable\n                      onPress={() => {\n                        addCitizen();\n                      }}>\n                      <Icon name=\"plus\" color=\"black\" size={18} />\n                    </Pressable>\n                    <Text style={{fontSize: 18}}>{citizen}</Text>\n                    <Pressable\n                      onPress={() => {\n                        if (citizen > 1) {\n                          removeCitizen();\n                        }\n                      }}>\n                      <Icon name=\"minus\" color=\"black\" size={18} />\n                    </Pressable>\n                  </View>\n                </View>\n              ) : null}\n              <Image\n                source={item?.image}\n                resizeMode=\"contain\"\n                style={{width: '100%', height: '100%', borderRadius: 10}}\n              />\n            </View>\n            <Text\n              style={{fontSize: language === 'fa' ? spacing.lg : 14}}>\n              {item.title}\n            </Text>\n          </Pressable>\n        );\n      }}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  flatContainer: {\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 80,\n  },\n  renderItem: {\n    width: '33%',\n    height: 200,\n    marginBottom: 15,\n    // justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerIcon: {\n    width: 110,\n    height: 140,\n    borderRadius: 5,\n    overflow: 'hidden',\n  },\n});\nexport {JackRolesScreen};\n","import {observer} from 'mobx-react';\nimport React, {useEffect, useState} from 'react';\nimport {\n  FlatList,\n  Image,\n  Pressable,\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {useStore} from '../../constants/useStore';\nimport {DWidth} from '../../constants/Constants';\nimport {Icon} from '../../components/Icon';\nimport Text from '../../components/Text';\nimport {spacing} from '../../theme';\n\nconst NustraRolesScreen = observer(() => {\n  const {\n    langStore: {language},\n    roleStore: {nustraRoles},\n    gameStore,\n  } = useStore();\n  const roles = gameStore.getRoles();\n  //   const addRoles = gameStore.addRoles;\n  const [gameRoles, setGameRoles] = useState([]);\n  const [citizen, setCitizen] = useState(1);\n\n  useEffect(() => {\n    setGameRoles(nustraRoles);\n  }, [nustraRoles]);\n\n  const addRole = item => {\n    gameStore.setGameType('nustra');\n    const existItem = roles.findIndex(el => el === item);\n    if (existItem === -1) {\n      gameStore.addRoles(item);\n      const fakeRole = [...gameRoles];\n      const selectedIndex = fakeRole.findIndex(el => el.id === item.id);\n      fakeRole[selectedIndex].active = false;\n      setGameRoles(fakeRole);\n    } else {\n      if (item.title === 'شهروند ساده') {\n        const fakeRole = [...roles];\n        return fakeRole?.map(el => {\n          if (el.title === item.title) {\n            const ind = fakeRole.filter(item => item.title !== 'شهروند ساده');\n            const arr = [...nustraRoles];\n            arr.map(item => {\n              if (item.title === 'شهروند ساده') item.active = true;\n            });\n            setGameRoles(arr);\n            gameStore.updateRoles(ind);\n          }\n        });\n      }\n      gameStore.removeRoles(item);\n      const fakeRole = [...gameRoles];\n      const selectedIndex = fakeRole.findIndex(el => el.id === item.id);\n      fakeRole[selectedIndex].active = true;\n      setGameRoles(fakeRole);\n    }\n  };\n\n  const addCitizen = () => {\n    const newCitizen = nustraRoles[8];\n    newCitizen.id = Date.now();\n    newCitizen.active = false;\n    setCitizen(citizen + 1);\n    gameStore.addRoles(newCitizen);\n  };\n\n  const removeCitizen = () => {\n    const lastIndex = roles.length - 1;\n    setCitizen(citizen - 1);\n    gameStore.roles.splice(lastIndex, 1);\n  };\n\n  return (\n    // {gameRoles?.length ? (\n    <FlatList\n      data={nustraRoles}\n      keyExtractor={item => item.id}\n      // contentContainerStyle={styles.flatContainer}\n      numColumns={3}\n      renderItem={({item}) => {\n        return (\n          <Pressable\n            key={item.id}\n            onPress={() => {\n              addRole(item);\n            }}\n            style={styles.renderItem}>\n            <View style={[styles.playerIcon]}>\n              {item.title !== 'شهروند ساده' ? (\n                !item.active ? (\n                  <View\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      zIndex: 100,\n                      backgroundColor: 'rgba(256,256,256,0.4)',\n                    }}>\n                    <View\n                      style={{\n                        width: 30,\n                        height: 30,\n                        borderRadius: 15,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        position: 'absolute',\n                        zIndex: 100,\n                        backgroundColor: 'green',\n                      }}>\n                      <Icon name=\"check\" color=\"white\" size={18} />\n                    </View>\n                  </View>\n                ) : null\n              ) : !item.active ? (\n                <View\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    zIndex: 100,\n                    backgroundColor: 'rgba(256,256,256,0.1)',\n                  }}>\n                  <View\n                    style={{\n                      width: 30,\n                      height: 30,\n                      borderRadius: 15,\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      position: 'absolute',\n                      zIndex: 100,\n                      backgroundColor: 'green',\n                    }}>\n                    <Icon name=\"check\" color=\"white\" size={18} />\n                  </View>\n                  <View\n                    style={{\n                      backgroundColor: 'white',\n                      borderRadius: 12,\n                      width: '60%',\n                      left: '20%',\n                      alignItems: 'center',\n                      justifyContent: 'space-around',\n                      height: 30,\n                      position: 'absolute',\n                      flexDirection: 'row',\n                      bottom: 40,\n                    }}>\n                    <Pressable\n                      onPress={() => {\n                        addCitizen();\n                      }}>\n                      <Icon name=\"plus\" color=\"black\" size={18} />\n                    </Pressable>\n                    <Text style={{color: 'black', fontSize: 18}}>\n                      {citizen}\n                    </Text>\n                    <Pressable\n                      onPress={() => {\n                        if (citizen > 1) {\n                          removeCitizen();\n                        }\n                      }}>\n                      <Icon name=\"minus\" color=\"black\" size={18} />\n                    </Pressable>\n                  </View>\n                </View>\n              ) : null}\n              <Image\n                source={item?.image}\n                resizeMode=\"contain\"\n                style={{width: '100%', height: '100%', borderRadius: 10}}\n              />\n            </View>\n            <Text\n              style={{fontSize: language === 'fa' ? spacing.lg : 14}}>\n              {item.title}\n            </Text>\n          </Pressable>\n        );\n      }}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  flatContainer: {\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 80,\n  },\n  renderItem: {\n    width: '33%',\n    height: 200,\n    marginBottom: 15,\n    // justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerIcon: {\n    width: 110,\n    height: 140,\n    borderRadius: 5,\n    overflow: 'hidden',\n  },\n});\nexport {NustraRolesScreen};\n","import React, {useEffect, useState} from 'react';\nimport {FlatList, Image, Pressable, StyleSheet, View} from 'react-native';\nimport Text from '../../components/Text';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {useStore} from '../../constants/useStore';\nimport {DWidth} from '../../constants/Constants';\nimport {useNavigation} from '@react-navigation/native';\nimport {colors} from '../../theme';\nimport {translate} from '../../i18n';\nimport Header from '../../components/Header';\n\nconst RoleUpScreen = () => {\n  const nav = useNavigation();\n  const {playerStore, gameStore} = useStore();\n  const [rolePlayer, setRolePlayer] = useState([]);\n  const players = playerStore.getPlayers();\n  const roles = gameStore.roles;\n\n  useEffect(() => {\n    setRolePlayer(players);\n  }, [players]);\n\n  const roleup = () => {\n    if (!rolePlayer[0]?.role) {\n      const gamer = [...players];\n      const allRole = [...roles];\n      const joinedArray = [];\n\n      while (gamer.length > 0 && allRole.length > 0) {\n        // Randomly choose which array to pick an element from\n        const randomChoice = Math.floor(Math.random() * 2); // Generates 0 or 1\n        const obj = {};\n        if (randomChoice === 0) {\n          // Pick an element from array1 and add to the object\n          obj.player = gamer.shift();\n          // Pick an element from array2 and add to the object\n          obj.role = allRole.splice(\n            Math.floor(Math.random() * allRole.length),\n            1,\n          )[0];\n        } else {\n          // Pick an element from array2 and add to the object\n          obj.role = allRole.shift();\n          // Pick an element from array1 and add to the object\n          obj.player = gamer.splice(\n            Math.floor(Math.random() * gamer.length),\n            1,\n          )[0];\n        }\n        joinedArray.push(obj);\n      }\n      gameStore.updateRolePlayers(joinedArray);\n      setRolePlayer(joinedArray);\n      playerStore.setPlayerRole(0);\n    } else {\n      setRolePlayer(players);\n      playerStore.setPlayerRole(0);\n    }\n  };\n  return (\n    <View\n      style={{\n        flex: 1,\n        width: '100%',\n        backgroundColor: colors.background,\n        // paddingHorizontal: 15,\n        paddingTop: 10,\n      }}>\n      <Header\n        backPress={() => {\n          nav.goBack();\n        }}\n        title={translate('game.roleAssignment')}\n      />\n      {rolePlayer.length ? (\n        <FlatList\n          data={rolePlayer}\n          keyExtractor={item => item?.player?.id || item?.id}\n          numColumns={3}\n          // contentContainerStyle={{\n          //   justifyContent: 'space-around',\n          //   width: DWidth,\n          // }}\n          ListEmptyComponent={() => {\n            return (\n              <View style={styles.emptyList}>\n                <Image\n                  source={require('../../assets/images/empty1.png')}\n                  style={{width: 100, height: 150}}\n                />\n                <Text style={{fontSize: 20, color: 'white'}}>\n                  {translate('game.anyPlayerExist')}\n                </Text>\n              </View>\n            );\n          }}\n          renderItem={({item}) => {\n            return (\n              <Pressable\n                style={styles.playerIcon}\n                key={item?.player?.id || item?.id}\n                onPress={() => {}}>\n                <Image\n                  source={\n                    item?.role?.image\n                      ? item.role.image\n                      : require('../../assets/images/player2.png')\n                  }\n                  style={{width: 100, height: 140, borderRadius: 10}}\n                />\n                <Text>{item?.player?.name ? item.player.name : item.name}</Text>\n              </Pressable>\n            );\n          }}\n        />\n      ) : null}\n      <View\n        style={[\n          styles.addBtn,\n          {\n            backgroundColor: colors.modalBackground,\n          },\n        ]}>\n        <Pressable\n          onPress={() => {\n            roleup();\n            // setFabVisible(!isFabVisible);\n          }}\n          style={styles.addBtnIcon}>\n          <Icon name=\"random\" size={20} color={colors.text} />\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: 50,\n    marginBottom: 30,\n    alignItems: 'flex-end',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 80,\n  },\n  playerIcon: {\n    width: '33%',\n    height: 160,\n    marginBottom: 15,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  addBtn: {\n    width: 60,\n    height: 60,\n    position: 'absolute',\n    bottom: 40,\n    right: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 10,\n    backgroundColor: 'white',\n  },\n  addBtnIcon: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\nexport {RoleUpScreen};\n","/**\n * @format\n * @flow strict-local\n */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport {\n  Animated,\n  FlatList,\n  Image,\n  Platform,\n  Pressable,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport Text from '../../components/Text';\nimport {DHeight, DWidth, backgroundColor} from '../../constants/Constants';\nimport {observer} from 'mobx-react';\nimport {useStore} from '../../constants/useStore';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {useNavigation} from '@react-navigation/native';\nimport {colors, spacing} from '../../theme';\nimport Header from '../../components/Header';\nimport {translate} from '../../i18n';\nimport {SceneMap, TabView} from 'react-native-tab-view';\nimport {JackRolesScreen} from './JackRolesScreen';\nimport {NustraRolesScreen} from './NustraRolesScreen';\nimport {Modal} from '../../components/Modal';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\n\nconst RolesScreen = observer(() => {\n  const {\n    roleStore,\n    gameStore,\n    langStore: {language},\n  } = useStore();\n  const checkRef = useRef<BottomSheetModal>(null);\n  const nav = useNavigation();\n  const Roles = roleStore.nustraRoles;\n  const roles = gameStore.getRoles();\n  // const playingRoles = gameStore.roles;\n  const [gameRoles, setGameRoles] = useState([]);\n  const [citizen, setCitizen] = useState(1);\n  //   const [roles, setRoles] = useState(playingRoles);\n\n  const renderScene = SceneMap({\n    jack: JackRolesScreen,\n    nustra: NustraRolesScreen,\n  });\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    {key: 'jack', title: translate('game.jackRoles')},\n    {key: 'nustra', title: translate('game.nustraRoles')},\n  ]);\n  // useEffect(() => {\n  //   setGameRoles(Roles);\n  // }, [Roles]);\n\n  // const addRole = item => {\n  //   const existItem = roles.findIndex(el => el === item);\n  //   if (existItem === -1) {\n  //     gameStore.addRoles(item);\n  //     const fakeRole = [...gameRoles];\n  //     const selectedIndex = fakeRole.findIndex(el => el.id === item.id);\n  //     fakeRole[selectedIndex].active = false;\n  //     setGameRoles(fakeRole);\n  //   } else {\n  //     if (item.title === 'شهروند ساده') {\n  //       const fakeRole = [...roles];\n  //       return fakeRole?.map(el => {\n  //         if (el.title === item.title) {\n  //           const ind = fakeRole.filter(item => item.title !== 'شهروند ساده');\n  //           const arr = [...Roles];\n  //           arr.map(item => {\n  //             if (item.title === 'شهروند ساده') item.active = true;\n  //           });\n  //           setGameRoles(arr);\n  //           gameStore.updateRoles(ind);\n  //         }\n  //       });\n  //     }\n  //     gameStore.removeRoles(item);\n  //     const fakeRole = [...gameRoles];\n  //     const selectedIndex = fakeRole.findIndex(el => el.id === item.id);\n  //     fakeRole[selectedIndex].active = true;\n  //     setGameRoles(fakeRole);\n  //   }\n  // };\n  const addCitizen = () => {\n    const newCitizen = Roles[8];\n    newCitizen.id = Date.now();\n    newCitizen.active = false;\n    setCitizen(citizen + 1);\n    gameStore.addRoles(newCitizen);\n  };\n\n  const removeCitizen = () => {\n    const lastIndex = roles.length - 1;\n    setCitizen(citizen - 1);\n    gameStore.roles.splice(lastIndex, 1);\n  };\n\n  // useEffect(() => {\n  //   if (roles.length === 0) {\n  //     const arr = [...Roles];\n  //     arr.map(item => {\n  //       item.active = true;\n  //     });\n\n  //     return setGameRoles(arr);\n  //   }\n\n  //   if (roles) {\n  //     let len = 0;\n\n  //     roles.map(item => {\n  //       if (item?.title === 'شهروند ساده') {\n  //         len += 1;\n  //         setCitizen(len);\n  //       }\n  //     });\n  //   }\n  // }, [roles]);\n  return (\n    <View\n      style={{\n        flex: 1,\n        width:'100%',\n        backgroundColor: colors.background,\n        paddingTop: 10,\n      }}>\n      <Header\n        title={translate('game.addRoletoThisGame')}\n        // backIcon={isFarsi ? 'chevron-left' : 'chevron-right'}\n        backPress={() => {\n          nav.goBack();\n        }}\n      />\n      {/* <View\n        style={{\n          width: '100%',\n          alignItems: 'flex-end',\n          paddingHorizontal: 20,\n        }}>\n        <Text style={{fontSize: 22, color: 'white'}}>نقش های حاضر در بازی</Text>\n      </View> */}\n      <TabView\n        navigationState={{index, routes}}\n        renderScene={renderScene}\n        onIndexChange={setIndex}\n        key={index}\n        renderTabBar={props => {\n          const inputRange = props.navigationState.routes.map((x, i) => i);\n          return (\n            <View style={styles.tabBar}>\n              {props.navigationState.routes.map((route, i) => {\n                const opacity = props.position.interpolate({\n                  inputRange,\n                  outputRange: inputRange.map(inputIndex =>\n                    inputIndex === i ? 1 : 0.3,\n                  ),\n                });\n\n                return (\n                  <TouchableOpacity\n                    style={styles.tabItem}\n                    key={route.key}\n                    onPress={() => {\n                      if (roles.length) {\n                        checkRef?.current?.present();\n                      } else {\n                        setIndex(i);\n                      }\n                    }}>\n                    <Animated.Text\n                      style={{\n                        opacity,\n                        color: colors.text,\n                        fontSize: language === 'fa' ? spacing.lg : spacing.md,\n                        // lineHeight: 32,\n                        paddingHorizontal: Platform.OS === 'ios' ? 12 : 5,\n                        paddingTop: Platform.OS === 'ios' ? 12 : 10,\n                        fontFamily:\n                          language === 'fa'\n                            ? 'Digi Nofar Bold'\n                            : 'Wizard World',\n                      }}>\n                      {route.title}\n                    </Animated.Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          );\n        }}\n        initialLayout={{width: layout.width}}\n      />\n      <Modal\n        modalRef={checkRef}\n        index={0}\n        onDismiss={() => {}}\n        snapPoints={[DHeight * 0.6]}\n        backgroundStyle={{backgroundColor: colors.modalBackground}}>\n        <View\n          style={{\n            height: '100%',\n            width: '100%',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n          }}>\n          <Text>{translate('game.chooseRoleProblem')}</Text>\n          <Text>{translate('game.cardChoosingDescription')}</Text>\n          <Text>{translate('game.areYouAgree')}</Text>\n          <View\n            style={{\n              flexDirection: 'row-reverse',\n              width: '100%',\n              justifyContent: 'space-around',\n            }}>\n            <Pressable\n              onPress={() => {\n                // addPlayer();\n                gameStore.gameReset();\n                roleStore.resetRoles();\n                if (index === 0) {\n                  setIndex(1);\n                } else {\n                  setIndex(0);\n                }\n                checkRef?.current?.close();\n              }}\n              style={[\n                styles.modalBtn,\n                {\n                  backgroundColor: colors.background,\n                },\n              ]}>\n              <Text>{translate('common.ok')}</Text>\n            </Pressable>\n            <Pressable\n              onPress={() => {\n                checkRef?.current?.close();\n              }}\n              style={[\n                styles.modalBtn,\n                {\n                  backgroundColor: colors.background,\n                },\n              ]}>\n              <Text>{translate('common.cancel')}</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  header: {\n    width: '100%',\n    height: 50,\n    alignItems: 'flex-end',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n  },\n  flatContainer: {\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n  },\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 80,\n  },\n  renderItem: {\n    width: '33%',\n    height: 200,\n    marginBottom: 15,\n    // justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  playerIcon: {\n    width: 110,\n    height: 140,\n    borderRadius: 5,\n    overflow: 'hidden',\n  },\n  addBtn: {\n    width: 60,\n    height: 60,\n    position: 'absolute',\n    bottom: 20,\n    right: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n    backgroundColor: 'white',\n  },\n  addBtnIcon: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    marginLeft: '25%',\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n    height: 200,\n  },\n  modalView: {\n    width: DWidth / 2,\n    height: DHeight / 6,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    elevation: 10,\n  },\n  modalInput: {\n    width: '90%',\n    height: 50,\n    borderWidth: 0.2,\n    paddingHorizontal: 5,\n    borderRadius: 4,\n    textAlign: 'right',\n    fontFamily: 'IRANSansXNoEn-Medium',\n  },\n  modalBtn: {\n    width: '40%',\n    height: 50,\n    marginTop: 10,\n    marginBottom: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n  },\n  tabBar: {\n    flexDirection: 'row',\n    // paddingTop: 50,\n  },\n  tabItem: {\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // padding: 16,\n  },\n});\n\nexport {RolesScreen};\n","import React, {useState} from 'react';\nimport {Image, Pressable, StyleSheet, View} from 'react-native';\nimport Text from '../../components/Text';\nimport {DWidth} from '../../constants/Constants';\nimport {colors, spacing} from '../../theme';\nimport {observer} from 'mobx-react';\nimport {translate} from '../../i18n';\n\nconst CardItem = observer(({item, index, type}) => {\n  const [numberOfLines, setNumberOfLine] = useState(2);\n\n  return (\n    <Pressable\n      style={[styles.renderItem, {flexDirection: 'column'}]}\n      key={item.id}\n      onPress={() => {\n        //   returnPlayer(item);\n      }}>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: 20,\n        }}>\n        {item?.image && (\n          <Image\n            source={item.image}\n            resizeMode=\"contain\"\n            style={{width: 120, height: 170, borderRadius: 10}}\n          />\n        )}\n        <Text style={{fontSize: spacing.lg}}>{item.title}</Text>\n      </View>\n      <View style={{}}>\n        <Text\n          onPress={e => {\n            if (numberOfLines === 2) {\n              setNumberOfLine(0);\n            } else {\n              setNumberOfLine(2);\n            }\n          }}\n          type=\"iran\"\n          numberOfLines={numberOfLines}\n          style={{fontSize: 16}}>\n          {item.description}\n        </Text>\n      </View>\n    </Pressable>\n  );\n});\nexport {CardItem};\nconst styles = StyleSheet.create({\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    marginBottom: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React, {useEffect} from 'react';\nimport {observer} from 'mobx-react';\nimport {Pressable, StyleSheet, View} from 'react-native';\nimport {DWidth} from '../../constants/Constants';\nimport {useStore} from '../../constants/useStore';\nimport Text from '../../components/Text';\nimport {useNavigation} from '@react-navigation/native';\nimport Header from '../../components/Header';\nimport {colors, spacing} from '../../theme';\nimport {translate} from '../../i18n';\n\nconst LearningScreen = observer(() => {\n  const {\n    themeStore: {isDark},\n    langStore: {language},\n  } = useStore();\n  const nav = useNavigation();\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingTop: 20,\n        paddingBottom: 40,\n        backgroundColor: colors.background,\n      }}>\n      <Header\n        title={translate('learn.title')}\n        // backIcon={language === 'fa' ? 'chevron-left' : 'chevron-right'}\n        // backPress={() => {\n        //   nav.goBack();\n        // }}\n      />\n      <Pressable\n        style={[\n          styles.card,\n          {\n            backgroundColor: colors.cardBackground,\n          },\n        ]}\n        onPress={() => nav.navigate('roleCards')}>\n        <Text type=\"bold\" style={{fontSize: spacing.xl}}>\n          {translate('game.roles')}\n        </Text>\n      </Pressable>\n      <Pressable\n        style={[\n          styles.card,\n          {\n            backgroundColor: colors.cardBackground,\n          },\n        ]}\n        onPress={() => nav.navigate('lastMoves')}>\n        <Text style={{fontSize: spacing.xl}}>\n          {'  '}\n          {translate('game.lastMoveCards')}\n          {'  '}\n        </Text>\n      </Pressable>\n      <Pressable\n        style={[\n          styles.card,\n          {\n            backgroundColor: colors.cardBackground,\n          },\n        ]}\n        onPress={() => nav.navigate('rules')}>\n        <Text style={{fontSize: spacing.xl}}>{translate('game.senario')}</Text>\n      </Pressable>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    width: DWidth * 0.9,\n    // height: 80,\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  card: {\n    width: '90%',\n    marginLeft: '5%',\n    height: 100,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15,\n    marginTop: 5,\n  },\n});\n\nexport {LearningScreen};\n","import React from 'react';\nimport {FlatList, View} from 'react-native';\nimport {useStore} from '../../../constants/useStore';\nimport {CardItem} from '../CardItem';\nimport {DWidth} from '../../../constants/Constants';\n\nconst JackCards = () => {\n  const {\n    roleStore: {jackRoles},\n  } = useStore();\n  return (\n    <View style={{flex: 1}}>\n      <FlatList\n        data={jackRoles}\n        keyExtractor={item => item.id}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={{}}\n        renderItem={({item, index}) => {\n          return (\n            <CardItem item={item} index={index} key={item.id} type={'jack'} />\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nexport {JackCards};\n","import React from 'react';\nimport {FlatList, View} from 'react-native';\nimport {useStore} from '../../../constants/useStore';\nimport {CardItem} from '../CardItem';\nimport {DWidth} from '../../../constants/Constants';\n\nconst NustraCards = () => {\n  const {\n    roleStore: {nustraRoles},\n  } = useStore();\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <FlatList\n        data={nustraRoles}\n        keyExtractor={item => item.id}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={{}}\n        renderItem={({item, index}) => {\n          return <CardItem item={item} index={index} key={item.id} />;\n        }}\n      />\n    </View>\n  );\n};\n\nexport {NustraCards};\n","import React, {useState} from 'react';\nimport {observer} from 'mobx-react';\nimport {\n  Animated,\n  FlatList,\n  Image,\n  Platform,\n  Pressable,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport {useStore} from '../../../constants/useStore';\nimport {useNavigation} from '@react-navigation/native';\nimport Header from '../../../components/Header';\nimport {TabView, SceneMap} from 'react-native-tab-view';\nimport {JackCards} from './JackCards';\nimport {NustraCards} from './NustraCards';\nimport {isFarsi, translate} from '../../../i18n';\nimport {colors, spacing} from '../../../theme';\nimport I18n from 'i18n-js';\n\nconst RoleLearning = observer(() => {\n  const {\n    langStore: {language},\n  } = useStore();\n  const nav = useNavigation();\n  const renderScene = SceneMap({\n    jack: JackCards,\n    nustra: NustraCards,\n  });\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    {key: 'jack', title: translate('game.jackRoles')},\n    {key: 'nustra', title: translate('game.nustraRoles')},\n  ]);\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingTop: 20,\n        paddingBottom: 40,\n        paddingHorizontal: 20,\n        backgroundColor: colors.background,\n      }}>\n      <Header\n        title={translate('game.roles')}\n        backPress={() => {\n          nav.goBack();\n        }}\n      />\n      <TabView\n        navigationState={{index, routes}}\n        renderScene={renderScene}\n        onIndexChange={setIndex}\n        renderTabBar={props => {\n          const inputRange = props.navigationState.routes.map((x, i) => i);\n          return (\n            <View style={styles.tabBar}>\n              {props.navigationState.routes.map((route, i) => {\n                const opacity = props.position.interpolate({\n                  inputRange,\n                  outputRange: inputRange.map(inputIndex =>\n                    inputIndex === i ? 1 : 0.3,\n                  ),\n                });\n\n                return (\n                  <TouchableOpacity\n                    key={route.key}\n                    style={styles.tabItem}\n                    onPress={() => setIndex(i)}>\n                    <Animated.Text\n                      style={{\n                        opacity,\n                        color: colors.text,\n                        fontSize: language === 'fa' ? spacing.lg : spacing.md,\n                        lineHeight: 32,\n                        paddingHorizontal: Platform.OS === 'ios' ? 12 : 5,\n                        paddingTop: Platform.OS === 'ios' ? 12 : 10,\n                        fontFamily:\n                          language === 'fa'\n                            ? 'Digi Nofar Bold'\n                            : 'Wizard World',\n                      }}>\n                      {route.title}\n                    </Animated.Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          );\n        }}\n        initialLayout={{width: layout.width}}\n      />\n    </View>\n  );\n});\nconst styles = StyleSheet.create({\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    width: '90%',\n    // height: 80,\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n  },\n  tabBar: {\n    flexDirection: 'row',\n    // paddingTop: 50,\n  },\n  tabItem: {\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport {RoleLearning};\n","import React, {useState} from 'react';\nimport {observer} from 'mobx-react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport {DWidth} from '../../../constants/Constants';\nimport {useStore} from '../../../constants/useStore';\n\nimport {useNavigation} from '@react-navigation/native';\nimport Header from '../../../components/Header';\nimport {SceneMap, TabView} from 'react-native-tab-view';\nimport {JackRules} from './JackRules';\nimport {NustraRules} from './NustraRules';\nimport {isFarsi, translate} from '../../../i18n';\nimport {colors, spacing} from '../../../theme';\n\nconst GameRules = observer(() => {\n  const {\n    langStore: {language},\n  } = useStore();\n  const nav = useNavigation();\n  const renderScene = SceneMap({\n    jack: JackRules,\n    nustra: NustraRules,\n  });\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    {key: 'jack', title: translate('game.jackSenario')},\n    {key: 'nustra', title: translate('game.nustraSenario')},\n  ]);\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingTop: 20,\n        paddingBottom: 40,\n        paddingHorizontal: 20,\n        backgroundColor: colors.background,\n      }}>\n      <Header\n        title={translate('bottomNavigator.learning')}\n        // backIcon={language === 'fa' ? 'chevron-left' : 'chevron-right'}\n        backPress={() => {\n          nav.goBack();\n        }}\n      />\n      <TabView\n        navigationState={{index, routes}}\n        renderScene={renderScene}\n        onIndexChange={setIndex}\n        renderTabBar={props => {\n          const inputRange = props.navigationState.routes.map((x, i) => i);\n          return (\n            <View style={styles.tabBar}>\n              {props.navigationState.routes.map((route, i) => {\n                const opacity = props.position.interpolate({\n                  inputRange,\n                  outputRange: inputRange.map(inputIndex =>\n                    inputIndex === i ? 1 : 0.3,\n                  ),\n                });\n\n                return (\n                  <TouchableOpacity\n                    style={styles.tabItem}\n                    key={route.key}\n                    onPress={() => setIndex(i)}>\n                    <Animated.Text\n                      style={{\n                        opacity,\n                        color: colors.text,\n                        fontSize: language === 'fa' ? spacing.lg : spacing.md,\n                        lineHeight: 32,\n                        paddingHorizontal: Platform.OS === 'ios' ? 12 : 5,\n                        paddingTop: Platform.OS === 'ios' ? 12 : 10,\n                        fontFamily:\n                          language === 'fa'\n                            ? 'Digi Nofar Bold'\n                            : 'Wizard World',\n                      }}>\n                      {route.title}\n                    </Animated.Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          );\n        }}\n        initialLayout={{width: layout.width}}\n      />\n    </View>\n  );\n});\nconst styles = StyleSheet.create({\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    width: DWidth * 0.9,\n    // height: 80,\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  text: {color: 'white', fontSize: 15, lineHeight: 28},\n  tabBar: {\n    flexDirection: 'row',\n    // paddingTop: 50,\n  },\n  tabItem: {\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport {GameRules};\n","import React, {useState} from 'react';\nimport {ScrollView} from 'react-native';\nimport Text from '../../../components/Text';\nimport {translate} from '../../../i18n';\nimport {spacing} from '../../../theme';\n\nconst JackRules = () => {\n  const [numberOfLines, setNumberOfLine] = useState(2);\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <Text style={{fontSize: spacing.lg, marginBottom: 20}}>\n        {translate('game.description')}\n      </Text>\n      <Text\n        onPress={e => {\n          if (numberOfLines === 2) {\n            setNumberOfLine(0);\n          } else {\n            setNumberOfLine(2);\n          }\n        }}\n        numberOfLines={numberOfLines}\n        type=\"iran\"\n        style={{fontSize: 16}}>\n        {translate('game.jackDescription')}\n      </Text>\n      <Text style={{fontSize: spacing.lg, marginVertical: 20}}>\n        {translate('game.gameRules')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.one')} - {translate('game.jackRules.first')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.two')} - {translate('game.jackRules.second')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.three')} - {translate('game.jackRules.third')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.four')} - {translate('game.jackRules.fourth')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.five')} - {translate('game.jackRules.fifth')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.six')} - {translate('game.jackRules.sixth')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.seven')} - {translate('game.jackRules.seventh')}\n      </Text>\n    </ScrollView>\n  );\n};\n\nexport {JackRules};\n","import React, {useState} from 'react';\nimport {ScrollView} from 'react-native';\nimport Text from '../../../components/Text';\nimport {translate} from '../../../i18n';\nimport {spacing} from '../../../theme';\n\nconst NustraRules = () => {\n  const [numberOfLines, setNumberOfLine] = useState(2);\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <Text style={{fontSize: spacing.lg, marginBottom: 10}}>\n        {translate('game.description')}\n      </Text>\n      <Text\n        onPress={e => {\n          if (numberOfLines === 2) {\n            setNumberOfLine(0);\n          } else {\n            setNumberOfLine(2);\n          }\n        }}\n        numberOfLines={numberOfLines}\n        type=\"iran\"\n        style={{fontSize: 16}}>\n        {translate('game.nustraDescription')}\n      </Text>\n      <Text style={{fontSize: spacing.lg, marginVertical: 20}}>\n        {translate('game.gameRules')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.one')} - {translate('game.nustraRules.first')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.two')} - {translate('game.nustraRules.second')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.three')} - {translate('game.nustraRules.third')}\n      </Text>\n      <Text type=\"iran\" style={{fontSize: 16, marginBottom: 10}}>\n        {translate('numbers.four')} - {translate('game.nustraRules.fourth')}\n      </Text>\n    </ScrollView>\n  );\n};\n\nexport {NustraRules};\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {\n  Animated,\n  FlatList,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport {DWidth, backgroundColor} from '../../../constants/Constants';\nimport {useStore} from '../../../constants/useStore';\nimport {CardItem} from '../CardItem';\nimport {useNavigation} from '@react-navigation/native';\nimport Header from '../../../components/Header';\nimport {isFarsi, translate} from '../../../i18n';\nimport {SceneMap, TabView} from 'react-native-tab-view';\nimport {JackLastMove} from './jackLastMoves';\nimport {NustraLastMove} from './nustraLastMoves';\nimport {colors, spacing} from '../../../theme';\nimport I18n from 'i18n-js';\n\nconst LastMoves = observer(() => {\n  const nav = useNavigation();\n  const {\n    langStore: {language},\n  } = useStore();\n  const renderScene = SceneMap({\n    jack: JackLastMove,\n    nustra: NustraLastMove,\n  });\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    {key: 'jack', title: translate('game.jackLast')},\n    {key: 'nustra', title: translate('game.nustraLast')},\n  ]);\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingTop: 20,\n        paddingBottom: 40,\n        paddingHorizontal: 20,\n        backgroundColor: colors.background,\n      }}>\n      <Header\n        title={translate('game.lastMoveCards')}\n        // backIcon={isFarsi ? 'chevron-left' : 'chevron-right'}\n        backPress={() => {\n          nav.goBack();\n        }}\n      />\n      <TabView\n        navigationState={{index, routes}}\n        renderScene={renderScene}\n        onIndexChange={setIndex}\n        renderTabBar={props => {\n          const inputRange = props.navigationState.routes.map((x, i) => i);\n          return (\n            <View style={styles.tabBar}>\n              {props.navigationState.routes.map((route, i) => {\n                const opacity = props.position.interpolate({\n                  inputRange,\n                  outputRange: inputRange.map(inputIndex =>\n                    inputIndex === i ? 1 : 0.3,\n                  ),\n                });\n\n                return (\n                  <TouchableOpacity\n                    key={route.key}\n                    style={styles.tabItem}\n                    onPress={() => setIndex(i)}>\n                    <Animated.Text\n                      style={{\n                        opacity,\n                        color: colors.text,\n                        fontSize: language === 'fa' ? spacing.lg : spacing.md,\n                        lineHeight: 32,\n                        paddingHorizontal: language === 'fa' ? 12 : 5,\n                        paddingTop: language === 'fa' ? 12 : 10,\n                        fontFamily:\n                          language === 'fa'\n                            ? 'Digi Nofar Bold'\n                            : 'Wizard World',\n                      }}>\n                      {route.title}\n                    </Animated.Text>\n                  </TouchableOpacity>\n                );\n              })}\n            </View>\n          );\n        }}\n        initialLayout={{width: layout.width}}\n      />\n      {/* <FlatList\n        data={lastMoves}\n        keyExtractor={(index, item) => item.id}\n        contentContainerStyle={{\n          width: DWidth,\n          // marginTop: 20,\n          marginHorizontal: DWidth * 0.05,\n        }}\n        renderItem={({item, index}) => {\n          return <CardItem item={item} index={index} key={item.id} />;\n        }}\n      /> */}\n    </View>\n  );\n});\nconst styles = StyleSheet.create({\n  emptyList: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    marginTop: 40,\n  },\n  renderItem: {\n    width: DWidth * 0.9,\n    // height: 80,\n    flexDirection: 'row-reverse',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  tabBar: {\n    flexDirection: 'row',\n    // paddingTop: 50,\n  },\n  tabItem: {\n    // flex: 1,\n    width: '50%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // padding: 16,\n  },\n});\n\nexport {LastMoves};\n","import React from 'react';\nimport {FlatList, View} from 'react-native';\nimport {useStore} from '../../../constants/useStore';\nimport {CardItem} from '../CardItem';\nimport {DWidth} from '../../../constants/Constants';\n\nconst JackLastMove = () => {\n  const {\n    gameStore: {jackLastMove},\n  } = useStore();\n  return (\n    <View style={{flex: 1}}>\n      <FlatList\n        data={jackLastMove}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={item => item.id}\n        contentContainerStyle={{\n          // width: DWidth * 0.95,\n          // marginHorizontal: DWidth * 0.025,\n        }}\n        renderItem={({item, index}) => {\n          return <CardItem item={item} index={index} key={item.id} />;\n        }}\n      />\n    </View>\n  );\n};\n\nexport {JackLastMove};\n","import React from 'react';\nimport {FlatList, View} from 'react-native';\nimport {useStore} from '../../../constants/useStore';\nimport {CardItem} from '../CardItem';\nimport {DWidth} from '../../../constants/Constants';\n\nconst NustraLastMove = () => {\n  const {\n    gameStore: {nustraLastMove},\n  } = useStore();\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <FlatList\n        data={nustraLastMove}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={item => item.id}\n        contentContainerStyle={{}}\n        renderItem={({item, index}) => {\n          return <CardItem item={item} index={index} key={item.id} />;\n        }}\n      />\n    </View>\n  );\n};\n\nexport {NustraLastMove};\n","import React, {useEffect, useState} from 'react';\nimport {Appearance, Platform, View} from 'react-native';\nimport {colors, spacing} from '../../theme';\nimport {changeLang, translate} from '../../i18n';\nimport {Radio} from '../../components/Radio';\nimport I18n from 'i18n-js';\nimport Header from '../../components/Header';\nimport {useNavigation} from '@react-navigation/native';\nimport {observer} from 'mobx-react';\nimport * as storage from '../../utils/storage';\nimport RNRestart from 'react-native-restart';\nimport Text from '../../components/Text';\nimport {useStore} from '../../constants/useStore';\n// import * as Updates from 'expo-updates';\nimport {Restart} from 'fiction-expo-restart';\nconst SettingScreen = observer(() => {\n  const nav = useNavigation();\n  const {\n    themeStore: {setTheme, isDark},\n  } = useStore();\n  const getStoreTheme = async () => {\n    await storage.load('theme').then(res => {\n      if (res === 'light') {\n        setSelectedMode('deactive');\n      } else {\n        setSelectedMode('active');\n      }\n    });\n  };\n  useEffect(() => {\n    getStoreTheme();\n  }, []);\n  const [selectedLang, setSelectedLang] = useState(\n    I18n.locale === 'en-IR' ? 'fa' : 'en',\n  );\n  const [selectedMode, setSelectedMode] = useState(\n    isDark ? 'active' : 'deactive',\n  );\n\n  const handlePress = async option => {\n    if (option === 'Persian') {\n      storage.save('language', 'en-IR');\n      setSelectedLang('fa');\n      changeLang('en-IR');\n      // RNRestart.Restart();\n      Restart();\n    } else {\n      storage.save('language', 'en-US');\n      setSelectedLang('en');\n      changeLang('en-US');\n      // RNRestart.Restart();\n      Restart();\n    }\n  };\n\n  const handleNight = mode => {\n    if (mode === 'active') {\n      storage.save('theme', 'dark');\n      // Appearance.setColorScheme('dark');\n      setTheme(true);\n      setSelectedMode(mode);\n      Restart();\n    } else {\n      storage.save('theme', 'light');\n      // Appearance.setColorScheme('light');\n      setTheme(false);\n      setSelectedMode(mode);\n      Restart();\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        paddingTop: 20,\n        paddingBottom: 40,\n        paddingHorizontal: 20,\n        backgroundColor: colors.background,\n      }}>\n      <Header title={translate('settings.title')} />\n      <View style={{flexDirection: 'row-reverse'}}>\n        <Text style={{fontSize: spacing.xl}}>\n          {translate('settings.language')}\n        </Text>\n      </View>\n\n      <View style={{paddingHorizontal: 20}}>\n        <Radio\n          label={translate('settings.persian')}\n          onPress={() => handlePress(translate('settings.persian'))}\n          selected={selectedLang === 'fa'}\n        />\n        <Radio\n          label={translate('settings.english')}\n          onPress={() => handlePress(translate('settings.english'))}\n          selected={selectedLang === 'en'}\n        />\n      </View>\n      <View style={{flexDirection: 'row-reverse'}}>\n        <Text style={{fontSize: spacing.xl}}>\n          {translate('settings.nightMode')}\n        </Text>\n      </View>\n\n      <View style={{paddingHorizontal: 20}}>\n        <Radio\n          label={translate('settings.active')}\n          onPress={() => handleNight('active')}\n          selected={selectedMode === 'active'}\n        />\n        <Radio\n          label={translate('settings.deactive')}\n          onPress={() => handleNight('deactive')}\n          selected={selectedMode === 'deactive'}\n        />\n      </View>\n    </View>\n  );\n});\n\nexport default SettingScreen;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Animated, Image, View } from \"react-native\";\nimport BootSplash from \"react-native-bootsplash\";\n\ntype Props = {\n  onAnimationEnd: () => void;\n};\n\nexport const AnimatedBootSplash = ({ onAnimationEnd }: Props) => {\n  const [opacity] = useState(() => new Animated.Value(1));\n\n  const { container, logo /*, brand */ } = BootSplash.useHideAnimation({\n    manifest: require(\"../../../assets/bootsplash_manifest.json\"),\n\n    logo: require(\"../../../assets/bootsplash_logo.png\"),\n    // darkLogo: require(\"../assets/bootsplash_dark_logo.png\"),\n    // brand: require(\"../assets/bootsplash_brand.png\"),\n    // darkBrand: require(\"../assets/bootsplash_dark_brand.png\"),\n\n    statusBarTranslucent: true,\n    navigationBarTranslucent: false,\n\n    animate: () => {\n      // Perform animations and call onAnimationEnd\n      Animated.timing(opacity, {\n        useNativeDriver: true,\n        toValue: 0,\n        duration: 5000,\n      }).start(() => {\n        onAnimationEnd();\n      });\n    },\n  });\n\n  return (\n    <Animated.View {...container} style={[container.style, { opacity }]}>\n      <Image {...logo} />\n      {/* <Image {...brand} /> */}\n    </Animated.View>\n  );\n};\n\n// export const SplashScreen = () => {\n//   const [visible, setVisible] = useState(true);\n\n//   return (\n//     <View style={{ flex: 1 }}>\n//       {/* content */}\n\n//       {visible && (\n//         <AnimatedBootSplash\n//           onAnimationEnd={() => {\n//             setVisible(false);\n//           }}\n//         />\n//       )}\n//     </View>\n//   );\n// };","import {observable, action, makeAutoObservable} from 'mobx';\nimport {translate} from '../i18n';\n\nclass GameStore {\n  @observable roles = [];\n  @observable players = [];\n  @observable rolePlayers = [];\n  @observable removedPlayers = [];\n  @observable night = 0;\n  @observable day = 0;\n  @observable gameType = '';\n  @observable nightStory = [\n    {\n      id: 0,\n      turn: 1,\n      name: 'شب معارفه',\n      description:\n        'در این شب در ابتدا نوستراداموس استعلام ۳ یا ۲ نفر را میگیرد که با توجه به آن استعلام می تواند با مافیا یا شهروند بازی کند و در ادامه مافیا بیدار می شوند و هم دیگر را می شناسند ، دراین شب مافیا شلیک ندارند',\n      jobs: [\n        {\n          id: 0,\n          role: 'نوستراداموس',\n        },\n      ],\n    },\n    {\n      id: 1,\n      turn: 2,\n      name: 'شب',\n      description: '',\n      jobs: [\n        {\n          id: 0,\n          role: 'مافیا',\n        },\n        {\n          id: 1,\n          role: 'دکتر',\n        },\n        {\n          id: 2,\n          role: 'لئون',\n        },\n        {\n          id: 3,\n          role: 'همشهری کین',\n        },\n        {\n          id: 4,\n          role: 'کنستانتین',\n        },\n      ],\n    },\n  ];\n  @observable nustraLastMove = [\n    {\n      id: 1,\n      title: translate('game.rolecards.lastMoveCards.lambsSilence'),\n      description: translate('game.rolecards.lastMoveCards.lambDesc'),\n    },\n    {\n      id: 2,\n      title: translate('game.rolecards.lastMoveCards.IdentityDisclosure'),\n      description: translate('game.rolecards.lastMoveCards.identityDesc'),\n    },\n    {\n      id: 3,\n      title: translate('game.rolecards.lastMoveCards.beautifulMind'),\n      description: translate(\n        'game.rolecards.lastMoveCards.beautifalNustraDesc',\n      ),\n    },\n    {\n      id: 4,\n      title: translate('game.rolecards.lastMoveCards.bracelet'),\n      description: translate('game.rolecards.lastMoveCards.braceletDesc'),\n    },\n    {\n      id: 5,\n      title: translate('game.rolecards.lastMoveCards.faceoff'),\n      description: translate('game.rolecards.lastMoveCards.faceoffDesc'),\n    },\n  ];\n\n  @observable jackLastMove = [\n    {\n      id: 1,\n      title: translate('game.rolecards.lastMoveCards.lambsSilence'),\n      description: translate('game.rolecards.lastMoveCards.lambDesc'),\n    },\n    {\n      id: 2,\n      title: translate('game.rolecards.lastMoveCards.IdentityDisclosure'),\n      description: translate('game.rolecards.lastMoveCards.identityDesc'),\n    },\n    {\n      id: 3,\n      title: translate('game.rolecards.lastMoveCards.beautifulMind'),\n      description: translate('game.rolecards.lastMoveCards.beautifalJackDesc'),\n    },\n    {\n      id: 4,\n      title: translate('game.rolecards.lastMoveCards.bracelet'),\n      description: translate('game.rolecards.lastMoveCards.braceletDesc'),\n    },\n    {\n      id: 5,\n      title: translate('game.rolecards.lastMoveCards.faceoff'),\n      description: translate('game.rolecards.lastMoveCards.faceoffDesc'),\n    },\n  ];\n  constructor() {\n    makeAutoObservable(this);\n    this.roles = [];\n  }\n  @action addDay() {\n    this.day = this.day + 1;\n    return this.day;\n  }\n  @action addNight() {\n    this.night = this.night + 1;\n    return this.night;\n  }\n  @action updateRoles(roles) {\n    this.roles = roles;\n    return this.roles;\n  }\n  @action updateLastCards(cards) {\n    this.lastMoveCards = cards;\n    return this.roles;\n  }\n\n  @action updateRolePlayers(items) {\n    this.rolePlayers = items;\n    return this.rolePlayers;\n  }\n  @action getRoles() {\n    return this.roles;\n  }\n  @action addRoles(role) {\n    if (!this.roles) {\n      this.roles = []; // Initialize if undefined\n    }\n    const newRoles = [...this.roles];\n    newRoles.push(role);\n    this.roles = newRoles;\n\n    // this.roles.push(role);\n    return this.roles;\n  }\n  @action removeRoles(role) {\n    const newRoles = [...this.roles];\n    const indexRole = newRoles.indexOf(role);\n    newRoles.splice(indexRole, 1);\n    this.roles = newRoles;\n    return this.roles;\n  }\n  @action addPlayers(player) {\n    const newPlayers = [...this.players];\n    newPlayers.push(player);\n    this.players = newPlayers;\n    return this.players;\n  }\n  @action removePlayers(player) {\n    const newPlayers = [...this.players];\n    newPlayers.filter(item => item === player);\n    this.players = newPlayers;\n    return this.players;\n  }\n  @action getRemovedPlayers() {\n    return this.removedPlayers;\n  }\n\n  @action updateRemovedPlayers(newArr) {\n    this.removedPlayers = newArr;\n    return this.removedPlayers;\n  }\n\n  @action setGameType(type) {\n    this.gameType = type;\n    return this.gameType;\n  }\n\n  @action resetLastMoves() {\n    this.jackLastMove = [\n      {\n        id: 1,\n        title: translate('game.rolecards.lastMoveCards.lambsSilence'),\n        description: translate('game.rolecards.lastMoveCards.lambDesc'),\n      },\n      {\n        id: 2,\n        title: translate('game.rolecards.lastMoveCards.IdentityDisclosure'),\n        description: translate('game.rolecards.lastMoveCards.identityDesc'),\n      },\n      {\n        id: 3,\n        title: translate('game.rolecards.lastMoveCards.beautifulMind'),\n        description: translate(\n          'game.rolecards.lastMoveCards.beautifalJackDesc',\n        ),\n      },\n      {\n        id: 4,\n        title: translate('game.rolecards.lastMoveCards.bracelet'),\n        description: translate('game.rolecards.lastMoveCards.braceletDesc'),\n      },\n      {\n        id: 5,\n        title: translate('game.rolecards.lastMoveCards.faceoff'),\n        description: translate('game.rolecards.lastMoveCards.faceoffDesc'),\n      },\n    ];\n\n    this.nustraLastMove = [\n      {\n        id: 1,\n        title: translate('game.rolecards.lastMoveCards.lambsSilence'),\n        description: translate('game.rolecards.lastMoveCards.lambDesc'),\n      },\n      {\n        id: 2,\n        title: translate('game.rolecards.lastMoveCards.IdentityDisclosure'),\n        description: translate('game.rolecards.lastMoveCards.identityDesc'),\n      },\n      {\n        id: 3,\n        title: translate('game.rolecards.lastMoveCards.beautifulMind'),\n        description: translate(\n          'game.rolecards.lastMoveCards.beautifalNustraDesc',\n        ),\n      },\n      {\n        id: 4,\n        title: translate('game.rolecards.lastMoveCards.bracelet'),\n        description: translate('game.rolecards.lastMoveCards.braceletDesc'),\n      },\n      {\n        id: 5,\n        title: translate('game.rolecards.lastMoveCards.faceoff'),\n        description: translate('game.rolecards.lastMoveCards.faceoffDesc'),\n      },\n    ];\n  }\n  @action gameReset() {\n    this.removedPlayers = [];\n    this.roles = [];\n    this.players = [];\n    this.gameType = '';\n    this.rolePlayers = [];\n    this.night = 0;\n    this.day = 0;\n  }\n}\nexport default new GameStore();\n","import gameStore from './gameStore';\nimport langStore from './langStore';\nimport PlayerStore from './playerStore';\nimport roleStore from './roleStore';\nimport themeStore from './themeStore';\n\nexport default () => ({\n  playerStore: PlayerStore,\n  roleStore: roleStore,\n  gameStore: gameStore,\n  langStore: langStore,\n  themeStore: themeStore,\n});\n","import {observable, action, makeAutoObservable} from 'mobx';\n\nclass LangStore {\n  @observable language = 'fa';\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @action getLanguage() {\n    return this.language;\n  }\n\n  @action changeLanguage(lang) {\n    this.language = lang;\n    return this.language;\n  }\n}\n\nexport default new LangStore();\n","import {observable, action, makeAutoObservable, toJS, runInAction} from 'mobx';\n\nclass PlayerStore {\n  @observable players = [];\n  @observable playersWithoutRole = 0;\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @action getPlayers() {\n    return this.players;\n  }\n\n  @action addPlayers(player) {\n    const newPlayers = [...this.players];\n    newPlayers.push(player);\n    this.players = newPlayers;\n  }\n  @action removePlayers(player) {\n    const newPlayers = [...this.players];\n    const newList = newPlayers.filter(item => item !== player);\n    this.players = newList;\n    return this.players;\n  }\n\n  @action setPlayerRole(num) {\n    runInAction(() => (this.playersWithoutRole = num));\n  }\n  @action resetPlayers() {\n    return (this.players = []);\n  }\n}\nexport default new PlayerStore();\n","import {observable, action, makeAutoObservable} from 'mobx';\nimport {translate} from '../i18n';\n\nclass RoleStore {\n  @observable nustraRoles = [\n    {\n      id: 0,\n      title: translate('game.rolecards.godfather'),\n      image: require('../assets/images/roles/nustraType/godfather.jpeg'),\n      active: true,\n      shield: true,\n      side: 'mafia',\n      duty: {\n        sixthSense: true,\n      },\n      description: translate('game.rolecards.nustraTypeDesc.godfatherDesc'),\n    },\n    {\n      id: 1,\n      title: translate('game.rolecards.saul'),\n      active: true,\n      shield: false,\n      side: 'mafia',\n      duty: {\n        buyCitizen: true,\n      },\n      image: require('../assets/images/roles/nustraType/SaulGoodman.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.saulDesc'),\n    },\n    {\n      id: 2,\n      title: translate('game.rolecards.matador'),\n      active: true,\n      shield: false,\n      side: 'mafia',\n      duty: {\n        getAbility: true,\n      },\n      image: require('../assets/images/roles/nustraType/Matador.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.matadorDesc'),\n    },\n    {\n      id: 3,\n      title: translate('game.rolecards.nustradamus'),\n      active: true,\n      shield: true,\n      side: 'free',\n      duty: {\n        guess: true,\n      },\n      image: require('../assets/images/roles/nustraType/Nostradamoos.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.nustraDesc'),\n    },\n    {\n      id: 4,\n      title: translate('game.rolecards.doctor'),\n      active: true,\n      shield: false,\n      side: 'city',\n      duty: {\n        saveOwn: 1,\n        savePeople: true,\n      },\n      image: require('../assets/images/roles/nustraType/DrWatson.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.doctorDesc'),\n    },\n    {\n      id: 5,\n      title: translate('game.rolecards.leon'),\n      active: true,\n      side: 'city',\n      shield: true,\n      duty: {\n        nightShot: 2,\n      },\n      image: require('../assets/images/roles/nustraType/Leon.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.leonDesc'),\n    },\n    {\n      id: 6,\n      title: translate('game.rolecards.ckane'),\n      side: 'city',\n      active: true,\n      shield: false,\n      duty: {\n        inquiry: true,\n      },\n      image: require('../assets/images/roles/nustraType/Kin.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.ckaneDesc'),\n    },\n    {\n      id: 7,\n      title: translate('game.rolecards.constantine'),\n      active: true,\n      side: 'city',\n      shield: false,\n      duty: {\n        returns: true,\n      },\n      image: require('../assets/images/roles/nustraType/Constantine.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.constantineDesc'),\n    },\n    {\n      id: 8,\n      title: translate('game.rolecards.citizen'),\n      active: true,\n      side: 'city',\n      shield: false,\n      image: require('../assets/images/roles/nustraType/City.jpeg'),\n      description: translate('game.rolecards.nustraTypeDesc.citizenDesk'),\n    },\n  ];\n  @observable jackRoles = [\n    {\n      id: 0,\n      title: translate('game.rolecards.godfather'),\n      image: require('../assets/images/roles/jackType/JGodfather.webp'),\n      active: true,\n      shield: true,\n      side: 'mafia',\n      duty: {\n        sixthSense: true,\n      },\n      description: translate('game.rolecards.jackTypeDesc.godfatherDesc'),\n    },\n    {\n      id: 1,\n      title: translate('game.rolecards.saul'),\n      active: true,\n      shield: false,\n      side: 'mafia',\n      duty: {\n        buyCitizen: true,\n      },\n      image: require('../assets/images/roles/jackType/JGoodman.webp'),\n      description: translate('game.rolecards.jackTypeDesc.saulDesc'),\n    },\n    {\n      id: 2,\n      title: translate('game.rolecards.matador'),\n      active: true,\n      shield: false,\n      side: 'mafia',\n      duty: {\n        getAbility: true,\n      },\n      image: require('../assets/images/roles/jackType/JMatador.webp'),\n      description: translate('game.rolecards.jackTypeDesc.matadorDesc'),\n    },\n    {\n      id: 3,\n      title: translate('game.rolecards.jack'),\n      active: true,\n      shield: true,\n      side: 'free',\n      duty: {\n        guess: true,\n      },\n      image: require('../assets/images/roles/jackType/Jack.webp'),\n      description: translate('game.rolecards.jackTypeDesc.jackDesc'),\n    },\n    {\n      id: 4,\n      title: translate('game.rolecards.doctor'),\n      active: true,\n      shield: false,\n      side: 'city',\n      duty: {\n        saveOwn: 1,\n        savePeople: true,\n      },\n      image: require('../assets/images/roles/jackType/JWatson.webp'),\n      description: translate('game.rolecards.jackTypeDesc.doctorDesc'),\n    },\n    {\n      id: 5,\n      title: translate('game.rolecards.leon'),\n      active: true,\n      side: 'city',\n      shield: true,\n      duty: {\n        nightShot: 2,\n      },\n      image: require('../assets/images/roles/jackType/JLeon.webp'),\n      description: translate('game.rolecards.jackTypeDesc.leonDesc'),\n    },\n    {\n      id: 6,\n      title: translate('game.rolecards.ckane'),\n      side: 'city',\n      active: true,\n      shield: false,\n      duty: {\n        inquiry: true,\n      },\n      image: require('../assets/images/roles/jackType/JKane.webp'),\n      description: translate('game.rolecards.jackTypeDesc.ckaneDesc'),\n    },\n    {\n      id: 7,\n      title: translate('game.rolecards.constantine'),\n      active: true,\n      side: 'city',\n      shield: false,\n      duty: {\n        returns: true,\n      },\n      image: require('../assets/images/roles/jackType/JConstantine.webp'),\n      description: translate('game.rolecards.jackTypeDesc.constantineDesc'),\n    },\n    {\n      id: 8,\n      title: translate('game.rolecards.citizen'),\n      active: true,\n      side: 'city',\n      shield: false,\n      image: require('../assets/images/roles/jackType/JCity.webp'),\n      description: translate('game.rolecards.jackTypeDesc.citizenDesk'),\n    },\n  ];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @action getJackRoles() {\n    return this.jackRoles;\n  }\n  @action getNustraRoles() {\n    return this.nustraRoles;\n  }\n\n  @action resetRoles() {\n    this.jackRoles = [\n      {\n        id: 0,\n        title: translate('game.rolecards.godfather'),\n        image: require('../assets/images/roles/jackType/JGodfather.webp'),\n        active: true,\n        shield: true,\n        side: 'mafia',\n        duty: {\n          sixthSense: true,\n        },\n        description: translate('game.rolecards.jackTypeDesc.godfatherDesc'),\n      },\n      {\n        id: 1,\n        title: translate('game.rolecards.saul'),\n        active: true,\n        shield: false,\n        side: 'mafia',\n        duty: {\n          buyCitizen: true,\n        },\n        image: require('../assets/images/roles/jackType/JGoodman.webp'),\n        description: translate('game.rolecards.jackTypeDesc.saulDesc'),\n      },\n      {\n        id: 2,\n        title: translate('game.rolecards.matador'),\n        active: true,\n        shield: false,\n        side: 'mafia',\n        duty: {\n          getAbility: true,\n        },\n        image: require('../assets/images/roles/jackType/JMatador.webp'),\n        description: translate('game.rolecards.jackTypeDesc.matadorDesc'),\n      },\n      {\n        id: 3,\n        title: translate('game.rolecards.jack'),\n        active: true,\n        shield: true,\n        side: 'free',\n        duty: {\n          guess: true,\n        },\n        image: require('../assets/images/roles/jackType/Jack.webp'),\n        description: translate('game.rolecards.jackTypeDesc.jackDesc'),\n      },\n      {\n        id: 4,\n        title: translate('game.rolecards.doctor'),\n        active: true,\n        shield: false,\n        side: 'city',\n        duty: {\n          saveOwn: 1,\n          savePeople: true,\n        },\n        image: require('../assets/images/roles/jackType/JWatson.webp'),\n        description: translate('game.rolecards.jackTypeDesc.doctorDesc'),\n      },\n      {\n        id: 5,\n        title: translate('game.rolecards.leon'),\n        active: true,\n        side: 'city',\n        shield: true,\n        duty: {\n          nightShot: 2,\n        },\n        image: require('../assets/images/roles/jackType/JLeon.webp'),\n        description: translate('game.rolecards.jackTypeDesc.leonDesc'),\n      },\n      {\n        id: 6,\n        title: translate('game.rolecards.ckane'),\n        side: 'city',\n        active: true,\n        shield: false,\n        duty: {\n          inquiry: true,\n        },\n        image: require('../assets/images/roles/jackType/JKane.webp'),\n        description: translate('game.rolecards.jackTypeDesc.ckaneDesc'),\n      },\n      {\n        id: 7,\n        title: translate('game.rolecards.constantine'),\n        active: true,\n        side: 'city',\n        shield: false,\n        duty: {\n          returns: true,\n        },\n        image: require('../assets/images/roles/jackType/JConstantine.webp'),\n        description: translate('game.rolecards.jackTypeDesc.constantineDesc'),\n      },\n      {\n        id: 8,\n        title: translate('game.rolecards.citizen'),\n        active: true,\n        side: 'city',\n        shield: false,\n        image: require('../assets/images/roles/jackType/JCity.webp'),\n        description: translate('game.rolecards.jackTypeDesc.citizenDesk'),\n      },\n    ];\n    this.nustraRoles = [\n      {\n        id: 0,\n        title: translate('game.rolecards.godfather'),\n        image: require('../assets/images/roles/nustraType/godfather.jpeg'),\n        active: true,\n        shield: true,\n        side: 'mafia',\n        duty: {\n          sixthSense: true,\n        },\n        description: translate('game.rolecards.nustraTypeDesc.godfatherDesc'),\n      },\n      {\n        id: 1,\n        title: translate('game.rolecards.saul'),\n        active: true,\n        shield: false,\n        side: 'mafia',\n        duty: {\n          buyCitizen: true,\n        },\n        image: require('../assets/images/roles/nustraType/SaulGoodman.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.saulDesc'),\n      },\n      {\n        id: 2,\n        title: translate('game.rolecards.matador'),\n        active: true,\n        shield: false,\n        side: 'mafia',\n        duty: {\n          getAbility: true,\n        },\n        image: require('../assets/images/roles/nustraType/Matador.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.matadorDesc'),\n      },\n      {\n        id: 3,\n        title: translate('game.rolecards.nustradamus'),\n        active: true,\n        shield: true,\n        side: 'free',\n        duty: {\n          guess: true,\n        },\n        image: require('../assets/images/roles/nustraType/Nostradamoos.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.nustraDesc'),\n      },\n      {\n        id: 4,\n        title: translate('game.rolecards.doctor'),\n        active: true,\n        shield: false,\n        side: 'city',\n        duty: {\n          saveOwn: 1,\n          savePeople: true,\n        },\n        image: require('../assets/images/roles/nustraType/DrWatson.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.doctorDesc'),\n      },\n      {\n        id: 5,\n        title: translate('game.rolecards.leon'),\n        active: true,\n        side: 'city',\n        shield: true,\n        duty: {\n          nightShot: 2,\n        },\n        image: require('../assets/images/roles/nustraType/Leon.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.leonDesc'),\n      },\n      {\n        id: 6,\n        title: translate('game.rolecards.ckane'),\n        side: 'city',\n        active: true,\n        shield: false,\n        duty: {\n          inquiry: true,\n        },\n        image: require('../assets/images/roles/nustraType/Kin.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.ckaneDesc'),\n      },\n      {\n        id: 7,\n        title: translate('game.rolecards.constantine'),\n        active: true,\n        side: 'city',\n        shield: false,\n        duty: {\n          returns: true,\n        },\n        image: require('../assets/images/roles/nustraType/Constantine.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.constantineDesc'),\n      },\n      {\n        id: 8,\n        title: translate('game.rolecards.citizen'),\n        active: true,\n        side: 'city',\n        shield: false,\n        image: require('../assets/images/roles/nustraType/City.jpeg'),\n        description: translate('game.rolecards.nustraTypeDesc.citizenDesk'),\n      },\n    ];\n  }\n\n  @action setJackRoles(roles) {\n    this.jackRoles = roles;\n    return this.jackRoles;\n  }\n  @action setNustraRoles() {\n    this.nustraRoles = roles;\n    return this.nustraRoles;\n  }\n}\nexport default new RoleStore();\n","import {observable, action, makeAutoObservable, toJS, runInAction} from 'mobx';\nimport { setColorMode } from '../theme';\n\nclass ThemeStore {\n  @observable isDark = true;\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @action getTheme() {\n    return this.isDark;\n  }\n\n  @action setTheme(theme) {\n    setColorMode(theme)\n    return (this.isDark = theme);\n  }\n}\nexport default new ThemeStore();\n","// TODO: write documentation for colors and palette in own markdown file and add links from here\n\n// really usefull website to get color tints and shades\n// https://www.color-hex.com/color/1d6f2f\n\nconst palette = {\n  neutral100: '#FFFFFF',\n  neutral200: '#F4F2F1',\n  neutral300: '#D7CEC9',\n  neutral400: '#B6ACA6',\n  neutral500: '#978F8A',\n  neutral600: '#564E4A',\n  neutral700: '#3C3836',\n  neutral800: '#191015',\n  neutral900: '#000000',\n\n  primary100: '#000617',\n  primary200: '#010b2b',\n  primary300: '#0f1f4f',\n  primary400: '#505e6f',\n  primary500: '#1d3046',\n  primary600: '#051a32',\n\n  secondary100: '#add1f3',\n  secondary200: '#bcdaf5',\n  secondary300: '#7fa4c7',\n  secondary400: '#485e73',\n  secondary500: '#41476E',\n\n  accent100: '#FFEED4',\n  accent200: '#FFE1B2',\n  accent300: '#FDD495',\n  accent400: '#FBC878',\n  accent500: '#FFBB50',\n\n  angry100: '#F2D6CD',\n  angry500: '#C03403',\n  angry900: '#6f2f1d',\n\n  happy100: '#fb9833',\n  happy500: '#03c034',\n  happy900: '#1D6F2F',\n\n  nuetral100: '#d6cdf2',\n  nuetral500: '#3403c0',\n  nuetral900: '#2f1d6f',\n\n  overlay40: 'rgba(173, 209, 243,0.4)',\n  overlay20: 'rgba(1, 11, 43,0.6)',\n} as const;\n\nconst lightColors = {\n  /**\n   * The palette is available to use, but prefer using the name.\n   * This is only included for rare, one-off cases. Try to use\n   * semantic names as much as possible.\n   */\n  palette,\n  /**\n   * A helper for making something see-thru.\n   */\n  transparent: 'rgba(0, 0, 0, 0)',\n  /**\n   * The default text color in many components.\n   */\n  text: palette.primary100,\n\n  bottomActiveTint: palette.primary100,\n  bottomInactiveTint: palette.neutral100,\n  /**\n   * Secondary text information.\n   */\n  textDim: palette.neutral600,\n  /**\n   * The default color of the screen background.\n   */\n  background: palette.secondary100,\n  cardBackground: palette.secondary200,\n  overlayBackground: palette.overlay40,\n\n  modalBackground: palette.happy100,\n  special: palette.happy100,\n\n  /**\n   * The default border color.\n   */\n  border: palette.primary200,\n  /**\n   * The main tinting color.\n   */\n  // tint: palette.primary500,\n  tint: palette.primary100,\n\n  bottomCenterColor: palette.secondary400,\n  /**\n   * A subtle color used for lines.\n   */\n  separator: palette.neutral300,\n  /**\n   * Error messages.\n   */\n  error: palette.angry500,\n  /**\n   * Error Background.\n   */\n  errorBackground: palette.angry100,\n  /**\n   * Bottom tab bar Background.\n   */\n  bottomTabBarBackground: palette.secondary300,\n  /**\n   * Button tab Background.\n   */\n  buttonBackground: palette.neutral200,\n  buttonText: palette.neutral200,\n  inputBackground: palette.neutral200,\n};\nconst darkColors = {\n  /**\n   * The palette is available to use, but prefer using the name.\n   * This is only included for rare, one-off cases. Try to use\n   * semantic names as much as possible.\n   */\n  palette,\n  /**\n   * A helper for making something see-thru.\n   */\n  transparent: 'rgba(0, 0, 0, 0)',\n  /**\n   * The default text color in many components.\n   */\n  text: palette.neutral200,\n  bottomActiveTint: '#0D98BA',\n  bottomInactiveTint: palette.neutral200,\n  /**\n   * Secondary text information.\n   */\n  textDim: palette.neutral600,\n  /**\n   * The default color of the screen background.\n   */\n  background: palette.primary200, // palette.neutral800,\n\n  cardBackground: palette.primary300,\n  modalBackground: palette.primary300,\n  overlayBackground: palette.overlay20,\n  special: palette.happy100,\n  /**\n   * The default border color.\n   */\n  border: palette.neutral200,\n  /**\n   * The main tinting color.\n   */\n  // tint: palette.primary500,\n  tint: '#0D98BA',\n\n  bottomCenterColor: '#485e73',\n\n  /**\n   * A subtle color used for lines.\n   */\n  separator: '#0D98BA', // palette.neutral700,\n  /**\n   * Error messages.\n   */\n  error: palette.angry500,\n  /**\n   * Error Background.\n   */\n  errorBackground: palette.angry100,\n  /**\n   * Bottom tab bar Background.\n   */\n  bottomTabBarBackground: palette.primary100,\n  /**\n   * Button tab Background.\n   */\n  buttonBackground: palette.neutral200,\n  buttonText: palette.neutral800,\n  inputBackground: palette.neutral200,\n};\n\nlet colors: typeof lightColors | typeof darkColors = lightColors;\n\nconst setColorMode = (mode: boolean) => {\n  colors = mode === true ? darkColors : lightColors;\n};\n\nexport {colors, setColorMode};\n","export * from \"./colors\"\nexport * from \"./spacing\"\n","/**\n  Use these spacings for margins/paddings and other whitespace throughout your app.\n */\n\nimport {Platform} from 'react-native';\n\nexport const commonSpacing = {\n  xxxs: 2,\n  xxs: 4,\n  xs: 8,\n  sm: 12,\n  md: 16,\n  lg: 24,\n  xl: 32,\n  xxl: 48,\n  xxxl: 64,\n} as const;\n\nconst androidSpacing = {\n  xxxs: 2,\n  xxs: 4,\n  xs: 8,\n  sm: 10,\n  md: 16,\n  lg: 20,\n  xl: 24,\n  xxl: 32,\n  xxxl: 40,\n  // Add Android-specific spacing values here\n} as const;\n\nconst iosSpacing = {\n  // Add iOS-specific spacing values here\n} as const;\n\n// Combine platform-specific spacing with common spacing\nexport const spacing: Record<string, number> = {\n  ...commonSpacing,\n  ...(Platform.OS === 'android' ? androidSpacing : iosSpacing),\n} as const;\n\n// export type Spacing = keyof typeof spacing;\nexport type Spacing = keyof typeof spacing;\n","/**\n * Ignore some yellowbox warnings. Some of these are for deprecated functions\n * that we haven't gotten around to replacing yet.\n */\nimport { LogBox } from \"react-native\"\n\n// prettier-ignore\nLogBox.ignoreLogs([\n  \"Require cycle:\",\n])\n","// import Snackbar from 'react-native-snackbar';\nimport React from 'react';\nimport {Toast} from 'react-native-toast-notifications';\n\nimport {useStore} from '../constants/useStore';\nimport {colors} from '../theme';\nimport {DWidth} from '../constants/Constants';\n\nconst showToast = ({\n  text,\n  mode = 'success',\n  actions,\n  duration = 3000,\n  onPress = () => {},\n  didFinished = () => {},\n}) => {\n  const {\n    langStore: {language},\n  } = useStore();\n  switch (mode) {\n    case 'success':\n      return Toast.show(text, {\n        placement: 'top',\n        duration: duration,\n        style: {\n          backgroundColor: colors.bottomCenterColor,\n\n          width: DWidth * 0.9,\n          borderRadius: 10,\n          marginHorizontal: DWidth * 0.05,\n          marginTop: 40,\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        textStyle: {\n          fontFamily: language === 'fa' ? 'Digi Nofar Bold' : 'Wizard World',\n          fontSize: 20,\n          color: colors.text,\n        },\n        rtl: true,\n      });\n\n    case 'normal':\n      return Toast.show({\n        text: text,\n        textColor: colors.text,\n        style: {\n          backgroundColor: colors.modalBackground,\n          width: DWidth * 0.9,\n          borderRadius: 10,\n          marginHorizontal: DWidth * 0.05,\n          marginTop: 40,\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        duration: duration,\n        fontFamily: language === 'fa' ? 'Digi Nofar Bold' : 'Wizard World',\n        action: actions,\n        rtl: language === 'fa' ? true : false,\n        style: {position: 'absolute', top: 20},\n      });\n\n    case 'warning':\n      return Toast.show(text, {\n        placement: 'top',\n        duration: duration,\n        type: mode,\n        style: {\n          backgroundColor: colors.modalBackground,\n          width: DWidth * 0.9,\n          borderRadius: 10,\n          marginHorizontal: DWidth * 0.05,\n          marginTop: 40,\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        textStyle: {\n          fontFamily: language === 'fa' ? 'Digi Nofar Bold' : 'Wizard World',\n          fontSize: 20,\n          color: colors.text,\n        },\n        rtl: true,\n      });\n\n    case 'danger':\n      return Toast.show(text, {\n        placement: 'top',\n        duration: duration,\n        type: mode,\n        style: {\n          backgroundColor: 'rgb(194, 45, 72)',\n          width: DWidth * 0.9,\n          borderRadius: 10,\n          marginHorizontal: DWidth * 0.05,\n          marginTop: 40,\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        textStyle: {\n          fontFamily: language === 'fa' ? 'Digi Nofar Bold' : 'Wizard World',\n          fontSize: 20,\n          color: colors.text,\n        },\n        rtl: true,\n      });\n  }\n};\n\nexport {showToast};\n","export * from \"./storage\"\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\n\n/**\n * Loads a string from storage.\n *\n * @param key The key to fetch.\n */\nexport async function loadString(key: string): Promise<string | null> {\n  try {\n    return await AsyncStorage.getItem(key)\n  } catch {\n    // not sure why this would fail... even reading the RN docs I'm unclear\n    return null\n  }\n}\n\n/**\n * Saves a string to storage.\n *\n * @param key The key to fetch.\n * @param value The value to store.\n */\nexport async function saveString(key: string, value: string): Promise<boolean> {\n  try {\n    await AsyncStorage.setItem(key, value)\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Loads something from storage and runs it thru JSON.parse.\n *\n * @param key The key to fetch.\n */\nexport async function load(key: string): Promise<unknown | null> {\n  try {\n    const almostThere = await AsyncStorage.getItem(key)\n    return JSON.parse(almostThere as string)\n  } catch {\n    return null\n  }\n}\n\n/**\n * Saves an object to storage.\n *\n * @param key The key to fetch.\n * @param value The value to store.\n */\nexport async function save(key: string, value: unknown): Promise<boolean> {\n  try {\n    await AsyncStorage.setItem(key, JSON.stringify(value))\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Removes something from storage.\n *\n * @param key The key to kill.\n */\nexport async function remove(key: string): Promise<void> {\n  try {\n    await AsyncStorage.removeItem(key)\n  } catch {}\n}\n\n/**\n * Burn it all to the ground.\n */\nexport async function clear(): Promise<void> {\n  try {\n    await AsyncStorage.clear()\n  } catch {}\n}\n","import { useEffect, useCallback, useRef } from \"react\"\n\nexport function useIsMounted() {\n  const isMounted = useRef(false)\n\n  useEffect(() => {\n    isMounted.current = true\n\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return useCallback(() => isMounted.current, [])\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [51], () => (__webpack_require__(21178)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_i18n","require","_react","_interopRequireWildcard","_reactNativeSafeAreaContext","_navigation","storage","_AnimatedSplash","_i18nJs","_interopRequireDefault","_useStore2","_theme","_reactNativeToastNotifications","_reactNativeGestureHandler","_reactNative","_bottomSheet","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","NAVIGATION_PERSISTENCE_KEY","exports","props","_useStore","useStore","langStore","themeStore","roleStore","gameStore","_useState","useState","_useState2","_slicedToArray2","isLoading","setLoading","_useNavigationPersist","useWindowDimensions","width","useNavigationPersistence","initialNavigationState","onNavigationStateChange","useEffect","simulateTasks","then","setTimeout","_regenerator","async","_context","prev","next","awrap","Promise","resolve","load","res","console","log","resOftheme","setTheme","setColorMode","baadazkhalibudanres","save","I18n","locale","changeLang","changeLanguage","resetRoles","resetLastMoves","stop","createElement","GestureHandlerRootView","style","flex","justifyContent","SafeAreaProvider","BottomSheetModalProvider","AnimatedBootSplash","onAnimationEnd","ToastProvider","AppNavigator","_expo","_App","enableExperimentalWebImplementation","registerRootComponent","App","_Text","_mobxReact","_Icon","Header","observer","_ref","title","backPress","language","isDark","useColorScheme","View","flexDirection","height","backgroundColor","colors","background","marginTop","Platform","OS","marginBottom","paddingHorizontal","alignItems","alignSelf","fontSize","spacing","xl","color","text","Pressable","onPress","Icon","name","size","_FontAwesome","_FontAwesome2","modalRef","onDismiss","snapPoints","onChange","children","_ref$index","onBackdropPress","index","_ref$disappearsOnInde","disappearsOnIndex","_ref$appearsOnIndex","appearsOnIndex","vertical","_ref$backgroundStyle","backgroundStyle","renderBackdrop","useCallback","BottomSheetBackdrop","_extends2","opacity","pressBehavior","animatedIndex","value","BottomSheetModal","enablePanDownToClose","ref","backdropComponent","keyboardBehavior","keyboardBlurBehavior","stackBehavior","styles","shadow","handleStyle","handle","BottomSheetView","contentContainer","paddingVertical","borderRadius","current","close","StyleSheet","create","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","display","label","selected","TouchableOpacity","radioButton","radioOuterCircle","radioOuterCircleSelected","radioInnerCircle","radioLabel","marginVertical","borderWidth","borderColor","marginLeft","_expoFont","_excluded","Text","_ref$type","type","numberOfLines","restProps","_objectWithoutProperties2","combinedStyles","ellipsizeMode","fontFamily","font","textAlign","paddingTop","lineHeight","_useFonts","useFonts","persistNavigation","catchErrors","exitRoutes","_config","_config2","ExtraConfig","ProdConfig","Config","BaseConfig","Dimensions","day","store","initStore","common","ok","cancel","back","addBtn","camera","gallery","numbers","one","two","three","four","five","six","seven","eight","nine","ten","bottomNavigator","profile","learning","playGame","players","settings","addPlayerSucceed","shouldWritePlayerName","english","persian","nightMode","active","deactive","learn","game","rolecards","jackTypeDesc","godfatherDesc","matadorDesc","saulDesc","ckaneDesc","leonDesc","doctorDesc","constantineDesc","citizenDesk","jackDesc","nustraTypeDesc","nustraDesc","lastMoveCards","lambsSilence","lambDesc","IdentityDisclosure","identityDesc","beautifulMind","beautifalJackDesc","beautifalNustraDesc","bracelet","braceletDesc","faceoff","faceoffDesc","godfather","matador","saul","ckane","leon","doctor","constantine","citizen","nustradamus","jack","roles","senario","myPlayers","playerName","oldPlayer","newPlayer","lastMove","night","mafia","showRoles","deleted","noBodyRemovedFromGame","doYouWantToCloseGame","doYouWantToCloseApp","closeIt","gameTitle","startGame","chooseRoleForPlayers","addPlayerToThisGame","playersChoosen","anyPlayerExist","role","player","jackLastCards","nustraLastCards","jackLast","nustraLast","jackSenario","nustraSenario","description","jackDescription","gameRules","nustraDescription","nustraRules","first","second","third","fourth","jackRules","fifth","sixth","seventh","jackRoles","nustraRoles","chooseRoleProblem","cardChoosingDescription","areYouAgree","addRoletoThisGame","free","roleAssignment","allPlayersSeenTheirRoles","goToTheGame","insideGame","sitoutGame","silent","speak","disability","playerRemovedFromGame","addPlayerAndRoleAndGiveRole","_en","_fa","_translate","i18n","fallbacks","key","options","variables","translation","translate","replace","match","group","translations","fa","en","lang","I18nManager","forceRTL","keys","forEach","enumerable","_native","_nativeStack","_playersScreen","_RolesScreen","_PlayerListScreen","_RoleUpScreen","_GamePlay","_GameNightPlay","_MainScreen","_AllPlayers","_LearningScreen","_RoleLearning","_GameRules","_useStore3","_navigationUtilities","_BottomNavigator","_HomeScreen","_LastMoves","_reactNativeBootsplash","_navigationWrapper","_showCards","Stack","createNativeStackNavigator","AppStack","useNavigation","Navigator","initialRouteName","screenOptions","headerShown","navigationBarColor","Screen","component","BottomNavigator","MainScreen","LearningScreen","HomeScreen","AllPlayers","PlayersScreen","PlayerListScreen","RolesScreen","RoleLearning","LastMoves","GameRules","RoleUpScreen","ShowCards","GamePlay","GameNightPlay","_useStore2$themeStore","colorScheme","useBackButtonHandler","routeName","includes","Appearance","setColorScheme","NavigationContainer","navigationRef","theme","DarkTheme","DefaultTheme","onReady","BootSplash","hide","_bottomTabs","_mobxReactLite","_SettingScreen","Tab","createBottomTabNavigator","$tabBar","bottom","useSafeAreaInsets","nav","setFontFamily","backBehavior","unmountOnBlur","tabBarHideOnKeyboard","tabBarStyle","tabBarActiveTintColor","bottomActiveTint","tabBarInactiveTintColor","bottomInactiveTint","tabBarLabelStyle","$tabBarLabel","tabBarItemStyle","$tabBarItem","tabBarLabel","tabBarIcon","focused","undefined","headerBackgroundContainerStyle","headerStyle","headerRightContainerStyle","headerTitleContainerStyle","headerTransparent","headerLeft","reset","routes","palette","neutral100","bottomCenterColor","overflow","padding","_ref2","SettingScreen","_ref3","bottomTabBarBackground","borderTopColor","transparent","md","_AppNavigator","isReady","canGoBack","goBack","navigate","apply","arguments","state","length","resetRoot","canExit","canExitRef","useRef","onBackPress","getActiveRouteName","getRootState","BackHandler","addEventListener","removeEventListener","persistenceKey","setInitialNavigationState","isMounted","useIsMounted","initNavState","navigationRestoredDefaultState","_useState3","_useState4","isRestored","setIsRestored","routeNameRef","restoreState","sent","finish","currentRouteName","_useIsMounted","createNavigationContainerRef","route","_Modal","selectImageContainer","addImageBtnCard","isBackHandled","setIsBackHandled","exitRef","backHandler","handleBackPress","remove","_exitRef$current","present","Fragment","Modal","_exitRef$current2","cardBackground","exitApp","_exitRef$current3","_Constants","_toNight$","_toNight$$jobs$","_toNight$2","bottomSheetRef","nightStory","rolePlayers","setPlayers","nightWord","setNightWord","_useState5","_useState6","toNight","setToNight","_useState7","_useState8","sheetIndex","setSheetIndex","useMemo","handleSheetChanges","getDayWord","filter","el","_bottomSheetRef$curre","snapToIndex","_bottomSheetRef$curre2","FlatList","data","keyExtractor","item","id","contentContainerStyle","flatContainer","numColumns","ListEmptyComponent","emptyList","Image","source","renderItem","_item$role","_item$role2","_item$player","playerIcon","image","_bottomSheetRef$curre3","jobs","header","DWidth","_Ionicons","_reactNativeModal","_reactNativeTabView","_InsideGame","_Sitout","isFocused","useIsFocused","playerStore","gameDay","lastMoves","setLastMoves","showLastCard","setShowLastCard","clickedCard","setClickedCard","setDay","gameType","jackLastMove","nustraLastMove","word","randomIndex","arr","_toConsumableArray2","currentIndex","Math","floor","random","handleGoBack","renderScene","SceneMap","inside","InsideGame","outside","Sitout","layout","_React$useState","React","_React$useState2","setIndex","_React$useState3","widht","TabView","navigationState","onIndexChange","renderTabBar","inputRange","map","x","tabBar","position","interpolate","outputRange","inputIndex","tabItem","Animated","lg","initialLayout","isVisible","deviceWidth","deviceHeight","DHeight","onBackButtonPress","modalContainer","modalView","newCards","removeItem","CardList","gameReset","resetPlayers","_useState9","_useState10","isShowLastMove","setIsShowLastMove","_PlayerDetail","_snackbar","gamers","setGamers","showModal","setShowModal","removedPlayers","setRemovedPlayers","detailPlayer","setDetailPlayer","showRole","PlayerDetail","setRemovePlayer","p","removed","push","_el$player","_p$player","updateRolePlayers","updateRemovedPlayers","showToast","translateWithOptions","duration","mode","removeDeadPlayer","marginHorizontal","isSilent","setSilent","hasAbility","setHasAbility","shield","top","right","zIndex","special","resizeMode","textDim","returnPlayer","_Header","_detailPlayer$role","endShowCard","modalBackground","playersWithoutRole","Mafia","side","Free","startDisable","setStartDisable","_rolePlayers$","_rolePlayers$$role","_rolePlayers$2","_rolePlayers$2$player","viewCard","ImageBackground","imageStyle","playersCard","overlayBackground","rightContent","marginRight","roleCounter","paddingRight","viewContainer","pressable","_asyncStorage","_PlayerRow","_reactNativeImagePicker","CameraModule","NativeModules","cameraEventEmitter","NativeEventEmitter","addRef","cameraModal","userPicture","setUserPicture","setPlayerName","abrupt","myPlayer","PlayerRow","filteredArr","AsyncStorage","setItem","JSON","stringify","_addRef$current2","addBtnIcon","_cameraModal$current","Keyboard","dismiss","addPicture","hitSlop","userphoto","uri","BottomSheetTextInput","onChangeText","modalInput","selectionColor","placeholder","placeholderTextColor","_addRef$current","Date","now","avatar","addPlayer","modalBtn","_cameraModal$current3","startCamera","imageCapturedListener","addListener","imageUri","launchCamera","cameraType","mediaType","maxHeight","maxWidth","quality","includeBase64","response","didCancel","assets","base64","addPhotoCard","_cameraModal$current2","PermissionsAndroid","request","PERMISSIONS","READ_EXTERNAL_STORAGE","launchImageLibrary","file","textAlignVertical","inputBackground","gamePlayers","params","filteredArray","some","s","catch","err","addPlayers","newList","selectPlayer","allPlayers","getPlayers","addPlayerRef","cameraRef","isFabVisible","setFabVisible","setPlayerRole","onLongPress","removePlayers","removePlayer","_addPlayerRef$current","_cameraRef$current","_cameraRef$current3","CAMERA","_response$assets$","_cameraRef$current2","getRoles","gameRoles","setGameRoles","setCitizen","setGameType","findIndex","addRoles","fakeRole","selectedIndex","ind","updateRoles","removeRoles","addRole","left","newCitizen","addCitizen","lastIndex","splice","removeCitizen","rolePlayer","setRolePlayer","_item$player2","_item$player3","_rolePlayer$","gamer","allRole","joinedArray","obj","shift","roleup","_JackRolesScreen","_NustraRolesScreen","checkRef","JackRolesScreen","nustra","NustraRolesScreen","_checkRef$current","_checkRef$current2","_checkRef$current3","setNumberOfLine","card","_CardItem","showsVerticalScrollIndicator","CardItem","_JackCards","_NustraCards","JackCards","NustraCards","container","_JackRules","_NustraRules","JackRules","NustraRules","ScrollView","_jackLastMoves","_nustraLastMoves","JackLastMove","NustraLastMove","_Radio","_fictionExpoRestart","_useStore$themeStore","setSelectedMode","selectedLang","setSelectedLang","selectedMode","handlePress","option","_context2","Restart","handleNight","Radio","Value","_BootSplash$useHideAn","useHideAnimation","manifest","logo","statusBarTranslucent","navigationBarTranslucent","animate","timing","useNativeDriver","toValue","start","_class","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_mobx","GameStore","_classCallCheck2","_initializerDefineProperty2","makeAutoObservable","this","_createClass2","cards","items","newRoles","indexRole","indexOf","newPlayers","newArr","_applyDecoratedDescriptor2","observable","configurable","writable","initializer","turn","action","_gameStore","_langStore","_playerStore","_roleStore","_themeStore","PlayerStore","LangStore","num","_this","runInAction","RoleStore","duty","sixthSense","buyCitizen","getAbility","guess","saveOwn","savePeople","nightShot","inquiry","returns","ThemeStore","neutral200","neutral300","neutral400","neutral500","neutral600","neutral700","neutral800","neutral900","primary100","primary200","primary300","primary400","primary500","primary600","secondary100","secondary200","secondary300","secondary400","secondary500","accent100","accent200","accent300","accent400","accent500","angry100","angry500","angry900","happy100","happy500","happy900","nuetral100","nuetral500","nuetral900","overlay40","overlay20","lightColors","border","tint","separator","error","errorBackground","buttonBackground","buttonText","darkColors","_colors","_spacing","commonSpacing","xxxs","xxs","xs","sm","xxl","xxxl","LogBox","ignoreLogs","_ref$mode","actions","_ref$duration","didFinished","Toast","show","placement","textStyle","rtl","textColor","_storage","_context6","clear","t0","almostThere","_context3","getItem","parse","_context5","_context4","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","getter","d","definition","o","g","globalThis","Function","window","prop","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}