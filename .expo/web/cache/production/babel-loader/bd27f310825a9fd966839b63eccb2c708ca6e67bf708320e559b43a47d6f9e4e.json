{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.getActiveRouteName=getActiveRouteName;exports.goBack=goBack;exports.navigate=navigate;exports.navigationRef=void 0;exports.resetRoot=resetRoot;exports.useBackButtonHandler=useBackButtonHandler;exports.useNavigationPersistence=useNavigationPersistence;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=require(\"react\");var _reactNative=require(\"react-native\");var _native=require(\"@react-navigation/native\");var _config=_interopRequireDefault(require(\"../config\"));var _useIsMounted=require(\"../utils/useIsMounted\");var navigationRef=exports.navigationRef=(0,_native.createNavigationContainerRef)();function getActiveRouteName(state){var route=state.routes[state.index];if(!route.state)return route.name;return getActiveRouteName(route.state);}function useBackButtonHandler(canExit){if(_reactNative.Platform.OS==='ios')return;var canExitRef=(0,_react.useRef)(canExit);(0,_react.useEffect)(function(){canExitRef.current=canExit;},[canExit]);(0,_react.useEffect)(function(){var onBackPress=function onBackPress(){if(!navigationRef.isReady()){return false;}var routeName=getActiveRouteName(navigationRef.getRootState());if(canExitRef.current(routeName)){return true;}if(navigationRef.canGoBack()){navigationRef.goBack();return true;}return false;};_reactNative.BackHandler.addEventListener('hardwareBackPress',onBackPress);return function(){return _reactNative.BackHandler.removeEventListener('hardwareBackPress',onBackPress);};},[]);}function navigationRestoredDefaultState(persistNavigation){if(persistNavigation==='always')return false;if(persistNavigation==='dev'&&__DEV__)return false;if(persistNavigation==='prod'&&!__DEV__)return false;return true;}function useNavigationPersistence(storage,persistenceKey){var _useState=(0,_react.useState)(),_useState2=(0,_slicedToArray2.default)(_useState,2),initialNavigationState=_useState2[0],setInitialNavigationState=_useState2[1];var isMounted=(0,_useIsMounted.useIsMounted)();var initNavState=navigationRestoredDefaultState(_config.default.persistNavigation);var _useState3=(0,_react.useState)(initNavState),_useState4=(0,_slicedToArray2.default)(_useState3,2),isRestored=_useState4[0],setIsRestored=_useState4[1];var routeNameRef=(0,_react.useRef)();var onNavigationStateChange=function onNavigationStateChange(state){var previousRouteName=routeNameRef.current;var currentRouteName=getActiveRouteName(state);if(previousRouteName!==currentRouteName){}routeNameRef.current=currentRouteName;storage.save(persistenceKey,state);};var restoreState=function _callee(){var state;return _regenerator.default.async(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regenerator.default.awrap(storage.load(persistenceKey));case 3:state=_context.sent;if(state)setInitialNavigationState(state);case 5:_context.prev=5;if(isMounted())setIsRestored(true);return _context.finish(5);case 8:case\"end\":return _context.stop();}},null,null,[[0,,5,8]],Promise);};(0,_react.useEffect)(function(){if(!isRestored)restoreState();},[isRestored]);return{onNavigationStateChange:onNavigationStateChange,restoreState:restoreState,isRestored:isRestored,initialNavigationState:initialNavigationState};}function navigate(){if(navigationRef.isReady()){navigationRef.navigate.apply(navigationRef,arguments);}}function goBack(){if(navigationRef.isReady()&&navigationRef.canGoBack()){navigationRef.goBack();}}function resetRoot(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{index:0,routes:[]};if(navigationRef.isReady()){navigationRef.resetRoot(state);}}","map":{"version":3,"names":["_react","require","_reactNative","_native","_config","_interopRequireDefault","_useIsMounted","navigationRef","exports","createNavigationContainerRef","getActiveRouteName","state","route","routes","index","name","useBackButtonHandler","canExit","Platform","OS","canExitRef","useRef","useEffect","current","onBackPress","isReady","routeName","getRootState","canGoBack","goBack","BackHandler","addEventListener","removeEventListener","navigationRestoredDefaultState","persistNavigation","__DEV__","useNavigationPersistence","storage","persistenceKey","_useState","useState","_useState2","_slicedToArray2","default","initialNavigationState","setInitialNavigationState","isMounted","useIsMounted","initNavState","Config","_useState3","_useState4","isRestored","setIsRestored","routeNameRef","onNavigationStateChange","previousRouteName","currentRouteName","save","restoreState","_callee","_regenerator","async","_callee$","_context","prev","next","awrap","load","sent","finish","stop","Promise","navigate","apply","arguments","resetRoot","length","undefined"],"sources":["/Users/shayan/workspace/godfather/src/navigation/navigationUtilities.ts"],"sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport {BackHandler, Platform} from 'react-native';\nimport {\n  NavigationState,\n  createNavigationContainerRef,\n} from '@react-navigation/native';\nimport Config from '../config';\nimport type {PersistNavigationConfig} from '../config/config.base';\nimport {useIsMounted} from '../utils/useIsMounted';\nimport type {AppStackParamList, NavigationProps} from './AppNavigator';\n\nimport * as storage from '../utils/storage';\n\ntype Storage = typeof storage;\n\n/**\n * Reference to the root App Navigator.\n *\n * If needed, you can use this to access the navigation object outside of a\n * `NavigationContainer` context. However, it's recommended to use the `useNavigation` hook whenever possible.\n * @see https://reactnavigation.org/docs/navigating-without-navigation-prop/\n *\n * The types on this reference will only let you reference top level navigators. If you have\n * nested navigators, you'll need to use the `useNavigation` with the stack navigator's ParamList type.\n */\nexport const navigationRef = createNavigationContainerRef<AppStackParamList>();\n\n/**\n * Gets the current screen from any navigation state.\n */\nexport function getActiveRouteName(\n  state: ReturnType<typeof navigationRef.getRootState>,\n): keyof AppStackParamList {\n  const route = state.routes[state.index];\n\n  // Found the active route -- return the name\n  if (!route.state) return route.name as keyof AppStackParamList;\n\n  // Recursive call to deal with nested routers\n  return getActiveRouteName(route.state as NavigationState<AppStackParamList>);\n}\n\n/**\n * Hook that handles Android back button presses and forwards those on to\n * the navigation or allows exiting the app.\n */\nexport function useBackButtonHandler(canExit: (routeName: string) => boolean) {\n  // ignore if iOS ... no back button!\n  if (Platform.OS === 'ios') return;\n\n  // The reason we're using a ref here is because we need to be able\n  // to update the canExit function without re-setting up all the listeners\n  const canExitRef = useRef(canExit);\n\n  useEffect(() => {\n    canExitRef.current = canExit;\n  }, [canExit]);\n\n  useEffect(() => {\n    // We'll fire this when the back button is pressed on Android.\n    const onBackPress = () => {\n      if (!navigationRef.isReady()) {\n        return false;\n      }\n\n      // grab the current route\n      const routeName = getActiveRouteName(navigationRef.getRootState());\n\n      // are we allowed to exit?\n      if (canExitRef.current(routeName)) {\n        // exit and let the system know we've handled the event\n        // BackHandler.exitApp();\n        return true;\n      }\n\n      // we can't exit, so let's turn this into a back action\n      if (navigationRef.canGoBack()) {\n        navigationRef.goBack();\n        return true;\n      }\n\n      return false;\n    };\n\n    // Subscribe when we come to life\n    BackHandler.addEventListener('hardwareBackPress', onBackPress);\n\n    // Unsubscribe when we're done\n    return () =>\n      BackHandler.removeEventListener('hardwareBackPress', onBackPress);\n  }, []);\n}\n\n/**\n * This helper function will determine whether we should enable navigation persistence\n * based on a config setting and the __DEV__ environment (dev or prod).\n */\nfunction navigationRestoredDefaultState(\n  persistNavigation: PersistNavigationConfig,\n) {\n  if (persistNavigation === 'always') return false;\n  if (persistNavigation === 'dev' && __DEV__) return false;\n  if (persistNavigation === 'prod' && !__DEV__) return false;\n\n  // all other cases, disable restoration by returning true\n  return true;\n}\n\n/**\n * Custom hook for persisting navigation state.\n */\nexport function useNavigationPersistence(\n  storage: Storage,\n  persistenceKey: string,\n) {\n  const [initialNavigationState, setInitialNavigationState] =\n    useState<NavigationProps['initialState']>();\n  const isMounted = useIsMounted();\n\n  const initNavState = navigationRestoredDefaultState(Config.persistNavigation);\n  const [isRestored, setIsRestored] = useState(initNavState);\n\n  const routeNameRef = useRef<keyof AppStackParamList | undefined>();\n\n  const onNavigationStateChange: NavigationProps['onStateChange'] = state => {\n    const previousRouteName = routeNameRef.current;\n    const currentRouteName = getActiveRouteName(state);\n\n    if (previousRouteName !== currentRouteName) {\n      // track screens.\n      // if (__DEV__) {\n      //   console.tron.log(currentRouteName);\n      // }\n    }\n\n    // Save the current route name for later comparison\n    routeNameRef.current = currentRouteName;\n\n    // Persist state to storage\n    storage.save(persistenceKey, state);\n  };\n\n  const restoreState = async () => {\n    try {\n      const state = (await storage.load(persistenceKey)) as\n        | NavigationProps['initialState']\n        | null;\n      if (state) setInitialNavigationState(state);\n    } finally {\n      if (isMounted()) setIsRestored(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!isRestored) restoreState();\n  }, [isRestored]);\n\n  return {\n    onNavigationStateChange,\n    restoreState,\n    isRestored,\n    initialNavigationState,\n  };\n}\n\n/**\n * use this to navigate without the navigation\n * prop. If you have access to the navigation prop, do not use this.\n * @see https://reactnavigation.org/docs/navigating-without-navigation-prop/\n */\nexport function navigate(...args: Parameters<typeof navigationRef.navigate>) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(...args);\n  }\n}\n\n/**\n * This function is used to go back in a navigation stack, if it's possible to go back.\n * If the navigation stack can't go back, nothing happens.\n * The navigationRef variable is a React ref that references a navigation object.\n * The navigationRef variable is set in the App component.\n */\nexport function goBack() {\n  if (navigationRef.isReady() && navigationRef.canGoBack()) {\n    navigationRef.goBack();\n  }\n}\n\n/**\n * resetRoot will reset the root navigation state to the given params.\n */\nexport function resetRoot(\n  state: Parameters<typeof navigationRef.resetRoot>[0] = {index: 0, routes: []},\n) {\n  if (navigationRef.isReady()) {\n    navigationRef.resetRoot(state);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}