{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=resolveAssetSource;exports.pickScale=void 0;exports.setCustomSourceTransformer=setCustomSourceTransformer;var _AssetRegistry=require(\"react-native/Libraries/Image/AssetRegistry\");var _AssetSourceResolver=_interopRequireDefault(require(\"./AssetSourceResolver\"));var _customSourceTransformer;function setCustomSourceTransformer(transformer){_customSourceTransformer=transformer;}function resolveAssetSource(source){if(typeof source==='object'){return source;}var asset=(0,_AssetRegistry.getAssetByID)(source);if(!asset){return undefined;}var resolver=new _AssetSourceResolver.default('https://expo.dev',null,asset);if(_customSourceTransformer){return _customSourceTransformer(resolver);}return resolver.defaultAsset();}Object.defineProperty(resolveAssetSource,'setCustomSourceTransformer',{get:function get(){return setCustomSourceTransformer;}});var pickScale=exports.pickScale=_AssetSourceResolver.default.pickScale;","map":{"version":3,"names":["_AssetRegistry","require","_AssetSourceResolver","_interopRequireDefault","_customSourceTransformer","setCustomSourceTransformer","transformer","resolveAssetSource","source","asset","getAssetByID","undefined","resolver","AssetSourceResolver","defaultAsset","Object","defineProperty","get","pickScale","exports"],"sources":["/Users/shayan/workspace/godfather/node_modules/expo-asset/src/resolveAssetSource.web.ts"],"sourcesContent":["import { getAssetByID } from 'react-native/Libraries/Image/AssetRegistry';\n\nimport AssetSourceResolver, { ResolvedAssetSource } from './AssetSourceResolver';\n\nlet _customSourceTransformer;\n\nexport function setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nexport default function resolveAssetSource(source: any): ResolvedAssetSource | undefined {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = getAssetByID(source);\n  if (!asset) {\n    return undefined;\n  }\n\n  const resolver = new AssetSourceResolver(\n    // Doesn't matter since this is removed on web\n    'https://expo.dev',\n    null,\n    asset\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nObject.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {\n  get() {\n    return setCustomSourceTransformer;\n  },\n});\n\nexport const { pickScale } = AssetSourceResolver;\n"],"mappings":"sQAAA,IAAAA,cAAA,CAAAC,OAAA,+CAEA,IAAAC,oBAAA,CAAAC,sBAAA,CAAAF,OAAA,2BAEA,GAAI,CAAAG,wBAAwB,CAEtB,QAAU,CAAAC,0BAA0BA,CACxCC,WAAmE,EAEnEF,wBAAwB,CAAGE,WAAW,CACxC,CAMc,QAAU,CAAAC,kBAAkBA,CAACC,MAAW,EACpD,GAAI,MAAO,CAAAA,MAAM,GAAK,QAAQ,CAAE,CAC9B,MAAO,CAAAA,MAAM,C,CAGf,GAAM,CAAAC,KAAK,CAAG,GAAAC,2BAAY,EAACF,MAAM,CAAC,CAClC,GAAI,CAACC,KAAK,CAAE,CACV,MAAO,CAAAE,SAAS,C,CAGlB,GAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,4BAAmB,CAEtC,kBAAkB,CAClB,IAAI,CACJJ,KAAK,CACN,CACD,GAAIL,wBAAwB,CAAE,CAC5B,MAAO,CAAAA,wBAAwB,CAACQ,QAAQ,CAAC,C,CAE3C,MAAO,CAAAA,QAAQ,CAACE,YAAY,EAAE,CAChC,CAEAC,MAAM,CAACC,cAAc,CAACT,kBAAkB,CAAE,4BAA4B,CAAE,CACtEU,GAAG,UAAAA,IAAA,EACD,MAAO,CAAAZ,0BAA0B,CACnC,C,CACD,CAAC,CAEK,GAAQ,CAAAa,SAAS,CAAAC,OAAA,CAAAD,SAAA,CAAKL,4BAAmB,CAAjCK,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}