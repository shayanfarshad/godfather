{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.makeMutable=makeMutable;exports.makeRemote=makeRemote;exports.makeUIMutable=void 0;Object.defineProperty(exports,\"stopMapper\",{enumerable:true,get:function get(){return _mappers.stopMapper;}});var _NativeReanimated=_interopRequireDefault(require(\"./NativeReanimated\"));var _shareables=require(\"./shareables\");var _threads=require(\"./threads\");var _valueSetter=require(\"./valueSetter\");var _mappers=require(\"./mappers\");var _worklet_6223950855890_init_data={code:\"function makeUIMutable(initial,syncDataHolder){const{valueSetter,makeShareableCloneOnUIRecursive}=this._closure;const listeners=new Map();let value=initial;const self={set value(newValue){valueSetter(self,newValue);},get value(){return value;},set _value(newValue){value=newValue;if(syncDataHolder){_updateDataSynchronously(syncDataHolder,makeShareableCloneOnUIRecursive(newValue));}listeners.forEach(function(listener){listener(newValue);});},get _value(){return value;},addListener:function(id,listener){listeners.set(id,listener);},removeListener:function(id){listeners.delete(id);},_animation:null,_isReanimatedSharedValue:true};return self;}\",location:\"node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\"};var makeUIMutable=exports.makeUIMutable=function(){var _f=function _f(initial,syncDataHolder){var listeners=new Map();var value=initial;var self={set value(newValue){(0,_valueSetter.valueSetter)(self,newValue);},get value(){return value;},set _value(newValue){value=newValue;if(syncDataHolder){_updateDataSynchronously(syncDataHolder,(0,_shareables.makeShareableCloneOnUIRecursive)(newValue));}listeners.forEach(function(listener){listener(newValue);});},get _value(){return value;},addListener:function addListener(id,listener){listeners.set(id,listener);},removeListener:function removeListener(id){listeners.delete(id);},_animation:null,_isReanimatedSharedValue:true};return self;};_f._closure={valueSetter:_valueSetter.valueSetter,makeShareableCloneOnUIRecursive:_shareables.makeShareableCloneOnUIRecursive};_f.__initData=_worklet_6223950855890_init_data;_f.__workletHash=6223950855890;return _f;}();var _worklet_14304230717326_init_data={code:\"function anonymous(){const{makeUIMutable,initial,syncDataHolder}=this._closure;return makeUIMutable(initial,syncDataHolder);}\",location:\"node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\"};var _worklet_13878774078109_init_data={code:\"function anonymous(){const{mutable,newValue}=this._closure;mutable.value=newValue;}\",location:\"node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\"};var _worklet_7119061662271_init_data={code:\"function anonymous(){const{mutable,modifier}=this._closure;mutable.value=modifier(mutable.value);}\",location:\"node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\"};function makeMutable(initial){var oneWayReadsOnly=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var value=initial;var syncDataHolder;if(!oneWayReadsOnly&&_NativeReanimated.default.native){syncDataHolder=_NativeReanimated.default.makeSynchronizedDataHolder((0,_shareables.makeShareableCloneRecursive)(value));(0,_shareables.registerShareableMapping)(syncDataHolder);}var handle=(0,_shareables.makeShareableCloneRecursive)({__init:function(){var _f=function _f(){return makeUIMutable(initial,syncDataHolder);};_f._closure={makeUIMutable:makeUIMutable,initial:initial,syncDataHolder:syncDataHolder};_f.__initData=_worklet_14304230717326_init_data;_f.__workletHash=14304230717326;return _f;}()});var listeners=_NativeReanimated.default.native?undefined:new Map();var mutable={set value(newValue){if(_NativeReanimated.default.native){(0,_threads.runOnUI)(function(){var _f=function _f(){mutable.value=newValue;};_f._closure={mutable:mutable,newValue:newValue};_f.__initData=_worklet_13878774078109_init_data;_f.__workletHash=13878774078109;return _f;}())();}else{(0,_valueSetter.valueSetter)(mutable,newValue);}},get value(){if(syncDataHolder){return _NativeReanimated.default.getDataSynchronously(syncDataHolder);}return value;},set _value(newValue){if(_NativeReanimated.default.native){throw new Error('Setting `_value` directly is only possible on the UI runtime');}value=newValue;listeners.forEach(function(listener){listener(newValue);});},get _value(){if(_NativeReanimated.default.native){throw new Error('Reading from `_value` directly is only possible on the UI runtime');}return value;},modify:function modify(modifier){(0,_threads.runOnUI)(function(){var _f=function _f(){mutable.value=modifier(mutable.value);};_f._closure={mutable:mutable,modifier:modifier};_f.__initData=_worklet_7119061662271_init_data;_f.__workletHash=7119061662271;return _f;}())();},addListener:function addListener(id,listener){if(_NativeReanimated.default.native){throw new Error('adding listeners is only possible on the UI runtime');}listeners.set(id,listener);},removeListener:function removeListener(id){if(_NativeReanimated.default.native){throw new Error('removing listeners is only possible on the UI runtime');}listeners.delete(id);},_isReanimatedSharedValue:true};(0,_shareables.registerShareableMapping)(mutable,handle);return mutable;}var _worklet_12489963400323_init_data={code:\"function anonymous(){const{initial}=this._closure;return initial;}\",location:\"node_modules/react-native-reanimated/lib/module/reanimated2/mutables.js\"};function makeRemote(){var initial=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var handle=(0,_shareables.makeShareableCloneRecursive)({__init:function(){var _f=function _f(){return initial;};_f._closure={initial:initial};_f.__initData=_worklet_12489963400323_init_data;_f.__workletHash=12489963400323;return _f;}()});(0,_shareables.registerShareableMapping)(initial,handle);return initial;}","map":{"version":3,"names":["_NativeReanimated","_interopRequireDefault","require","_shareables","_threads","_valueSetter","_mappers","_worklet_6223950855890_init_data","code","location","makeUIMutable","exports","_f","initial","syncDataHolder","listeners","Map","value","self","newValue","valueSetter","_value","_updateDataSynchronously","makeShareableCloneOnUIRecursive","forEach","listener","addListener","id","set","removeListener","delete","_animation","_isReanimatedSharedValue","_closure","__initData","__workletHash","_worklet_14304230717326_init_data","_worklet_13878774078109_init_data","_worklet_7119061662271_init_data","makeMutable","oneWayReadsOnly","arguments","length","undefined","NativeReanimatedModule","native","makeSynchronizedDataHolder","makeShareableCloneRecursive","registerShareableMapping","handle","__init","mutable","runOnUI","getDataSynchronously","Error","modify","modifier","_worklet_12489963400323_init_data","makeRemote"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-reanimated/lib/module/reanimated2/mutables.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { SharedValue, ShareableSyncDataHolderRef } from './commonTypes';\nimport {\n  makeShareableCloneOnUIRecursive,\n  makeShareableCloneRecursive,\n  registerShareableMapping,\n} from './shareables';\nimport { runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\nexport { stopMapper } from './mappers';\n\nexport function makeUIMutable<T>(\n  initial: T,\n  syncDataHolder?: ShareableSyncDataHolderRef<T>\n) {\n  'worklet';\n\n  const listeners = new Map();\n  let value = initial;\n\n  const self = {\n    set value(newValue) {\n      valueSetter(self, newValue);\n    },\n    get value() {\n      return value;\n    },\n    /**\n     * _value prop should only be accessed by the valueSetter implementation\n     * which may make the decision about updating the mutable value depending\n     * on the provided new value. All other places should only attempt to modify\n     * the mutable by assigning to value prop directly.\n     */\n    set _value(newValue: T) {\n      value = newValue;\n      if (syncDataHolder) {\n        _updateDataSynchronously(\n          syncDataHolder,\n          makeShareableCloneOnUIRecursive(newValue)\n        );\n      }\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      return value;\n    },\n    addListener: (id: number, listener: (newValue: T) => void) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n  return self;\n}\n\nexport function makeMutable<T>(\n  initial: T,\n  oneWayReadsOnly = false\n): SharedValue<T> {\n  let value: T = initial;\n  let syncDataHolder: ShareableSyncDataHolderRef<T> | undefined;\n  if (!oneWayReadsOnly && NativeReanimatedModule.native) {\n    // updates are always synchronous when running on web or in Jest environment\n    syncDataHolder = NativeReanimatedModule.makeSynchronizedDataHolder(\n      makeShareableCloneRecursive(value)\n    );\n    registerShareableMapping(syncDataHolder);\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeUIMutable(initial, syncDataHolder);\n    },\n  });\n  // listeners can only work on JS thread on Web and jest environments\n  const listeners = NativeReanimatedModule.native ? undefined : new Map();\n  const mutable = {\n    set value(newValue) {\n      if (NativeReanimatedModule.native) {\n        runOnUI(() => {\n          mutable.value = newValue;\n        })();\n      } else {\n        valueSetter(mutable, newValue);\n      }\n    },\n    get value() {\n      if (syncDataHolder) {\n        return NativeReanimatedModule.getDataSynchronously(syncDataHolder);\n      }\n      return value;\n    },\n    set _value(newValue: T) {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Setting `_value` directly is only possible on the UI runtime'\n        );\n      }\n      value = newValue;\n      listeners!.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    get _value(): T {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'Reading from `_value` directly is only possible on the UI runtime'\n        );\n      }\n      return value;\n    },\n    modify: (modifier: (value: T) => T) => {\n      runOnUI(() => {\n        mutable.value = modifier(mutable.value);\n      })();\n    },\n    addListener: (id: number, listener: (value: T) => void) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error('adding listeners is only possible on the UI runtime');\n      }\n      listeners!.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      if (NativeReanimatedModule.native) {\n        throw new Error(\n          'removing listeners is only possible on the UI runtime'\n        );\n      }\n      listeners!.delete(id);\n    },\n    _isReanimatedSharedValue: true,\n  };\n  registerShareableMapping(mutable, handle);\n  return mutable;\n}\n\nexport function makeRemote<T extends object>(initial: T = {} as T): T {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return initial;\n    },\n  });\n  registerShareableMapping(initial, handle);\n  return initial;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}