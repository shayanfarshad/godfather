{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.TabBarItem=TabBarItem;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _useLatestCallback=_interopRequireDefault(require(\"use-latest-callback\"));var _PlatformPressable=require(\"./PlatformPressable\");var _TabBarItemLabel=require(\"./TabBarItemLabel\");var _excluded=[\"onPress\",\"onLongPress\",\"onLayout\",\"navigationState\",\"route\",\"getAccessibilityLabel\",\"getLabelText\",\"getTestID\",\"getAccessible\"];function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var DEFAULT_ACTIVE_COLOR='rgba(255, 255, 255, 1)';var DEFAULT_INACTIVE_COLOR='rgba(255, 255, 255, 0.7)';var getActiveOpacity=function getActiveOpacity(position,routesLength,tabIndex){if(routesLength>1){var inputRange=Array.from({length:routesLength},function(_,i){return i;});return position.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(i){return i===tabIndex?1:0;})});}else{return 1;}};var getInactiveOpacity=function getInactiveOpacity(position,routesLength,tabIndex){if(routesLength>1){var inputRange=Array.from({length:routesLength},function(_,i){return i;});return position.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(i){return i===tabIndex?0:1;})});}else{return 0;}};var TabBarItemInternal=function TabBarItemInternal(_ref){var accessibilityLabel=_ref.accessibilityLabel,accessible=_ref.accessible,labelText=_ref.label,testID=_ref.testID,onLongPress=_ref.onLongPress,onPress=_ref.onPress,isFocused=_ref.isFocused,position=_ref.position,route=_ref.route,style=_ref.style,inactiveColorCustom=_ref.inactiveColor,activeColorCustom=_ref.activeColor,labelStyle=_ref.labelStyle,onLayout=_ref.onLayout,tabIndex=_ref.index,pressColor=_ref.pressColor,pressOpacity=_ref.pressOpacity,renderBadge=_ref.renderBadge,renderIcon=_ref.renderIcon,defaultTabWidth=_ref.defaultTabWidth,routesLength=_ref.routesLength,renderLabelCustom=_ref.renderLabel,_ref$android_ripple=_ref.android_ripple,android_ripple=_ref$android_ripple===void 0?{borderless:true}:_ref$android_ripple;var labelColorFromStyle=_reactNative.StyleSheet.flatten(labelStyle||{}).color;var activeColor=activeColorCustom!==undefined?activeColorCustom:typeof labelColorFromStyle==='string'?labelColorFromStyle:DEFAULT_ACTIVE_COLOR;var inactiveColor=inactiveColorCustom!==undefined?inactiveColorCustom:typeof labelColorFromStyle==='string'?labelColorFromStyle:DEFAULT_INACTIVE_COLOR;var activeOpacity=getActiveOpacity(position,routesLength,tabIndex);var inactiveOpacity=getInactiveOpacity(position,routesLength,tabIndex);var icon=null;var label=null;if(renderIcon){var activeIcon=renderIcon({route:route,focused:true,color:activeColor});var inactiveIcon=renderIcon({route:route,focused:false,color:inactiveColor});if(inactiveIcon!=null&&activeIcon!=null){icon=React.createElement(_reactNative.View,{style:styles.icon},React.createElement(_reactNative.Animated.View,{style:{opacity:inactiveOpacity}},inactiveIcon),React.createElement(_reactNative.Animated.View,{style:[_reactNative.StyleSheet.absoluteFill,{opacity:activeOpacity}]},activeIcon));}}var renderLabel=renderLabelCustom?renderLabelCustom:function(labelProps){return React.createElement(_TabBarItemLabel.TabBarItemLabel,_extends({},labelProps,{icon:icon,label:labelText,labelStyle:labelStyle}));};if(renderLabel){var activeLabel=renderLabel({route:route,focused:true,color:activeColor});var inactiveLabel=renderLabel({route:route,focused:false,color:inactiveColor});label=React.createElement(_reactNative.View,null,React.createElement(_reactNative.Animated.View,{style:{opacity:inactiveOpacity}},inactiveLabel),React.createElement(_reactNative.Animated.View,{style:[_reactNative.StyleSheet.absoluteFill,{opacity:activeOpacity}]},activeLabel));}var tabStyle=_reactNative.StyleSheet.flatten(style);var isWidthSet=(tabStyle===null||tabStyle===void 0?void 0:tabStyle.width)!==undefined;var tabContainerStyle=isWidthSet?null:{width:defaultTabWidth};var scene={route:route};accessibilityLabel=typeof accessibilityLabel!=='undefined'?accessibilityLabel:labelText;var badge=renderBadge?renderBadge(scene):null;return React.createElement(_PlatformPressable.PlatformPressable,{android_ripple:android_ripple,testID:testID,accessible:accessible,accessibilityLabel:accessibilityLabel,accessibilityRole:\"tab\",accessibilityState:{selected:isFocused},accessibilityStates:isFocused?['selected']:[],pressColor:pressColor,pressOpacity:pressOpacity,delayPressIn:0,onLayout:onLayout,onPress:onPress,onLongPress:onLongPress,style:[styles.pressable,tabContainerStyle]},React.createElement(_reactNative.View,{pointerEvents:\"none\",style:[styles.item,tabStyle]},icon,label,badge!=null?React.createElement(_reactNative.View,{style:styles.badge},badge):null));};var MemoizedTabBarItemInternal=React.memo(TabBarItemInternal);function TabBarItem(props){var onPress=props.onPress,onLongPress=props.onLongPress,onLayout=props.onLayout,navigationState=props.navigationState,route=props.route,getAccessibilityLabel=props.getAccessibilityLabel,getLabelText=props.getLabelText,getTestID=props.getTestID,getAccessible=props.getAccessible,rest=(0,_objectWithoutProperties2.default)(props,_excluded);var onPressLatest=(0,_useLatestCallback.default)(onPress);var onLongPressLatest=(0,_useLatestCallback.default)(onLongPress);var onLayoutLatest=(0,_useLatestCallback.default)(onLayout?onLayout:function(){});var tabIndex=navigationState.routes.indexOf(route);var scene={route:route};var accessibilityLabel=getAccessibilityLabel(scene);var label=getLabelText(scene);var testID=getTestID(scene);var accessible=getAccessible(scene);return React.createElement(MemoizedTabBarItemInternal,_extends({},rest,{onPress:onPressLatest,onLayout:onLayoutLatest,onLongPress:onLongPressLatest,isFocused:navigationState.index===tabIndex,route:route,index:tabIndex,routesLength:navigationState.routes.length,accessibilityLabel:accessibilityLabel,label:label,testID:testID,accessible:accessible}));}var styles=_reactNative.StyleSheet.create({icon:{margin:2},item:{flex:1,alignItems:'center',justifyContent:'center',padding:10,minHeight:48},badge:{position:'absolute',top:0,right:0},pressable:{backgroundColor:'transparent'}});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_useLatestCallback","_interopRequireDefault","_PlatformPressable","_TabBarItemLabel","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","getActiveOpacity","position","routesLength","tabIndex","inputRange","Array","from","length","_","interpolate","outputRange","map","getInactiveOpacity","TabBarItemInternal","_ref","accessibilityLabel","accessible","labelText","label","testID","onLongPress","onPress","isFocused","route","style","inactiveColorCustom","inactiveColor","activeColorCustom","activeColor","labelStyle","onLayout","index","pressColor","pressOpacity","renderBadge","renderIcon","defaultTabWidth","renderLabelCustom","renderLabel","_ref$android_ripple","android_ripple","borderless","labelColorFromStyle","StyleSheet","flatten","color","undefined","activeOpacity","inactiveOpacity","icon","activeIcon","focused","inactiveIcon","createElement","View","styles","Animated","opacity","absoluteFill","labelProps","TabBarItemLabel","_extends","activeLabel","inactiveLabel","tabStyle","isWidthSet","width","tabContainerStyle","scene","badge","PlatformPressable","accessibilityRole","accessibilityState","selected","accessibilityStates","delayPressIn","pressable","pointerEvents","item","MemoizedTabBarItemInternal","memo","TabBarItem","props","navigationState","getAccessibilityLabel","getLabelText","getTestID","getAccessible","rest","_objectWithoutProperties2","onPressLatest","useLatestCallback","onLongPressLatest","onLayoutLatest","routes","indexOf","create","margin","flex","alignItems","justifyContent","padding","minHeight","top","right","backgroundColor"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-tab-view/src/TabBarItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { PlatformPressable } from './PlatformPressable';\nimport { TabBarItemLabel } from './TabBarItemLabel';\nimport type { NavigationState, Route, Scene } from './types';\n\nexport type Props<T extends Route> = {\n  position: Animated.AnimatedInterpolation<number>;\n  route: T;\n  navigationState: NavigationState<T>;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderIcon?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPress: () => void;\n  onLongPress: () => void;\n  defaultTabWidth?: number;\n  labelStyle?: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n  android_ripple?: PressableAndroidRippleConfig;\n};\n\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nconst getActiveOpacity = (\n  position: Animated.AnimatedInterpolation<number>,\n  routesLength: number,\n  tabIndex: number\n) => {\n  if (routesLength > 1) {\n    const inputRange = Array.from({ length: routesLength }, (_, i) => i);\n\n    return position.interpolate({\n      inputRange,\n      outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\n    });\n  } else {\n    return 1;\n  }\n};\n\nconst getInactiveOpacity = (\n  position: Animated.AnimatedInterpolation<number>,\n  routesLength: number,\n  tabIndex: number\n) => {\n  if (routesLength > 1) {\n    const inputRange = Array.from({ length: routesLength }, (_, i) => i);\n\n    return position.interpolate({\n      inputRange,\n      outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\n    });\n  } else {\n    return 0;\n  }\n};\n\ntype TabBarItemInternalProps<T extends Route> = Omit<\n  Props<T>,\n  | 'navigationState'\n  | 'getAccessibilityLabel'\n  | 'getLabelText'\n  | 'getTestID'\n  | 'getAccessible'\n> & {\n  isFocused: boolean;\n  index: number;\n  routesLength: number;\n  accessibilityLabel?: string;\n  label?: string;\n  testID?: string;\n  accessible?: boolean;\n};\n\nconst TabBarItemInternal = <T extends Route>({\n  accessibilityLabel,\n  accessible,\n  label: labelText,\n  testID,\n  onLongPress,\n  onPress,\n  isFocused,\n  position,\n  route,\n  style,\n  inactiveColor: inactiveColorCustom,\n  activeColor: activeColorCustom,\n  labelStyle,\n  onLayout,\n  index: tabIndex,\n  pressColor,\n  pressOpacity,\n  renderBadge,\n  renderIcon,\n  defaultTabWidth,\n  routesLength,\n  renderLabel: renderLabelCustom,\n  android_ripple = { borderless: true },\n}: TabBarItemInternalProps<T>) => {\n  const labelColorFromStyle = StyleSheet.flatten(labelStyle || {}).color;\n\n  const activeColor =\n    activeColorCustom !== undefined\n      ? activeColorCustom\n      : typeof labelColorFromStyle === 'string'\n      ? labelColorFromStyle\n      : DEFAULT_ACTIVE_COLOR;\n  const inactiveColor =\n    inactiveColorCustom !== undefined\n      ? inactiveColorCustom\n      : typeof labelColorFromStyle === 'string'\n      ? labelColorFromStyle\n      : DEFAULT_INACTIVE_COLOR;\n\n  const activeOpacity = getActiveOpacity(position, routesLength, tabIndex);\n  const inactiveOpacity = getInactiveOpacity(position, routesLength, tabIndex);\n\n  let icon: React.ReactNode | null = null;\n  let label: React.ReactNode | null = null;\n\n  if (renderIcon) {\n    const activeIcon = renderIcon({\n      route,\n      focused: true,\n      color: activeColor,\n    });\n    const inactiveIcon = renderIcon({\n      route,\n      focused: false,\n      color: inactiveColor,\n    });\n\n    if (inactiveIcon != null && activeIcon != null) {\n      icon = (\n        <View style={styles.icon}>\n          <Animated.View style={{ opacity: inactiveOpacity }}>\n            {inactiveIcon}\n          </Animated.View>\n          <Animated.View\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n          >\n            {activeIcon}\n          </Animated.View>\n        </View>\n      );\n    }\n  }\n\n  const renderLabel = renderLabelCustom\n    ? renderLabelCustom\n    : (labelProps: { color: string }) => (\n        <TabBarItemLabel\n          {...labelProps}\n          icon={icon}\n          label={labelText}\n          labelStyle={labelStyle}\n        />\n      );\n\n  if (renderLabel) {\n    const activeLabel = renderLabel({\n      route,\n      focused: true,\n      color: activeColor,\n    });\n    const inactiveLabel = renderLabel({\n      route,\n      focused: false,\n      color: inactiveColor,\n    });\n\n    label = (\n      <View>\n        <Animated.View style={{ opacity: inactiveOpacity }}>\n          {inactiveLabel}\n        </Animated.View>\n        <Animated.View\n          style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n        >\n          {activeLabel}\n        </Animated.View>\n      </View>\n    );\n  }\n\n  const tabStyle = StyleSheet.flatten(style);\n  const isWidthSet = tabStyle?.width !== undefined;\n\n  const tabContainerStyle: ViewStyle | null = isWidthSet\n    ? null\n    : { width: defaultTabWidth };\n\n  const scene = { route };\n\n  accessibilityLabel =\n    typeof accessibilityLabel !== 'undefined' ? accessibilityLabel : labelText;\n\n  const badge = renderBadge ? renderBadge(scene) : null;\n\n  return (\n    <PlatformPressable\n      android_ripple={android_ripple}\n      testID={testID}\n      accessible={accessible}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"tab\"\n      accessibilityState={{ selected: isFocused }}\n      // @ts-ignore: this is to support older React Native versions\n      accessibilityStates={isFocused ? ['selected'] : []}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      delayPressIn={0}\n      onLayout={onLayout}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={[styles.pressable, tabContainerStyle]}\n    >\n      <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\n        {icon}\n        {label}\n        {badge != null ? <View style={styles.badge}>{badge}</View> : null}\n      </View>\n    </PlatformPressable>\n  );\n};\n\nconst MemoizedTabBarItemInternal = React.memo(\n  TabBarItemInternal\n) as typeof TabBarItemInternal;\n\nexport function TabBarItem<T extends Route>(props: Props<T>) {\n  const {\n    onPress,\n    onLongPress,\n    onLayout,\n    navigationState,\n    route,\n    getAccessibilityLabel,\n    getLabelText,\n    getTestID,\n    getAccessible,\n    ...rest\n  } = props;\n  const onPressLatest = useLatestCallback(onPress);\n  const onLongPressLatest = useLatestCallback(onLongPress);\n  const onLayoutLatest = useLatestCallback(onLayout ? onLayout : () => {});\n\n  const tabIndex = navigationState.routes.indexOf(route);\n\n  const scene = { route };\n\n  const accessibilityLabel = getAccessibilityLabel(scene);\n  const label = getLabelText(scene);\n  const testID = getTestID(scene);\n  const accessible = getAccessible(scene);\n\n  return (\n    <MemoizedTabBarItemInternal\n      {...rest}\n      onPress={onPressLatest}\n      onLayout={onLayoutLatest}\n      onLongPress={onLongPressLatest}\n      isFocused={navigationState.index === tabIndex}\n      route={route}\n      index={tabIndex}\n      routesLength={navigationState.routes.length}\n      accessibilityLabel={accessibilityLabel}\n      label={label}\n      testID={testID}\n      accessible={accessible}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    margin: 2,\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    minHeight: 48,\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  pressable: {\n    // The label is not pressable on Windows\n    // Adding backgroundColor: 'transparent' seems to fix it\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}