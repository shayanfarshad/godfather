{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useNavigationCache;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends3=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _routers=require(\"@react-navigation/routers\");var React=_interopRequireWildcard(require(\"react\"));var _NavigationBuilderContext=_interopRequireDefault(require(\"./NavigationBuilderContext\"));var _excluded=[\"emit\"];function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function useNavigationCache(_ref){var state=_ref.state,getState=_ref.getState,navigation=_ref.navigation,_setOptions=_ref.setOptions,router=_ref.router,emitter=_ref.emitter;var _React$useContext=React.useContext(_NavigationBuilderContext.default),stackRef=_React$useContext.stackRef;var cache=React.useMemo(function(){return{current:{}};},[getState,navigation,_setOptions,router,emitter]);var actions=(0,_extends3.default)({},router.actionCreators,_routers.CommonActions);cache.current=state.routes.reduce(function(acc,route){var previous=cache.current[route.key];if(previous){acc[route.key]=previous;}else{var emit=navigation.emit,rest=(0,_objectWithoutProperties2.default)(navigation,_excluded);var _dispatch=function dispatch(thunk){var action=typeof thunk==='function'?thunk(getState()):thunk;if(action!=null){navigation.dispatch((0,_extends3.default)({source:route.key},action));}};var withStack=function withStack(callback){var isStackSet=false;try{if(process.env.NODE_ENV!=='production'&&stackRef&&!stackRef.current){stackRef.current=new Error().stack;isStackSet=true;}callback();}finally{if(isStackSet&&stackRef){stackRef.current=undefined;}}};var helpers=Object.keys(actions).reduce(function(acc,name){acc[name]=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return withStack(function(){return _dispatch(actions[name].apply(actions,args));});};return acc;},{});acc[route.key]=(0,_extends3.default)({},rest,helpers,emitter.create(route.key),{dispatch:function dispatch(thunk){return withStack(function(){return _dispatch(thunk);});},getParent:function getParent(id){if(id!==undefined&&id===rest.getId()){return acc[route.key];}return rest.getParent(id);},setOptions:function setOptions(options){return _setOptions(function(o){return(0,_extends3.default)({},o,(0,_defineProperty2.default)({},route.key,(0,_extends3.default)({},o[route.key],options)));});},isFocused:function isFocused(){var state=getState();if(state.routes[state.index].key!==route.key){return false;}return navigation?navigation.isFocused():true;}});}return acc;},{});return cache.current;}","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_NavigationBuilderContext","_interopRequireDefault","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","useNavigationCache","_ref","state","getState","navigation","setOptions","router","emitter","_React$useContext","useContext","NavigationBuilderContext","stackRef","cache","useMemo","current","actions","_extends3","actionCreators","CommonActions","routes","reduce","acc","route","previous","key","emit","rest","_objectWithoutProperties2","dispatch","thunk","action","source","withStack","callback","isStackSet","process","env","NODE_ENV","Error","stack","undefined","helpers","keys","name","_len","arguments","length","args","Array","_key","apply","create","getParent","id","getId","options","o","_defineProperty2","isFocused","index"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/core/src/useNavigationCache.tsx"],"sourcesContent":["import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport type { NavigationHelpers, NavigationProp } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<\n  State extends NavigationState,\n  EventMap extends Record<string, any>\n> = {\n  state: State;\n  getState: () => State;\n  navigation: NavigationHelpers<ParamListBase> &\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\n  setOptions: (\n    cb: (options: Record<string, object>) => Record<string, object>\n  ) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\ntype NavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n> = Record<\n  string,\n  NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap\n  >\n>;\n\n/**\n * Hook to cache navigation objects for each screen in the navigator.\n * It's important to cache them to make sure navigation objects don't change between renders.\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n */\nexport default function useNavigationCache<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter,\n}: Options<State, EventMap>) {\n  const { stackRef } = React.useContext(NavigationBuilderContext);\n\n  // Cache object which holds navigation objects for each screen\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n  // In reality, these deps will rarely change, if ever\n  const cache = React.useMemo(\n    () => ({ current: {} as NavigationCache<State, ScreenOptions, EventMap> }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, navigation, setOptions, router, emitter]\n  );\n\n  const actions = {\n    ...router.actionCreators,\n    ...CommonActions,\n  };\n\n  cache.current = state.routes.reduce<\n    NavigationCache<State, ScreenOptions, EventMap>\n  >((acc, route) => {\n    const previous = cache.current[route.key];\n\n    type Thunk =\n      | NavigationAction\n      | ((state: State) => NavigationAction | null | undefined);\n\n    if (previous) {\n      // If a cached navigation object already exists, reuse it\n      acc[route.key] = previous;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { emit, ...rest } = navigation;\n\n      const dispatch = (thunk: Thunk) => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n\n        if (action != null) {\n          navigation.dispatch({ source: route.key, ...action });\n        }\n      };\n\n      const withStack = (callback: () => void) => {\n        let isStackSet = false;\n\n        try {\n          if (\n            process.env.NODE_ENV !== 'production' &&\n            stackRef &&\n            !stackRef.current\n          ) {\n            // Capture the stack trace for devtools\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n\n      const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n        (acc, name) => {\n          acc[name] = (...args: any) =>\n            withStack(() =>\n              // @ts-expect-error: name is a valid key, but TypeScript is dumb\n              dispatch(actions[name](...args))\n            );\n\n          return acc;\n        },\n        {}\n      );\n\n      acc[route.key] = {\n        ...rest,\n        ...helpers,\n        // FIXME: too much work to fix the types for now\n        ...(emitter.create(route.key) as any),\n        dispatch: (thunk: Thunk) => withStack(() => dispatch(thunk)),\n        getParent: (id?: string) => {\n          if (id !== undefined && id === rest.getId()) {\n            // If the passed id is the same as the current navigation id,\n            // we return the cached navigation object for the relevant route\n            return acc[route.key];\n          }\n\n          return rest.getParent(id);\n        },\n        setOptions: (options: object) =>\n          setOptions((o) => ({\n            ...o,\n            [route.key]: { ...o[route.key], ...options },\n          })),\n        isFocused: () => {\n          const state = getState();\n\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n\n          // If the current screen is focused, we also need to check if parent navigator is focused\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\n          return navigation ? navigation.isFocused() : true;\n        },\n      };\n    }\n\n    return acc;\n  }, {});\n\n  return cache.current;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}