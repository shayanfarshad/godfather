{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _interfaces=require(\"../interfaces\");var _EventManager2=_interopRequireDefault(require(\"./EventManager\"));var _utils=require(\"../utils\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}var TouchEventManager=exports.default=function(_EventManager){(0,_inherits2.default)(TouchEventManager,_EventManager);var _super=_createSuper(TouchEventManager);function TouchEventManager(){(0,_classCallCheck2.default)(this,TouchEventManager);return _super.apply(this,arguments);}(0,_createClass2.default)(TouchEventManager,[{key:\"setListeners\",value:function setListeners(){var _this=this;this.view.addEventListener('touchstart',function(event){for(var i=0;i<event.changedTouches.length;++i){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.DOWN,i,_interfaces.TouchEventType.DOWN);if(!(0,_utils.isPointerInBounds)(_this.view,{x:adaptedEvent.x,y:adaptedEvent.y})||event.changedTouches[i].touchType==='stylus'){continue;}_this.markAsInBounds(adaptedEvent.pointerId);if(++_this.activePointersCounter>1){adaptedEvent.eventType=_interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;_this.onPointerAdd(adaptedEvent);}else{_this.onPointerDown(adaptedEvent);}}});this.view.addEventListener('touchmove',function(event){for(var i=0;i<event.changedTouches.length;++i){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.MOVE,i,_interfaces.TouchEventType.MOVE);if(event.changedTouches[i].touchType==='stylus'){continue;}var inBounds=(0,_utils.isPointerInBounds)(_this.view,{x:adaptedEvent.x,y:adaptedEvent.y});var pointerIndex=_this.pointersInBounds.indexOf(adaptedEvent.pointerId);if(inBounds){if(pointerIndex<0){adaptedEvent.eventType=_interfaces.EventTypes.ENTER;_this.onPointerEnter(adaptedEvent);_this.markAsInBounds(adaptedEvent.pointerId);}else{_this.onPointerMove(adaptedEvent);}}else{if(pointerIndex>=0){adaptedEvent.eventType=_interfaces.EventTypes.LEAVE;_this.onPointerLeave(adaptedEvent);_this.markAsOutOfBounds(adaptedEvent.pointerId);}else{_this.onPointerOutOfBounds(adaptedEvent);}}}});this.view.addEventListener('touchend',function(event){for(var i=0;i<event.changedTouches.length;++i){if(_this.activePointersCounter===0){break;}if(event.changedTouches[i].touchType==='stylus'){continue;}var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.UP,i,_interfaces.TouchEventType.UP);_this.markAsOutOfBounds(adaptedEvent.pointerId);if(--_this.activePointersCounter>0){adaptedEvent.eventType=_interfaces.EventTypes.ADDITIONAL_POINTER_UP;_this.onPointerRemove(adaptedEvent);}else{_this.onPointerUp(adaptedEvent);}}});this.view.addEventListener('touchcancel',function(event){for(var i=0;i<event.changedTouches.length;++i){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.CANCEL,i,_interfaces.TouchEventType.CANCELLED);if(event.changedTouches[i].touchType==='stylus'){continue;}_this.onPointerCancel(adaptedEvent);_this.markAsOutOfBounds(adaptedEvent.pointerId);_this.activePointersCounter=0;}});}},{key:\"mapEvent\",value:function mapEvent(event,eventType,index,touchEventType){var rect=this.view.getBoundingClientRect();var clientX=event.changedTouches[index].clientX;var clientY=event.changedTouches[index].clientY;return{x:clientX,y:clientY,offsetX:clientX-rect.left,offsetY:clientY-rect.top,pointerId:event.changedTouches[index].identifier,eventType:eventType,pointerType:_interfaces.PointerType.TOUCH,buttons:_interfaces.MouseButtons.NONE,time:event.timeStamp,allTouches:event.touches,changedTouches:event.changedTouches,touchEventType:touchEventType};}}]);return TouchEventManager;}(_EventManager2.default);","map":{"version":3,"names":["_interfaces","require","_EventManager2","_interopRequireDefault","_utils","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","t","Boolean","prototype","valueOf","call","TouchEventManager","exports","_EventManager","_inherits2","_super","_classCallCheck2","_createClass2","key","value","setListeners","_this","view","addEventListener","event","i","changedTouches","length","adaptedEvent","mapEvent","EventTypes","DOWN","TouchEventType","isPointerInBounds","x","y","touchType","markAsInBounds","pointerId","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","MOVE","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","markAsOutOfBounds","onPointerOutOfBounds","UP","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","CANCEL","CANCELLED","onPointerCancel","index","touchEventType","rect","getBoundingClientRect","clientX","clientY","offsetX","left","offsetY","top","identifier","pointerType","PointerType","TOUCH","buttons","MouseButtons","NONE","time","timeStamp","allTouches","touches","EventManager"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/web/tools/TouchEventManager.ts"],"sourcesContent":["import {\n  AdaptedEvent,\n  EventTypes,\n  MouseButtons,\n  PointerType,\n  TouchEventType,\n} from '../interfaces';\nimport EventManager from './EventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default class TouchEventManager extends EventManager<HTMLElement> {\n  public setListeners(): void {\n    this.view.addEventListener('touchstart', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.DOWN,\n          i,\n          TouchEventType.DOWN\n        );\n\n        // Here we skip stylus, because in case of anything different than touch we want to handle it by using PointerEvents\n        // If we leave stylus to send touch events, handlers will receive every action twice\n        if (\n          !isPointerInBounds(this.view, {\n            x: adaptedEvent.x,\n            y: adaptedEvent.y,\n          }) ||\n          //@ts-ignore touchType field does exist\n          event.changedTouches[i].touchType === 'stylus'\n        ) {\n          continue;\n        }\n\n        this.markAsInBounds(adaptedEvent.pointerId);\n\n        if (++this.activePointersCounter > 1) {\n          adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n          this.onPointerAdd(adaptedEvent);\n        } else {\n          this.onPointerDown(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('touchmove', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.MOVE,\n          i,\n          TouchEventType.MOVE\n        );\n        //@ts-ignore touchType field does exist\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n\n        const inBounds: boolean = isPointerInBounds(this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y,\n        });\n\n        const pointerIndex: number = this.pointersInBounds.indexOf(\n          adaptedEvent.pointerId\n        );\n\n        if (inBounds) {\n          if (pointerIndex < 0) {\n            adaptedEvent.eventType = EventTypes.ENTER;\n            this.onPointerEnter(adaptedEvent);\n            this.markAsInBounds(adaptedEvent.pointerId);\n          } else {\n            this.onPointerMove(adaptedEvent);\n          }\n        } else {\n          if (pointerIndex >= 0) {\n            adaptedEvent.eventType = EventTypes.LEAVE;\n            this.onPointerLeave(adaptedEvent);\n            this.markAsOutOfBounds(adaptedEvent.pointerId);\n          } else {\n            this.onPointerOutOfBounds(adaptedEvent);\n          }\n        }\n      }\n    });\n\n    this.view.addEventListener('touchend', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        // When we call reset on gesture handlers, it also resets their event managers\n        // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n        // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n        // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n        if (this.activePointersCounter === 0) {\n          break;\n        }\n\n        //@ts-ignore touchType field does exist\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.UP,\n          i,\n          TouchEventType.UP\n        );\n\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n\n        if (--this.activePointersCounter > 0) {\n          adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n          this.onPointerRemove(adaptedEvent);\n        } else {\n          this.onPointerUp(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('touchcancel', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.CANCEL,\n          i,\n          TouchEventType.CANCELLED\n        );\n\n        //@ts-ignore touchType field does exist\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n\n        this.onPointerCancel(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n        this.activePointersCounter = 0;\n      }\n    });\n  }\n\n  protected mapEvent(\n    event: TouchEvent,\n    eventType: EventTypes,\n    index: number,\n    touchEventType: TouchEventType\n  ): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const clientX = event.changedTouches[index].clientX;\n    const clientY = event.changedTouches[index].clientY;\n\n    return {\n      x: clientX,\n      y: clientY,\n      offsetX: clientX - rect.left,\n      offsetY: clientY - rect.top,\n      pointerId: event.changedTouches[index].identifier,\n      eventType: eventType,\n      pointerType: PointerType.TOUCH,\n      buttons: MouseButtons.NONE,\n      time: event.timeStamp,\n      allTouches: event.touches,\n      changedTouches: event.changedTouches,\n      touchEventType: touchEventType,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}