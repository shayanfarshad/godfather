{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.flingHandlerName=exports.flingGestureHandlerProps=exports.FlingGestureHandler=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _createHandler=_interopRequireDefault(require(\"./createHandler\"));var _gestureHandlerCommon=require(\"./gestureHandlerCommon\");var flingGestureHandlerProps=exports.flingGestureHandlerProps=['numberOfPointers','direction'];var flingHandlerName=exports.flingHandlerName='FlingGestureHandler';var FlingGestureHandler=exports.FlingGestureHandler=(0,_createHandler.default)({name:flingHandlerName,allowedProps:[].concat((0,_toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps),flingGestureHandlerProps),config:{}});","map":{"version":3,"names":["_createHandler","_interopRequireDefault","require","_gestureHandlerCommon","flingGestureHandlerProps","exports","flingHandlerName","FlingGestureHandler","createHandler","name","allowedProps","concat","_toConsumableArray2","default","baseGestureHandlerProps","config"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/handlers/FlingGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const flingGestureHandlerProps = [\n  'numberOfPointers',\n  'direction',\n] as const;\n\nexport type FlingGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\nexport interface FlingGestureConfig {\n  /**\n   * Expressed allowed direction of movement. It's possible to pass one or many\n   * directions in one parameter:\n   *\n   * ```js\n   * direction={Directions.RIGHT | Directions.LEFT}\n   * ```\n   *\n   * or\n   *\n   * ```js\n   * direction={Directions.DOWN}\n   * ```\n   */\n  direction?: number;\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   */\n  numberOfPointers?: number;\n}\n\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload>,\n    FlingGestureConfig {}\n\nexport const flingHandlerName = 'FlingGestureHandler';\n\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: flingHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...flingGestureHandlerProps,\n  ] as const,\n  config: {},\n});\n"],"mappings":"6UAAA,IAAAA,cAAA,CAAAC,sBAAA,CAAAC,OAAA,qBACA,IAAAC,qBAAA,CAAAD,OAAA,2BAKO,GAAM,CAAAE,wBAAwB,CAAAC,OAAA,CAAAD,wBAAA,CAAG,CACtC,kBADsC,CAEtC,WAFsC,CAAjC,CAsCA,GAAM,CAAAE,gBAAgB,CAAAD,OAAA,CAAAC,gBAAA,CAAG,qBAAzB,CAIA,GAAM,CAAAC,mBAAmB,CAAAF,OAAA,CAAAE,mBAAA,CAAG,GAAAC,sBAAa,EAG9C,CACAC,IAAI,CAAEH,gBADN,CAEAI,YAAY,IAAAC,MAAA,IAAAC,mBAAA,CAAAC,OAAA,EACPC,6CADS,EAETV,wBAFS,CAFd,CAMAW,MAAM,CAAE,EANR,CAH8C,CAAzC"},"metadata":{},"sourceType":"script","externalDependencies":[]}