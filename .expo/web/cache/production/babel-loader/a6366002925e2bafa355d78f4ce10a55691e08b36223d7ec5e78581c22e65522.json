{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.ReactNativeModal=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var PropTypes=_interopRequireWildcard(require(\"prop-types\"));var animatable=_interopRequireWildcard(require(\"react-native-animatable\"));var _utils=require(\"./utils\");var _modal=_interopRequireDefault(require(\"./modal.style\"));var _excluded=[\"animationIn\",\"animationInTiming\",\"animationOut\",\"animationOutTiming\",\"avoidKeyboard\",\"coverScreen\",\"hasBackdrop\",\"backdropColor\",\"backdropOpacity\",\"backdropTransitionInTiming\",\"backdropTransitionOutTiming\",\"customBackdrop\",\"children\",\"isVisible\",\"onModalShow\",\"onBackButtonPress\",\"useNativeDriver\",\"propagateSwipe\",\"style\"],_excluded2=[\"testID\"];function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}(0,_utils.initializeAnimations)();var defaultProps={animationIn:'slideInUp',animationInTiming:300,animationOut:'slideOutDown',animationOutTiming:300,avoidKeyboard:false,coverScreen:true,hasBackdrop:true,backdropColor:'black',backdropOpacity:0.7,backdropTransitionInTiming:300,backdropTransitionOutTiming:300,customBackdrop:null,useNativeDriver:false,deviceHeight:null,deviceWidth:null,hideModalContentWhileAnimating:false,propagateSwipe:false,isVisible:false,panResponderThreshold:4,swipeThreshold:100,onModalShow:function onModalShow(){return null;},onModalWillShow:function onModalWillShow(){return null;},onModalHide:function onModalHide(){return null;},onModalWillHide:function onModalWillHide(){return null;},onBackdropPress:function onBackdropPress(){return null;},onBackButtonPress:function onBackButtonPress(){return null;},scrollTo:null,scrollOffset:0,scrollOffsetMax:0,scrollHorizontal:false,statusBarTranslucent:false,supportedOrientations:['portrait','landscape']};var extractAnimationFromProps=function extractAnimationFromProps(props){return{animationIn:props.animationIn,animationOut:props.animationOut};};var ReactNativeModal=exports.ReactNativeModal=function(_React$Component){(0,_inherits2.default)(ReactNativeModal,_React$Component);var _super=_createSuper(ReactNativeModal);function ReactNativeModal(props){var _this;(0,_classCallCheck2.default)(this,ReactNativeModal);_this=_super.call(this,props);_this.state={showContent:true,isVisible:false,deviceWidth:_reactNative.Dimensions.get('window').width,deviceHeight:_reactNative.Dimensions.get('window').height,isSwipeable:!!_this.props.swipeDirection,pan:null};_this.isTransitioning=false;_this.inSwipeClosingState=false;_this.currentSwipingDirection=null;_this.panResponder=null;_this.didUpdateDimensionsEmitter=null;_this.interactionHandle=null;_this.getDeviceHeight=function(){return _this.props.deviceHeight||_this.state.deviceHeight;};_this.getDeviceWidth=function(){return _this.props.deviceWidth||_this.state.deviceWidth;};_this.onBackButtonPress=function(){if(_this.props.onBackButtonPress&&_this.props.isVisible){_this.props.onBackButtonPress();return true;}return false;};_this.shouldPropagateSwipe=function(evt,gestureState){return typeof _this.props.propagateSwipe==='function'?_this.props.propagateSwipe(evt,gestureState):_this.props.propagateSwipe;};_this.buildPanResponder=function(){var animEvt=null;_this.panResponder=_reactNative.PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){if(!_this.shouldPropagateSwipe(evt,gestureState)){var shouldSetPanResponder=Math.abs(gestureState.dx)>=_this.props.panResponderThreshold||Math.abs(gestureState.dy)>=_this.props.panResponderThreshold;if(shouldSetPanResponder&&_this.props.onSwipeStart){_this.props.onSwipeStart(gestureState);}_this.currentSwipingDirection=_this.getSwipingDirection(gestureState);animEvt=_this.createAnimationEventForSwipe();return shouldSetPanResponder;}return false;},onStartShouldSetPanResponder:function onStartShouldSetPanResponder(e,gestureState){var hasScrollableView=e._dispatchInstances&&e._dispatchInstances.some(function(instance){return /scrollview|flatlist/i.test(instance.type);});if(hasScrollableView&&_this.shouldPropagateSwipe(e,gestureState)&&_this.props.scrollTo&&_this.props.scrollOffset>0){return false;}if(_this.props.onSwipeStart){_this.props.onSwipeStart(gestureState);}_this.currentSwipingDirection=null;return true;},onPanResponderMove:function onPanResponderMove(evt,gestureState){if(!_this.currentSwipingDirection){if(gestureState.dx===0&&gestureState.dy===0){return;}_this.currentSwipingDirection=_this.getSwipingDirection(gestureState);animEvt=_this.createAnimationEventForSwipe();}if(_this.isSwipeDirectionAllowed(gestureState)){var newOpacityFactor=1-_this.calcDistancePercentage(gestureState);_this.backdropRef&&_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity*newOpacityFactor});animEvt(evt,gestureState);if(_this.props.onSwipeMove){_this.props.onSwipeMove(newOpacityFactor,gestureState);}}else{if(_this.props.scrollTo){if(_this.props.scrollHorizontal){var offsetX=-gestureState.dx;if(offsetX>_this.props.scrollOffsetMax){offsetX-=(offsetX-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({x:offsetX,animated:false});}else{var offsetY=-gestureState.dy;if(offsetY>_this.props.scrollOffsetMax){offsetY-=(offsetY-_this.props.scrollOffsetMax)/2;}_this.props.scrollTo({y:offsetY,animated:false});}}}},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){var accDistance=_this.getAccDistancePerDirection(gestureState);if(accDistance>_this.props.swipeThreshold&&_this.isSwipeDirectionAllowed(gestureState)){if(_this.props.onSwipeComplete){_this.inSwipeClosingState=true;_this.props.onSwipeComplete({swipingDirection:_this.getSwipingDirection(gestureState)},gestureState);return;}if(_this.props.onSwipe){_this.inSwipeClosingState=true;_this.props.onSwipe();return;}}if(_this.props.onSwipeCancel){_this.props.onSwipeCancel(gestureState);}if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity});}_reactNative.Animated.spring(_this.state.pan,{toValue:{x:0,y:0},bounciness:0,useNativeDriver:false}).start();if(_this.props.scrollTo){if(_this.props.scrollOffset>_this.props.scrollOffsetMax){_this.props.scrollTo({y:_this.props.scrollOffsetMax,animated:true});}}}});};_this.getAccDistancePerDirection=function(gestureState){switch(_this.currentSwipingDirection){case'up':return-gestureState.dy;case'down':return gestureState.dy;case'right':return gestureState.dx;case'left':return-gestureState.dx;default:return 0;}};_this.getSwipingDirection=function(gestureState){if(Math.abs(gestureState.dx)>Math.abs(gestureState.dy)){return gestureState.dx>0?'right':'left';}return gestureState.dy>0?'down':'up';};_this.calcDistancePercentage=function(gestureState){switch(_this.currentSwipingDirection){case'down':return(gestureState.moveY-gestureState.y0)/((_this.props.deviceHeight||_this.state.deviceHeight)-gestureState.y0);case'up':return(0,_utils.reversePercentage)(gestureState.moveY/gestureState.y0);case'left':return(0,_utils.reversePercentage)(gestureState.moveX/gestureState.x0);case'right':return(gestureState.moveX-gestureState.x0)/((_this.props.deviceWidth||_this.state.deviceWidth)-gestureState.x0);default:return 0;}};_this.createAnimationEventForSwipe=function(){if(_this.currentSwipingDirection==='right'||_this.currentSwipingDirection==='left'){return _reactNative.Animated.event([null,{dx:_this.state.pan.x}],{useNativeDriver:false});}else{return _reactNative.Animated.event([null,{dy:_this.state.pan.y}],{useNativeDriver:false});}};_this.isDirectionIncluded=function(direction){return Array.isArray(_this.props.swipeDirection)?_this.props.swipeDirection.includes(direction):_this.props.swipeDirection===direction;};_this.isSwipeDirectionAllowed=function(_ref){var dy=_ref.dy,dx=_ref.dx;var draggedDown=dy>0;var draggedUp=dy<0;var draggedLeft=dx<0;var draggedRight=dx>0;if(_this.currentSwipingDirection==='up'&&_this.isDirectionIncluded('up')&&draggedUp){return true;}else if(_this.currentSwipingDirection==='down'&&_this.isDirectionIncluded('down')&&draggedDown){return true;}else if(_this.currentSwipingDirection==='right'&&_this.isDirectionIncluded('right')&&draggedRight){return true;}else if(_this.currentSwipingDirection==='left'&&_this.isDirectionIncluded('left')&&draggedLeft){return true;}return false;};_this.handleDimensionsUpdate=function(){if(!_this.props.deviceHeight&&!_this.props.deviceWidth){var deviceWidth=_reactNative.Dimensions.get('window').width;var deviceHeight=_reactNative.Dimensions.get('window').height;if(deviceWidth!==_this.state.deviceWidth||deviceHeight!==_this.state.deviceHeight){_this.setState({deviceWidth:deviceWidth,deviceHeight:deviceHeight});}}};_this.open=function(){if(_this.isTransitioning){return;}_this.isTransitioning=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:_this.props.backdropOpacity},_this.props.backdropTransitionInTiming);}if(_this.state.isSwipeable){_this.state.pan.setValue({x:0,y:0});}if(_this.contentRef){_this.props.onModalWillShow&&_this.props.onModalWillShow();if(_this.interactionHandle==null){_this.interactionHandle=_reactNative.InteractionManager.createInteractionHandle();}_this.contentRef.animate(_this.animationIn,_this.props.animationInTiming).then(function(){_this.isTransitioning=false;if(_this.interactionHandle){_reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=null;}if(!_this.props.isVisible){_this.close();}else{_this.props.onModalShow();}});}};_this.close=function(){if(_this.isTransitioning){return;}_this.isTransitioning=true;if(_this.backdropRef){_this.backdropRef.transitionTo({opacity:0},_this.props.backdropTransitionOutTiming);}var animationOut=_this.animationOut;if(_this.inSwipeClosingState){_this.inSwipeClosingState=false;if(_this.currentSwipingDirection==='up'){animationOut='slideOutUp';}else if(_this.currentSwipingDirection==='down'){animationOut='slideOutDown';}else if(_this.currentSwipingDirection==='right'){animationOut='slideOutRight';}else if(_this.currentSwipingDirection==='left'){animationOut='slideOutLeft';}}if(_this.contentRef){_this.props.onModalWillHide&&_this.props.onModalWillHide();if(_this.interactionHandle==null){_this.interactionHandle=_reactNative.InteractionManager.createInteractionHandle();}_this.contentRef.animate(animationOut,_this.props.animationOutTiming).then(function(){_this.isTransitioning=false;if(_this.interactionHandle){_reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=null;}if(_this.props.isVisible){_this.open();}else{_this.setState({showContent:false},function(){_this.setState({isVisible:false},function(){_this.props.onModalHide();});});}});}};_this.makeBackdrop=function(){if(!_this.props.hasBackdrop){return null;}if(_this.props.customBackdrop&&!React.isValidElement(_this.props.customBackdrop)){console.warn('Invalid customBackdrop element passed to Modal. You must provide a valid React element.');}var _this$props=_this.props,customBackdrop=_this$props.customBackdrop,backdropColor=_this$props.backdropColor,useNativeDriver=_this$props.useNativeDriver,useNativeDriverForBackdrop=_this$props.useNativeDriverForBackdrop,onBackdropPress=_this$props.onBackdropPress;var hasCustomBackdrop=!!_this.props.customBackdrop;var backdropComputedStyle=[{width:_this.getDeviceWidth(),height:_this.getDeviceHeight(),backgroundColor:_this.state.showContent&&!hasCustomBackdrop?backdropColor:'transparent'}];var backdropWrapper=React.createElement(animatable.View,{ref:function ref(_ref2){return _this.backdropRef=_ref2;},useNativeDriver:useNativeDriverForBackdrop!==undefined?useNativeDriverForBackdrop:useNativeDriver,style:[_modal.default.backdrop,backdropComputedStyle]},hasCustomBackdrop&&customBackdrop);if(hasCustomBackdrop){return backdropWrapper;}return React.createElement(_reactNative.TouchableWithoutFeedback,{onPress:onBackdropPress},backdropWrapper);};var _buildAnimations=(0,_utils.buildAnimations)(extractAnimationFromProps(props)),animationIn=_buildAnimations.animationIn,animationOut=_buildAnimations.animationOut;_this.animationIn=animationIn;_this.animationOut=animationOut;if(_this.state.isSwipeable){_this.state=(0,_extends2.default)({},_this.state,{pan:new _reactNative.Animated.ValueXY()});_this.buildPanResponder();}if(props.isVisible){_this.state=(0,_extends2.default)({},_this.state,{isVisible:true,showContent:true});}return _this;}(0,_createClass2.default)(ReactNativeModal,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.onSwipe){console.warn('`<Modal onSwipe=\"...\" />` is deprecated and will be removed starting from 13.0.0. Use `<Modal onSwipeComplete=\"...\" />` instead.');}this.didUpdateDimensionsEmitter=_reactNative.DeviceEventEmitter.addListener('didUpdateDimensions',this.handleDimensionsUpdate);if(this.state.isVisible){this.open();}_reactNative.BackHandler.addEventListener('hardwareBackPress',this.onBackButtonPress);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){_reactNative.BackHandler.removeEventListener('hardwareBackPress',this.onBackButtonPress);if(this.didUpdateDimensionsEmitter){this.didUpdateDimensionsEmitter.remove();}if(this.interactionHandle){_reactNative.InteractionManager.clearInteractionHandle(this.interactionHandle);this.interactionHandle=null;}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.animationIn!==prevProps.animationIn||this.props.animationOut!==prevProps.animationOut){var _buildAnimations2=(0,_utils.buildAnimations)(extractAnimationFromProps(this.props)),animationIn=_buildAnimations2.animationIn,animationOut=_buildAnimations2.animationOut;this.animationIn=animationIn;this.animationOut=animationOut;}if(this.props.backdropOpacity!==prevProps.backdropOpacity&&this.backdropRef){this.backdropRef.transitionTo({opacity:this.props.backdropOpacity},this.props.backdropTransitionInTiming);}if(this.props.isVisible&&!prevProps.isVisible){this.open();}else if(!this.props.isVisible&&prevProps.isVisible){this.close();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,animationIn=_this$props2.animationIn,animationInTiming=_this$props2.animationInTiming,animationOut=_this$props2.animationOut,animationOutTiming=_this$props2.animationOutTiming,avoidKeyboard=_this$props2.avoidKeyboard,coverScreen=_this$props2.coverScreen,hasBackdrop=_this$props2.hasBackdrop,backdropColor=_this$props2.backdropColor,backdropOpacity=_this$props2.backdropOpacity,backdropTransitionInTiming=_this$props2.backdropTransitionInTiming,backdropTransitionOutTiming=_this$props2.backdropTransitionOutTiming,customBackdrop=_this$props2.customBackdrop,children=_this$props2.children,isVisible=_this$props2.isVisible,onModalShow=_this$props2.onModalShow,onBackButtonPress=_this$props2.onBackButtonPress,useNativeDriver=_this$props2.useNativeDriver,propagateSwipe=_this$props2.propagateSwipe,style=_this$props2.style,otherProps=(0,_objectWithoutProperties2.default)(_this$props2,_excluded);var testID=otherProps.testID,containerProps=(0,_objectWithoutProperties2.default)(otherProps,_excluded2);var computedStyle=[{margin:this.getDeviceWidth()*0.05,transform:[{translateY:0}]},_modal.default.content,style];var panHandlers={};var panPosition={};if(this.state.isSwipeable){panHandlers=(0,_extends2.default)({},this.panResponder.panHandlers);if(useNativeDriver){panPosition={transform:this.state.pan.getTranslateTransform()};}else{panPosition=this.state.pan.getLayout();}}var _children=this.props.hideModalContentWhileAnimating&&this.props.useNativeDriver&&!this.state.showContent?React.createElement(animatable.View,null):children;var containerView=React.createElement(animatable.View,(0,_extends2.default)({},panHandlers,{ref:function ref(_ref3){return _this2.contentRef=_ref3;},style:[panPosition,computedStyle],pointerEvents:\"box-none\",useNativeDriver:useNativeDriver},containerProps),_children);if(!coverScreen&&this.state.isVisible){return React.createElement(_reactNative.View,{pointerEvents:\"box-none\",style:[_modal.default.backdrop,_modal.default.containerBox]},this.makeBackdrop(),containerView);}return React.createElement(_reactNative.Modal,(0,_extends2.default)({transparent:true,animationType:'none',visible:this.state.isVisible,onRequestClose:onBackButtonPress},otherProps),this.makeBackdrop(),avoidKeyboard?React.createElement(_reactNative.KeyboardAvoidingView,{behavior:_reactNative.Platform.OS==='ios'?'padding':undefined,pointerEvents:\"box-none\",style:computedStyle.concat([{margin:0}])},containerView):containerView);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,state){if(!state.isVisible&&nextProps.isVisible){return{isVisible:true,showContent:true};}return null;}}]);return ReactNativeModal;}(React.Component);ReactNativeModal.propTypes={animationIn:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),animationInTiming:PropTypes.number,animationOut:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),animationOutTiming:PropTypes.number,avoidKeyboard:PropTypes.bool,coverScreen:PropTypes.bool,hasBackdrop:PropTypes.bool,backdropColor:PropTypes.string,backdropOpacity:PropTypes.number,backdropTransitionInTiming:PropTypes.number,backdropTransitionOutTiming:PropTypes.number,customBackdrop:PropTypes.node,children:PropTypes.node.isRequired,deviceHeight:PropTypes.number,deviceWidth:PropTypes.number,isVisible:PropTypes.bool.isRequired,hideModalContentWhileAnimating:PropTypes.bool,propagateSwipe:PropTypes.oneOfType([PropTypes.bool,PropTypes.func]),onModalShow:PropTypes.func,onModalWillShow:PropTypes.func,onModalHide:PropTypes.func,onModalWillHide:PropTypes.func,onBackButtonPress:PropTypes.func,onBackdropPress:PropTypes.func,panResponderThreshold:PropTypes.number,onSwipeStart:PropTypes.func,onSwipeMove:PropTypes.func,onSwipeComplete:PropTypes.func,onSwipeCancel:PropTypes.func,swipeThreshold:PropTypes.number,swipeDirection:PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(['up','down','left','right'])),PropTypes.oneOf(['up','down','left','right'])]),useNativeDriver:PropTypes.bool,useNativeDriverForBackdrop:PropTypes.bool,style:PropTypes.any,scrollTo:PropTypes.func,scrollOffset:PropTypes.number,scrollOffsetMax:PropTypes.number,scrollHorizontal:PropTypes.bool,supportedOrientations:PropTypes.arrayOf(PropTypes.oneOf(['portrait','portrait-upside-down','landscape','landscape-left','landscape-right']))};ReactNativeModal.defaultProps=defaultProps;var _default=exports.default=ReactNativeModal;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","PropTypes","animatable","_utils","_modal","_interopRequireDefault","_excluded","_excluded2","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","Boolean","valueOf","initializeAnimations","defaultProps","animationIn","animationInTiming","animationOut","animationOutTiming","avoidKeyboard","coverScreen","hasBackdrop","backdropColor","backdropOpacity","backdropTransitionInTiming","backdropTransitionOutTiming","customBackdrop","useNativeDriver","deviceHeight","deviceWidth","hideModalContentWhileAnimating","propagateSwipe","isVisible","panResponderThreshold","swipeThreshold","onModalShow","onModalWillShow","onModalHide","onModalWillHide","onBackdropPress","onBackButtonPress","scrollTo","scrollOffset","scrollOffsetMax","scrollHorizontal","statusBarTranslucent","supportedOrientations","extractAnimationFromProps","props","ReactNativeModal","exports","_React$Component","_inherits2","_super","_this","_classCallCheck2","state","showContent","Dimensions","width","height","isSwipeable","swipeDirection","pan","isTransitioning","inSwipeClosingState","currentSwipingDirection","panResponder","didUpdateDimensionsEmitter","interactionHandle","getDeviceHeight","getDeviceWidth","shouldPropagateSwipe","evt","gestureState","buildPanResponder","animEvt","PanResponder","create","onMoveShouldSetPanResponder","shouldSetPanResponder","Math","abs","dx","dy","onSwipeStart","getSwipingDirection","createAnimationEventForSwipe","onStartShouldSetPanResponder","hasScrollableView","_dispatchInstances","some","instance","test","type","onPanResponderMove","isSwipeDirectionAllowed","newOpacityFactor","calcDistancePercentage","backdropRef","transitionTo","opacity","onSwipeMove","offsetX","x","animated","offsetY","y","onPanResponderRelease","accDistance","getAccDistancePerDirection","onSwipeComplete","swipingDirection","onSwipe","onSwipeCancel","Animated","spring","toValue","bounciness","start","moveY","y0","reversePercentage","moveX","x0","event","isDirectionIncluded","direction","Array","isArray","includes","_ref","draggedDown","draggedUp","draggedLeft","draggedRight","handleDimensionsUpdate","setState","open","setValue","contentRef","InteractionManager","createInteractionHandle","animate","then","clearInteractionHandle","close","makeBackdrop","isValidElement","console","warn","_this$props","useNativeDriverForBackdrop","hasCustomBackdrop","backdropComputedStyle","backgroundColor","backdropWrapper","createElement","View","ref","undefined","style","styles","backdrop","TouchableWithoutFeedback","onPress","_buildAnimations","buildAnimations","_extends2","ValueXY","_createClass2","key","value","componentDidMount","DeviceEventEmitter","addListener","BackHandler","addEventListener","componentWillUnmount","removeEventListener","remove","componentDidUpdate","prevProps","_buildAnimations2","render","_this2","_this$props2","children","otherProps","_objectWithoutProperties2","testID","containerProps","computedStyle","margin","transform","translateY","content","panHandlers","panPosition","getTranslateTransform","getLayout","_children","containerView","pointerEvents","containerBox","Modal","transparent","animationType","visible","onRequestClose","KeyboardAvoidingView","behavior","Platform","OS","concat","getDerivedStateFromProps","nextProps","Component","propTypes","oneOfType","string","object","number","bool","node","isRequired","func","arrayOf","oneOf","any","_default"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-modal/dist/modal.js"],"sourcesContent":["import * as React from 'react';\nimport { Animated, DeviceEventEmitter, Dimensions, InteractionManager, KeyboardAvoidingView, Modal, PanResponder, BackHandler, Platform, TouchableWithoutFeedback, View, } from 'react-native';\nimport * as PropTypes from 'prop-types';\nimport * as animatable from 'react-native-animatable';\nimport { initializeAnimations, buildAnimations, reversePercentage, } from './utils';\nimport styles from './modal.style';\n// Override default react-native-animatable animations\ninitializeAnimations();\nconst defaultProps = {\n    animationIn: 'slideInUp',\n    animationInTiming: 300,\n    animationOut: 'slideOutDown',\n    animationOutTiming: 300,\n    avoidKeyboard: false,\n    coverScreen: true,\n    hasBackdrop: true,\n    backdropColor: 'black',\n    backdropOpacity: 0.7,\n    backdropTransitionInTiming: 300,\n    backdropTransitionOutTiming: 300,\n    customBackdrop: null,\n    useNativeDriver: false,\n    deviceHeight: null,\n    deviceWidth: null,\n    hideModalContentWhileAnimating: false,\n    propagateSwipe: false,\n    isVisible: false,\n    panResponderThreshold: 4,\n    swipeThreshold: 100,\n    onModalShow: (() => null),\n    onModalWillShow: (() => null),\n    onModalHide: (() => null),\n    onModalWillHide: (() => null),\n    onBackdropPress: (() => null),\n    onBackButtonPress: (() => null),\n    scrollTo: null,\n    scrollOffset: 0,\n    scrollOffsetMax: 0,\n    scrollHorizontal: false,\n    statusBarTranslucent: false,\n    supportedOrientations: ['portrait', 'landscape'],\n};\nconst extractAnimationFromProps = (props) => ({\n    animationIn: props.animationIn,\n    animationOut: props.animationOut,\n});\nexport class ReactNativeModal extends React.Component {\n    constructor(props) {\n        super(props);\n        // We use an internal state for keeping track of the modal visibility: this allows us to keep\n        // the modal visible during the exit animation, even if the user has already change the\n        // isVisible prop to false.\n        // We store in the state the device width and height so that we can update the modal on\n        // device rotation.\n        this.state = {\n            showContent: true,\n            isVisible: false,\n            deviceWidth: Dimensions.get('window').width,\n            deviceHeight: Dimensions.get('window').height,\n            isSwipeable: !!this.props.swipeDirection,\n            pan: null,\n        };\n        this.isTransitioning = false;\n        this.inSwipeClosingState = false;\n        this.currentSwipingDirection = null;\n        this.panResponder = null;\n        this.didUpdateDimensionsEmitter = null;\n        this.interactionHandle = null;\n        this.getDeviceHeight = () => this.props.deviceHeight || this.state.deviceHeight;\n        this.getDeviceWidth = () => this.props.deviceWidth || this.state.deviceWidth;\n        this.onBackButtonPress = () => {\n            if (this.props.onBackButtonPress && this.props.isVisible) {\n                this.props.onBackButtonPress();\n                return true;\n            }\n            return false;\n        };\n        this.shouldPropagateSwipe = (evt, gestureState) => {\n            return typeof this.props.propagateSwipe === 'function'\n                ? this.props.propagateSwipe(evt, gestureState)\n                : this.props.propagateSwipe;\n        };\n        this.buildPanResponder = () => {\n            let animEvt = null;\n            this.panResponder = PanResponder.create({\n                onMoveShouldSetPanResponder: (evt, gestureState) => {\n                    // Use propagateSwipe to allow inner content to scroll. See PR:\n                    // https://github.com/react-native-community/react-native-modal/pull/246\n                    if (!this.shouldPropagateSwipe(evt, gestureState)) {\n                        // The number \"4\" is just a good tradeoff to make the panResponder\n                        // work correctly even when the modal has touchable buttons.\n                        // However, if you want to overwrite this and choose for yourself,\n                        // set panResponderThreshold in the props.\n                        // For reference:\n                        // https://github.com/react-native-community/react-native-modal/pull/197\n                        const shouldSetPanResponder = Math.abs(gestureState.dx) >= this.props.panResponderThreshold ||\n                            Math.abs(gestureState.dy) >= this.props.panResponderThreshold;\n                        if (shouldSetPanResponder && this.props.onSwipeStart) {\n                            this.props.onSwipeStart(gestureState);\n                        }\n                        this.currentSwipingDirection = this.getSwipingDirection(gestureState);\n                        animEvt = this.createAnimationEventForSwipe();\n                        return shouldSetPanResponder;\n                    }\n                    return false;\n                },\n                onStartShouldSetPanResponder: (e, gestureState) => {\n                    const hasScrollableView = e._dispatchInstances &&\n                        e._dispatchInstances.some((instance) => /scrollview|flatlist/i.test(instance.type));\n                    if (hasScrollableView &&\n                        this.shouldPropagateSwipe(e, gestureState) &&\n                        this.props.scrollTo &&\n                        this.props.scrollOffset > 0) {\n                        return false; // user needs to be able to scroll content back up\n                    }\n                    if (this.props.onSwipeStart) {\n                        this.props.onSwipeStart(gestureState);\n                    }\n                    // Cleared so that onPanResponderMove can wait to have some delta\n                    // to work with\n                    this.currentSwipingDirection = null;\n                    return true;\n                },\n                onPanResponderMove: (evt, gestureState) => {\n                    // Using onStartShouldSetPanResponder we don't have any delta so we don't know\n                    // The direction to which the user is swiping until some move have been done\n                    if (!this.currentSwipingDirection) {\n                        if (gestureState.dx === 0 && gestureState.dy === 0) {\n                            return;\n                        }\n                        this.currentSwipingDirection = this.getSwipingDirection(gestureState);\n                        animEvt = this.createAnimationEventForSwipe();\n                    }\n                    if (this.isSwipeDirectionAllowed(gestureState)) {\n                        // Dim the background while swiping the modal\n                        const newOpacityFactor = 1 - this.calcDistancePercentage(gestureState);\n                        this.backdropRef &&\n                            this.backdropRef.transitionTo({\n                                opacity: this.props.backdropOpacity * newOpacityFactor,\n                            });\n                        animEvt(evt, gestureState);\n                        if (this.props.onSwipeMove) {\n                            this.props.onSwipeMove(newOpacityFactor, gestureState);\n                        }\n                    }\n                    else {\n                        if (this.props.scrollTo) {\n                            if (this.props.scrollHorizontal) {\n                                let offsetX = -gestureState.dx;\n                                if (offsetX > this.props.scrollOffsetMax) {\n                                    offsetX -= (offsetX - this.props.scrollOffsetMax) / 2;\n                                }\n                                this.props.scrollTo({ x: offsetX, animated: false });\n                            }\n                            else {\n                                let offsetY = -gestureState.dy;\n                                if (offsetY > this.props.scrollOffsetMax) {\n                                    offsetY -= (offsetY - this.props.scrollOffsetMax) / 2;\n                                }\n                                this.props.scrollTo({ y: offsetY, animated: false });\n                            }\n                        }\n                    }\n                },\n                onPanResponderRelease: (evt, gestureState) => {\n                    // Call the onSwipe prop if the threshold has been exceeded on the right direction\n                    const accDistance = this.getAccDistancePerDirection(gestureState);\n                    if (accDistance > this.props.swipeThreshold &&\n                        this.isSwipeDirectionAllowed(gestureState)) {\n                        if (this.props.onSwipeComplete) {\n                            this.inSwipeClosingState = true;\n                            this.props.onSwipeComplete({\n                                swipingDirection: this.getSwipingDirection(gestureState),\n                            }, gestureState);\n                            return;\n                        }\n                        // Deprecated. Remove later.\n                        if (this.props.onSwipe) {\n                            this.inSwipeClosingState = true;\n                            this.props.onSwipe();\n                            return;\n                        }\n                    }\n                    //Reset backdrop opacity and modal position\n                    if (this.props.onSwipeCancel) {\n                        this.props.onSwipeCancel(gestureState);\n                    }\n                    if (this.backdropRef) {\n                        this.backdropRef.transitionTo({\n                            opacity: this.props.backdropOpacity,\n                        });\n                    }\n                    Animated.spring(this.state.pan, {\n                        toValue: { x: 0, y: 0 },\n                        bounciness: 0,\n                        useNativeDriver: false,\n                    }).start();\n                    if (this.props.scrollTo) {\n                        if (this.props.scrollOffset > this.props.scrollOffsetMax) {\n                            this.props.scrollTo({\n                                y: this.props.scrollOffsetMax,\n                                animated: true,\n                            });\n                        }\n                    }\n                },\n            });\n        };\n        this.getAccDistancePerDirection = (gestureState) => {\n            switch (this.currentSwipingDirection) {\n                case 'up':\n                    return -gestureState.dy;\n                case 'down':\n                    return gestureState.dy;\n                case 'right':\n                    return gestureState.dx;\n                case 'left':\n                    return -gestureState.dx;\n                default:\n                    return 0;\n            }\n        };\n        this.getSwipingDirection = (gestureState) => {\n            if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy)) {\n                return gestureState.dx > 0 ? 'right' : 'left';\n            }\n            return gestureState.dy > 0 ? 'down' : 'up';\n        };\n        this.calcDistancePercentage = (gestureState) => {\n            switch (this.currentSwipingDirection) {\n                case 'down':\n                    return ((gestureState.moveY - gestureState.y0) /\n                        ((this.props.deviceHeight || this.state.deviceHeight) -\n                            gestureState.y0));\n                case 'up':\n                    return reversePercentage(gestureState.moveY / gestureState.y0);\n                case 'left':\n                    return reversePercentage(gestureState.moveX / gestureState.x0);\n                case 'right':\n                    return ((gestureState.moveX - gestureState.x0) /\n                        ((this.props.deviceWidth || this.state.deviceWidth) - gestureState.x0));\n                default:\n                    return 0;\n            }\n        };\n        this.createAnimationEventForSwipe = () => {\n            if (this.currentSwipingDirection === 'right' ||\n                this.currentSwipingDirection === 'left') {\n                return Animated.event([null, { dx: this.state.pan.x }], {\n                    useNativeDriver: false,\n                });\n            }\n            else {\n                return Animated.event([null, { dy: this.state.pan.y }], {\n                    useNativeDriver: false,\n                });\n            }\n        };\n        this.isDirectionIncluded = (direction) => {\n            return Array.isArray(this.props.swipeDirection)\n                ? this.props.swipeDirection.includes(direction)\n                : this.props.swipeDirection === direction;\n        };\n        this.isSwipeDirectionAllowed = ({ dy, dx }) => {\n            const draggedDown = dy > 0;\n            const draggedUp = dy < 0;\n            const draggedLeft = dx < 0;\n            const draggedRight = dx > 0;\n            if (this.currentSwipingDirection === 'up' &&\n                this.isDirectionIncluded('up') &&\n                draggedUp) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'down' &&\n                this.isDirectionIncluded('down') &&\n                draggedDown) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'right' &&\n                this.isDirectionIncluded('right') &&\n                draggedRight) {\n                return true;\n            }\n            else if (this.currentSwipingDirection === 'left' &&\n                this.isDirectionIncluded('left') &&\n                draggedLeft) {\n                return true;\n            }\n            return false;\n        };\n        this.handleDimensionsUpdate = () => {\n            if (!this.props.deviceHeight && !this.props.deviceWidth) {\n                // Here we update the device dimensions in the state if the layout changed\n                // (triggering a render)\n                const deviceWidth = Dimensions.get('window').width;\n                const deviceHeight = Dimensions.get('window').height;\n                if (deviceWidth !== this.state.deviceWidth ||\n                    deviceHeight !== this.state.deviceHeight) {\n                    this.setState({ deviceWidth, deviceHeight });\n                }\n            }\n        };\n        this.open = () => {\n            if (this.isTransitioning) {\n                return;\n            }\n            this.isTransitioning = true;\n            if (this.backdropRef) {\n                this.backdropRef.transitionTo({ opacity: this.props.backdropOpacity }, this.props.backdropTransitionInTiming);\n            }\n            // This is for resetting the pan position,otherwise the modal gets stuck\n            // at the last released position when you try to open it.\n            // TODO: Could certainly be improved - no idea for the moment.\n            if (this.state.isSwipeable) {\n                this.state.pan.setValue({ x: 0, y: 0 });\n            }\n            if (this.contentRef) {\n                this.props.onModalWillShow && this.props.onModalWillShow();\n                if (this.interactionHandle == null) {\n                    this.interactionHandle = InteractionManager.createInteractionHandle();\n                }\n                this.contentRef\n                    .animate(this.animationIn, this.props.animationInTiming)\n                    .then(() => {\n                    this.isTransitioning = false;\n                    if (this.interactionHandle) {\n                        InteractionManager.clearInteractionHandle(this.interactionHandle);\n                        this.interactionHandle = null;\n                    }\n                    if (!this.props.isVisible) {\n                        this.close();\n                    }\n                    else {\n                        this.props.onModalShow();\n                    }\n                });\n            }\n        };\n        this.close = () => {\n            if (this.isTransitioning) {\n                return;\n            }\n            this.isTransitioning = true;\n            if (this.backdropRef) {\n                this.backdropRef.transitionTo({ opacity: 0 }, this.props.backdropTransitionOutTiming);\n            }\n            let animationOut = this.animationOut;\n            if (this.inSwipeClosingState) {\n                this.inSwipeClosingState = false;\n                if (this.currentSwipingDirection === 'up') {\n                    animationOut = 'slideOutUp';\n                }\n                else if (this.currentSwipingDirection === 'down') {\n                    animationOut = 'slideOutDown';\n                }\n                else if (this.currentSwipingDirection === 'right') {\n                    animationOut = 'slideOutRight';\n                }\n                else if (this.currentSwipingDirection === 'left') {\n                    animationOut = 'slideOutLeft';\n                }\n            }\n            if (this.contentRef) {\n                this.props.onModalWillHide && this.props.onModalWillHide();\n                if (this.interactionHandle == null) {\n                    this.interactionHandle = InteractionManager.createInteractionHandle();\n                }\n                this.contentRef\n                    .animate(animationOut, this.props.animationOutTiming)\n                    .then(() => {\n                    this.isTransitioning = false;\n                    if (this.interactionHandle) {\n                        InteractionManager.clearInteractionHandle(this.interactionHandle);\n                        this.interactionHandle = null;\n                    }\n                    if (this.props.isVisible) {\n                        this.open();\n                    }\n                    else {\n                        this.setState({\n                            showContent: false,\n                        }, () => {\n                            this.setState({\n                                isVisible: false,\n                            }, () => {\n                                this.props.onModalHide();\n                            });\n                        });\n                    }\n                });\n            }\n        };\n        this.makeBackdrop = () => {\n            if (!this.props.hasBackdrop) {\n                return null;\n            }\n            if (this.props.customBackdrop &&\n                !React.isValidElement(this.props.customBackdrop)) {\n                console.warn('Invalid customBackdrop element passed to Modal. You must provide a valid React element.');\n            }\n            const { customBackdrop, backdropColor, useNativeDriver, useNativeDriverForBackdrop, onBackdropPress, } = this.props;\n            const hasCustomBackdrop = !!this.props.customBackdrop;\n            const backdropComputedStyle = [\n                {\n                    width: this.getDeviceWidth(),\n                    height: this.getDeviceHeight(),\n                    backgroundColor: this.state.showContent && !hasCustomBackdrop\n                        ? backdropColor\n                        : 'transparent',\n                },\n            ];\n            const backdropWrapper = (React.createElement(animatable.View, { ref: ref => (this.backdropRef = ref), useNativeDriver: useNativeDriverForBackdrop !== undefined\n                    ? useNativeDriverForBackdrop\n                    : useNativeDriver, style: [styles.backdrop, backdropComputedStyle] }, hasCustomBackdrop && customBackdrop));\n            if (hasCustomBackdrop) {\n                // The user will handle backdrop presses himself\n                return backdropWrapper;\n            }\n            // If there's no custom backdrop, handle presses with\n            // TouchableWithoutFeedback\n            return (React.createElement(TouchableWithoutFeedback, { onPress: onBackdropPress }, backdropWrapper));\n        };\n        const { animationIn, animationOut } = buildAnimations(extractAnimationFromProps(props));\n        this.animationIn = animationIn;\n        this.animationOut = animationOut;\n        if (this.state.isSwipeable) {\n            this.state = {\n                ...this.state,\n                pan: new Animated.ValueXY(),\n            };\n            this.buildPanResponder();\n        }\n        if (props.isVisible) {\n            this.state = {\n                ...this.state,\n                isVisible: true,\n                showContent: true,\n            };\n        }\n    }\n    static getDerivedStateFromProps(nextProps, state) {\n        if (!state.isVisible && nextProps.isVisible) {\n            return { isVisible: true, showContent: true };\n        }\n        return null;\n    }\n    componentDidMount() {\n        // Show deprecation message\n        if (this.props.onSwipe) {\n            console.warn('`<Modal onSwipe=\"...\" />` is deprecated and will be removed starting from 13.0.0. Use `<Modal onSwipeComplete=\"...\" />` instead.');\n        }\n        this.didUpdateDimensionsEmitter = DeviceEventEmitter.addListener('didUpdateDimensions', this.handleDimensionsUpdate);\n        if (this.state.isVisible) {\n            this.open();\n        }\n        BackHandler.addEventListener('hardwareBackPress', this.onBackButtonPress);\n    }\n    componentWillUnmount() {\n        BackHandler.removeEventListener('hardwareBackPress', this.onBackButtonPress);\n        if (this.didUpdateDimensionsEmitter) {\n            this.didUpdateDimensionsEmitter.remove();\n        }\n        if (this.interactionHandle) {\n            InteractionManager.clearInteractionHandle(this.interactionHandle);\n            this.interactionHandle = null;\n        }\n    }\n    componentDidUpdate(prevProps) {\n        // If the animations have been changed then rebuild them to make sure we're\n        // using the most up-to-date ones\n        if (this.props.animationIn !== prevProps.animationIn ||\n            this.props.animationOut !== prevProps.animationOut) {\n            const { animationIn, animationOut } = buildAnimations(extractAnimationFromProps(this.props));\n            this.animationIn = animationIn;\n            this.animationOut = animationOut;\n        }\n        // If backdrop opacity has been changed then make sure to update it\n        if (this.props.backdropOpacity !== prevProps.backdropOpacity &&\n            this.backdropRef) {\n            this.backdropRef.transitionTo({ opacity: this.props.backdropOpacity }, this.props.backdropTransitionInTiming);\n        }\n        // On modal open request, we slide the view up and fade in the backdrop\n        if (this.props.isVisible && !prevProps.isVisible) {\n            this.open();\n        }\n        else if (!this.props.isVisible && prevProps.isVisible) {\n            // On modal close request, we slide the view down and fade out the backdrop\n            this.close();\n        }\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const { animationIn, animationInTiming, animationOut, animationOutTiming, avoidKeyboard, coverScreen, hasBackdrop, backdropColor, backdropOpacity, backdropTransitionInTiming, backdropTransitionOutTiming, customBackdrop, children, isVisible, onModalShow, onBackButtonPress, useNativeDriver, propagateSwipe, style, ...otherProps } = this.props;\n        const { testID, ...containerProps } = otherProps;\n        const computedStyle = [\n            { margin: this.getDeviceWidth() * 0.05, transform: [{ translateY: 0 }] },\n            styles.content,\n            style,\n        ];\n        let panHandlers = {};\n        let panPosition = {};\n        if (this.state.isSwipeable) {\n            panHandlers = { ...this.panResponder.panHandlers };\n            if (useNativeDriver) {\n                panPosition = {\n                    transform: this.state.pan.getTranslateTransform(),\n                };\n            }\n            else {\n                panPosition = this.state.pan.getLayout();\n            }\n        }\n        // The user might decide not to show the modal while it is animating\n        // to enhance performance.\n        const _children = this.props.hideModalContentWhileAnimating &&\n            this.props.useNativeDriver &&\n            !this.state.showContent ? (React.createElement(animatable.View, null)) : (children);\n        const containerView = (React.createElement(animatable.View, Object.assign({}, panHandlers, { ref: ref => (this.contentRef = ref), style: [panPosition, computedStyle], pointerEvents: \"box-none\", useNativeDriver: useNativeDriver }, containerProps), _children));\n        // If coverScreen is set to false by the user\n        // we render the modal inside the parent view directly\n        if (!coverScreen && this.state.isVisible) {\n            return (React.createElement(View, { pointerEvents: \"box-none\", style: [styles.backdrop, styles.containerBox] },\n                this.makeBackdrop(),\n                containerView));\n        }\n        return (React.createElement(Modal, Object.assign({ transparent: true, animationType: 'none', visible: this.state.isVisible, onRequestClose: onBackButtonPress }, otherProps),\n            this.makeBackdrop(),\n            avoidKeyboard ? (React.createElement(KeyboardAvoidingView, { behavior: Platform.OS === 'ios' ? 'padding' : undefined, pointerEvents: \"box-none\", style: computedStyle.concat([{ margin: 0 }]) }, containerView)) : (containerView)));\n    }\n}\nReactNativeModal.propTypes = {\n    animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationInTiming: PropTypes.number,\n    animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    animationOutTiming: PropTypes.number,\n    avoidKeyboard: PropTypes.bool,\n    coverScreen: PropTypes.bool,\n    hasBackdrop: PropTypes.bool,\n    backdropColor: PropTypes.string,\n    backdropOpacity: PropTypes.number,\n    backdropTransitionInTiming: PropTypes.number,\n    backdropTransitionOutTiming: PropTypes.number,\n    customBackdrop: PropTypes.node,\n    children: PropTypes.node.isRequired,\n    deviceHeight: PropTypes.number,\n    deviceWidth: PropTypes.number,\n    isVisible: PropTypes.bool.isRequired,\n    hideModalContentWhileAnimating: PropTypes.bool,\n    propagateSwipe: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    onModalShow: PropTypes.func,\n    onModalWillShow: PropTypes.func,\n    onModalHide: PropTypes.func,\n    onModalWillHide: PropTypes.func,\n    onBackButtonPress: PropTypes.func,\n    onBackdropPress: PropTypes.func,\n    panResponderThreshold: PropTypes.number,\n    onSwipeStart: PropTypes.func,\n    onSwipeMove: PropTypes.func,\n    onSwipeComplete: PropTypes.func,\n    onSwipeCancel: PropTypes.func,\n    swipeThreshold: PropTypes.number,\n    swipeDirection: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.oneOf(['up', 'down', 'left', 'right'])),\n        PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    ]),\n    useNativeDriver: PropTypes.bool,\n    useNativeDriverForBackdrop: PropTypes.bool,\n    style: PropTypes.any,\n    scrollTo: PropTypes.func,\n    scrollOffset: PropTypes.number,\n    scrollOffsetMax: PropTypes.number,\n    scrollHorizontal: PropTypes.bool,\n    supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf([\n        'portrait',\n        'portrait-upside-down',\n        'landscape',\n        'landscape-left',\n        'landscape-right',\n    ])),\n};\nReactNativeModal.defaultProps = defaultProps;\nexport default ReactNativeModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}