{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.resolveUri=resolveUri;exports.selectAssetSource=selectAssetSource;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _expoModulesCore=require(\"expo-modules-core\");var _pathBrowserify=_interopRequireDefault(require(\"path-browserify\"));var _reactNative=require(\"react-native\");var _urlParse=_interopRequireDefault(require(\"url-parse\"));var _AssetSourceResolver=_interopRequireDefault(require(\"./AssetSourceResolver\"));var _PlatformUtils=require(\"./PlatformUtils\");var assetMapOverride=(0,_PlatformUtils.getManifest)().assetMapOverride;function selectAssetSource(meta){var _manifest2$extra,_manifest2$extra$expo;if(assetMapOverride&&assetMapOverride.hasOwnProperty(meta.hash)){meta=(0,_extends2.default)({},meta,assetMapOverride[meta.hash]);}var scale=_AssetSourceResolver.default.pickScale(meta.scales,_reactNative.PixelRatio.get());var index=meta.scales.findIndex(function(s){return s===scale;});var hash=meta.fileHashes?meta.fileHashes[index]||meta.fileHashes[0]:meta.hash;var uri=meta.fileUris?meta.fileUris[index]||meta.fileUris[0]:meta.uri;if(uri){return{uri:resolveUri(uri),hash:hash};}var assetUrlOverride=(0,_PlatformUtils.getManifest)().assetUrlOverride;if(assetUrlOverride){var _uri=_pathBrowserify.default.join(assetUrlOverride,hash);return{uri:resolveUri(_uri),hash:hash};}var fileScale=scale===1?'':\"@\"+scale+\"x\";var fileExtension=meta.type?\".\"+encodeURIComponent(meta.type):'';var suffix=\"/\"+encodeURIComponent(meta.name)+fileScale+fileExtension+\"?platform=\"+encodeURIComponent(_expoModulesCore.Platform.OS)+\"&hash=\"+encodeURIComponent(meta.hash);if(/^https?:\\/\\//.test(meta.httpServerLocation)){var _uri2=meta.httpServerLocation+suffix;return{uri:_uri2,hash:hash};}var manifest2=(0,_PlatformUtils.getManifest2)();if(manifest2!=null&&(_manifest2$extra=manifest2.extra)!=null&&(_manifest2$extra$expo=_manifest2$extra.expoGo)!=null&&_manifest2$extra$expo.developer){var baseUrl=new _urlParse.default(\"http://\"+manifest2.extra.expoGo.debuggerHost);baseUrl.set('pathname',meta.httpServerLocation+suffix);return{uri:baseUrl.href,hash:hash};}if((0,_PlatformUtils.getManifest)().developer){var _baseUrl=new _urlParse.default((0,_PlatformUtils.getManifest)().bundleUrl);_baseUrl.set('pathname',meta.httpServerLocation+suffix);return{uri:_baseUrl.href,hash:hash};}return{uri:\"https://classic-assets.eascdn.net/~assets/\"+encodeURIComponent(hash),hash:hash};}function resolveUri(uri){if(!_PlatformUtils.manifestBaseUrl){return uri;}var _URL=new _urlParse.default(uri),protocol=_URL.protocol;if(protocol!==''){return uri;}var baseUrl=new _urlParse.default(_PlatformUtils.manifestBaseUrl);var resolvedPath=uri.startsWith('/')?uri:_pathBrowserify.default.join(baseUrl.pathname,uri);baseUrl.set('pathname',resolvedPath);return baseUrl.href;}","map":{"version":3,"names":["_expoModulesCore","require","_pathBrowserify","_interopRequireDefault","_reactNative","_urlParse","_AssetSourceResolver","_PlatformUtils","assetMapOverride","getManifest","selectAssetSource","meta","_manifest2$extra","_manifest2$extra$expo","hasOwnProperty","hash","_extends2","default","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","index","findIndex","s","fileHashes","uri","fileUris","resolveUri","assetUrlOverride","path","join","fileScale","fileExtension","type","encodeURIComponent","suffix","name","Platform","OS","test","httpServerLocation","manifest2","getManifest2","extra","expoGo","developer","baseUrl","URL","debuggerHost","set","href","bundleUrl","manifestBaseUrl","_URL","protocol","resolvedPath","startsWith","pathname"],"sources":["/Users/shayan/workspace/godfather/node_modules/expo-asset/src/AssetSources.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport path from 'path-browserify';\nimport { PixelRatio } from 'react-native';\nimport { PackagerAsset } from 'react-native/Libraries/Image/AssetRegistry';\nimport URL from 'url-parse';\n\nimport AssetSourceResolver from './AssetSourceResolver';\nimport { getManifest, getManifest2, manifestBaseUrl } from './PlatformUtils';\n\n// @docsMissing\nexport type AssetMetadata = Pick<\n  PackagerAsset,\n  'httpServerLocation' | 'name' | 'hash' | 'type' | 'scales' | 'width' | 'height'\n> & {\n  uri?: string;\n  fileHashes?: string[];\n  fileUris?: string[];\n};\n\nexport type AssetSource = {\n  uri: string;\n  hash: string;\n};\n\n// Fast lookup check if asset map has any overrides in the manifest\nconst assetMapOverride = getManifest().assetMapOverride;\n\n/**\n * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n * a { uri, hash } pair for the specific asset file.\n *\n * If the asset isn't an image with multiple scales, the first file is selected.\n */\nexport function selectAssetSource(meta: AssetMetadata): AssetSource {\n  // Override with the asset map in manifest if available\n  if (assetMapOverride && assetMapOverride.hasOwnProperty(meta.hash)) {\n    meta = { ...meta, ...assetMapOverride[meta.hash] };\n  }\n\n  // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n  // explicitly provided URIs\n  const scale = AssetSourceResolver.pickScale(meta.scales, PixelRatio.get());\n  const index = meta.scales.findIndex((s) => s === scale);\n  const hash = meta.fileHashes ? meta.fileHashes[index] || meta.fileHashes[0] : meta.hash;\n\n  // Allow asset processors to directly provide the URL to load\n  const uri = meta.fileUris ? meta.fileUris[index] || meta.fileUris[0] : meta.uri;\n  if (uri) {\n    return { uri: resolveUri(uri), hash };\n  }\n\n  // Check if the assetUrl was overridden in the manifest\n  const assetUrlOverride = getManifest().assetUrlOverride;\n  if (assetUrlOverride) {\n    const uri = path.join(assetUrlOverride, hash);\n    return { uri: resolveUri(uri), hash };\n  }\n\n  const fileScale = scale === 1 ? '' : `@${scale}x`;\n  const fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n  const suffix = `/${encodeURIComponent(\n    meta.name\n  )}${fileScale}${fileExtension}?platform=${encodeURIComponent(\n    Platform.OS\n  )}&hash=${encodeURIComponent(meta.hash)}`;\n\n  // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n  // development server or production CDN URL origin\n  if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n    const uri = meta.httpServerLocation + suffix;\n    return { uri, hash };\n  }\n\n  // For assets during development using manifest2, we use the development server's URL origin\n  const manifest2 = getManifest2();\n\n  if (manifest2?.extra?.expoGo?.developer) {\n    const baseUrl = new URL(`http://${manifest2.extra.expoGo.debuggerHost}`);\n    baseUrl.set('pathname', meta.httpServerLocation + suffix);\n\n    return {\n      uri: baseUrl.href,\n      hash,\n    };\n  }\n\n  // For assets during development, we use the development server's URL origin\n  if (getManifest().developer) {\n    const baseUrl = new URL(getManifest().bundleUrl);\n    baseUrl.set('pathname', meta.httpServerLocation + suffix);\n    return { uri: baseUrl.href, hash };\n  }\n\n  // Production CDN URIs are based on each asset file hash\n  return {\n    uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n    hash,\n  };\n}\n\n/**\n * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n * base URI.\n */\nexport function resolveUri(uri: string): string {\n  if (!manifestBaseUrl) {\n    return uri;\n  }\n\n  const { protocol } = new URL(uri);\n  if (protocol !== '') {\n    return uri;\n  }\n\n  const baseUrl = new URL(manifestBaseUrl);\n  const resolvedPath = uri.startsWith('/') ? uri : path.join(baseUrl.pathname, uri);\n  baseUrl.set('pathname', resolvedPath);\n  return baseUrl.href;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}