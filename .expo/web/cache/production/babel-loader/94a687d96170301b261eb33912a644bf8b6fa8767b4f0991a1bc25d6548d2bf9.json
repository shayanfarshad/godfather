{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useAssets=useAssets;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=require(\"react\");var _Asset=require(\"./Asset\");function useAssets(moduleIds){var _useState=(0,_react.useState)(),_useState2=(0,_slicedToArray2.default)(_useState,2),assets=_useState2[0],setAssets=_useState2[1];var _useState3=(0,_react.useState)(),_useState4=(0,_slicedToArray2.default)(_useState3,2),error=_useState4[0],setError=_useState4[1];(0,_react.useEffect)(function(){_Asset.Asset.loadAsync(moduleIds).then(setAssets).catch(setError);},[]);return[assets,error];}","map":{"version":3,"names":["_react","require","_Asset","useAssets","moduleIds","_useState","useState","_useState2","_slicedToArray2","default","assets","setAssets","_useState3","_useState4","error","setError","useEffect","Asset","loadAsync","then","catch"],"sources":["/Users/shayan/workspace/godfather/node_modules/expo-asset/src/AssetHooks.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { Asset } from './Asset';\n\n// @needsAudit\n/**\n * Downloads and stores one or more assets locally.\n * After the assets are loaded, this hook returns a list of asset instances.\n * If something went wrong when loading the assets, an error is returned.\n *\n * > Note, the assets are not \"reloaded\" when you dynamically change the asset list.\n *\n * @return Returns an array containing:\n * - on the first position, a list of all loaded assets. If they aren't loaded yet, this value is\n *   `undefined`.\n * - on the second position, an error which encountered when loading the assets. If there was no\n *   error, this value is `undefined`.\n *\n * @example\n * ```tsx\n * const [assets, error] = useAssets([require('path/to/asset.jpg'), require('path/to/other.png')]);\n *\n * return assets ? <Image source={assets[0]} /> : null;\n * ```\n */\nexport function useAssets(moduleIds: number | number[]): [Asset[] | undefined, Error | undefined] {\n  const [assets, setAssets] = useState<Asset[]>();\n  const [error, setError] = useState<Error>();\n\n  useEffect(() => {\n    Asset.loadAsync(moduleIds).then(setAssets).catch(setError);\n  }, []);\n\n  return [assets, error];\n}\n"],"mappings":"oQAAA,IAAAA,MAAA,CAAAC,OAAA,UAEA,IAAAC,MAAA,CAAAD,OAAA,YAuBM,QAAU,CAAAE,SAASA,CAACC,SAA4B,EACpD,IAAAC,SAAA,CAA4B,GAAAC,eAAQ,GAAW,CAAAC,UAAA,IAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA,IAAxCK,MAAM,CAAAH,UAAA,IAAEI,SAAS,CAAAJ,UAAA,IACxB,IAAAK,UAAA,CAA0B,GAAAN,eAAQ,GAAS,CAAAO,UAAA,IAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA,IAApCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAAG,gBAAS,EAAC,UAAK,CACbC,YAAK,CAACC,SAAS,CAACd,SAAS,CAAC,CAACe,IAAI,CAACR,SAAS,CAAC,CAACS,KAAK,CAACL,QAAQ,CAAC,CAC5D,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACL,MAAM,CAAEI,KAAK,CAAC,CACxB"},"metadata":{},"sourceType":"script","externalDependencies":[]}