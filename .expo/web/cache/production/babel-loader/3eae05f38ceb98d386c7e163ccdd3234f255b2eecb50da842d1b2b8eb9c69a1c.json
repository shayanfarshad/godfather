{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.CodedError=void 0;var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2=_interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}var CodedError=exports.CodedError=function(_Error){(0,_inherits2.default)(CodedError,_Error);var _super=_createSuper(CodedError);function CodedError(code,message){var _this;(0,_classCallCheck2.default)(this,CodedError);_this=_super.call(this,message);_this.code=code;return _this;}return(0,_createClass2.default)(CodedError);}((0,_wrapNativeSuper2.default)(Error));","map":{"version":3,"names":["CodedError","exports","_Error","_inherits2","default","_super","_createSuper","code","message","_this","_classCallCheck2","call","_createClass2","_wrapNativeSuper2","Error"],"sources":["/Users/shayan/workspace/godfather/node_modules/expo-modules-core/src/errors/CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":"62CAKa,CAAAA,UAAW,CAAAC,OAAA,CAAAD,UAAA,UAAAE,MAAA,KAAAC,UAAA,CAAAC,OAAA,EAAAJ,UAAA,CAAAE,MAAA,MAAAG,MAAA,CAAAC,YAAA,CAAAN,UAAA,EAItB,SAAAA,WAAYO,IAAY,CAAEC,OAAe,MAAAC,KAAA,IAAAC,gBAAA,CAAAN,OAAA,OAAAJ,UAAA,EACvCS,KAAA,CAAAJ,MAAA,CAAAM,IAAA,MAAMH,OAAO,EACbC,KAAA,CAAKF,IAAI,CAAGA,IAAI,CAAC,OAAAE,KAAA,CACnB,CAAC,SAAAG,aAAA,CAAAR,OAAA,EAAAJ,UAAA,OAAAa,iBAAA,CAAAT,OAAA,EAP6BU,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}