{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.rotationHandlerName=exports.RotationGestureHandler=void 0;var _createHandler=_interopRequireDefault(require(\"./createHandler\"));var _gestureHandlerCommon=require(\"./gestureHandlerCommon\");var rotationHandlerName=exports.rotationHandlerName='RotationGestureHandler';var RotationGestureHandler=exports.RotationGestureHandler=(0,_createHandler.default)({name:rotationHandlerName,allowedProps:_gestureHandlerCommon.baseGestureHandlerProps,config:{}});","map":{"version":3,"names":["_createHandler","_interopRequireDefault","require","_gestureHandlerCommon","rotationHandlerName","exports","RotationGestureHandler","createHandler","name","allowedProps","baseGestureHandlerProps","config"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/handlers/RotationGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport type RotationGestureHandlerEventPayload = {\n  /**\n   * Amount rotated, expressed in radians, from the gesture's focal point\n   * (anchor).\n   */\n  rotation: number;\n\n  /**\n   * X coordinate, expressed in points, of the gesture's central focal point\n   * (anchor).\n   */\n  anchorX: number;\n\n  /**\n   * Y coordinate, expressed in points, of the gesture's central focal point\n   * (anchor).\n   */\n  anchorY: number;\n\n  /**\n   *\n   * Instantaneous velocity, expressed in point units per second, of the\n   * gesture.\n   */\n  velocity: number;\n};\n\nexport interface RotationGestureHandlerProps\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload> {}\n\nexport const rotationHandlerName = 'RotationGestureHandler';\n\nexport type RotationGestureHandler = typeof RotationGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const RotationGestureHandler = createHandler<\n  RotationGestureHandlerProps,\n  RotationGestureHandlerEventPayload\n>({\n  name: rotationHandlerName,\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n"],"mappings":"8MAAA,IAAAA,cAAA,CAAAC,sBAAA,CAAAC,OAAA,qBACA,IAAAC,qBAAA,CAAAD,OAAA,2BAmCO,GAAM,CAAAE,mBAAmB,CAAAC,OAAA,CAAAD,mBAAA,CAAG,wBAA5B,CAIA,GAAM,CAAAE,sBAAsB,CAAAD,OAAA,CAAAC,sBAAA,CAAG,GAAAC,sBAAa,EAGjD,CACAC,IAAI,CAAEJ,mBADN,CAEAK,YAAY,CAAEC,6CAFd,CAGAC,MAAM,CAAE,EAHR,CAHiD,CAA5C"},"metadata":{},"sourceType":"script","externalDependencies":[]}