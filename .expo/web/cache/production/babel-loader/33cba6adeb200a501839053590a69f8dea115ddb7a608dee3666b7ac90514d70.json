{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=deprecate;var _compareVersions=_interopRequireDefault(require(\"compare-versions\"));var _CodedError=require(\"./errors/CodedError\");var postedWarnings={};function deprecate(library,deprecatedAPI){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var currentVersion=options.currentVersion,versionToRemove=options.versionToRemove,replacement=options.replacement;var code=codeFromLibrary(library);var key=code+\":\"+deprecatedAPI+\":\"+replacement;if(!postedWarnings[key]){postedWarnings[key]=true;}if(!currentVersion||!versionToRemove||(0,_compareVersions.default)(currentVersion,versionToRemove)>=0){var _message=\"`\"+deprecatedAPI+\"` has been removed\";if(versionToRemove){_message=_message+\" as of version \\\"\"+versionToRemove+\"\\\"\";}if(replacement&&replacement.length){_message=_message+\" please migrate to: `\"+replacement+\"`\";}throw new _CodedError.CodedError(\"ERR_DEPRECATED_API\",prependLibrary(library,_message));}var message=\"`\"+deprecatedAPI+\"` has been deprecated\";if(replacement&&replacement.length){message=message+\" in favor of `\"+replacement+\"`\";}if(versionToRemove&&versionToRemove.length){message=message+\" and will be removed in version \\\"\"+versionToRemove+\"\\\"\";}console.warn(prependLibrary(library,message));}function prependLibrary(library,message){return library+\": \"+message;}function codeFromLibrary(library){var code=library.replace(/[-.]/g,'_').toUpperCase();return code;}","map":{"version":3,"names":["_compareVersions","_interopRequireDefault","require","_CodedError","postedWarnings","deprecate","library","deprecatedAPI","options","arguments","length","undefined","currentVersion","versionToRemove","replacement","code","codeFromLibrary","key","compareVersions","message","CodedError","prependLibrary","console","warn","replace","toUpperCase"],"sources":["/Users/shayan/workspace/godfather/node_modules/expo-modules-core/src/deprecate.ts"],"sourcesContent":["import compareVersions from 'compare-versions';\n\nimport { CodedError } from './errors/CodedError';\n\nconst postedWarnings: { [key: string]: boolean } = {};\n\n/**\n * Used for deprecating values and throwing an error if a given version of Expo has passed.\n */\nexport default function deprecate(\n  library: string,\n  deprecatedAPI: string,\n  options: {\n    replacement?: string;\n    currentVersion?: string;\n    versionToRemove?: string;\n  } = {}\n): void {\n  const { currentVersion, versionToRemove, replacement } = options;\n  const code = codeFromLibrary(library);\n  const key = `${code}:${deprecatedAPI}:${replacement}`;\n  if (!postedWarnings[key]) {\n    postedWarnings[key] = true;\n  }\n\n  if (\n    !currentVersion ||\n    !versionToRemove ||\n    compareVersions(currentVersion, versionToRemove) >= 0\n  ) {\n    let message = `\\`${deprecatedAPI}\\` has been removed`;\n    if (versionToRemove) {\n      message = `${message} as of version \"${versionToRemove}\"`;\n    }\n    if (replacement && replacement.length) {\n      message = `${message} please migrate to: \\`${replacement}\\``;\n    }\n\n    throw new CodedError(`ERR_DEPRECATED_API`, prependLibrary(library, message));\n  }\n\n  let message = `\\`${deprecatedAPI}\\` has been deprecated`;\n  if (replacement && replacement.length) {\n    message = `${message} in favor of \\`${replacement}\\``;\n  }\n  if (versionToRemove && versionToRemove.length) {\n    message = `${message} and will be removed in version \"${versionToRemove}\"`;\n  }\n  console.warn(prependLibrary(library, message));\n}\n\nfunction prependLibrary(library: string, message: string): string {\n  return `${library}: ${message}`;\n}\n\n/**\n * Transform format:\n * Expo.AR -> EXPO_AR\n * expo-ar -> EXPO_AR\n */\nfunction codeFromLibrary(library: string): string {\n  const code = library.replace(/[-.]/g, '_').toUpperCase();\n  return code;\n}\n"],"mappings":"sKAAA,IAAAA,gBAAA,CAAAC,sBAAA,CAAAC,OAAA,sBAEA,IAAAC,WAAA,CAAAD,OAAA,wBAEA,GAAM,CAAAE,cAAc,CAA+B,EAAE,CAKvC,QAAU,CAAAC,SAASA,CAC/BC,OAAe,CACfC,aAAqB,CAKf,IAJN,CAAAC,OAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAII,EAAE,CAEN,GAAQ,CAAAG,cAAc,CAAmCJ,OAAO,CAAxDI,cAAc,CAAEC,eAAe,CAAkBL,OAAO,CAAxCK,eAAe,CAAEC,WAAW,CAAKN,OAAO,CAAvBM,WAAW,CACpD,GAAM,CAAAC,IAAI,CAAGC,eAAe,CAACV,OAAO,CAAC,CACrC,GAAM,CAAAW,GAAG,CAAMF,IAAI,KAAIR,aAAa,KAAIO,WAAa,CACrD,GAAI,CAACV,cAAc,CAACa,GAAG,CAAC,CAAE,CACxBb,cAAc,CAACa,GAAG,CAAC,CAAG,IAAI,C,CAG5B,GACE,CAACL,cAAc,EACf,CAACC,eAAe,EAChB,GAAAK,wBAAe,EAACN,cAAc,CAAEC,eAAe,CAAC,EAAI,CAAC,CACrD,CACA,GAAI,CAAAM,QAAO,KAAQZ,aAAa,qBAAqB,CACrD,GAAIM,eAAe,CAAE,CACnBM,QAAO,CAAMA,QAAO,qBAAmBN,eAAe,KAAG,C,CAE3D,GAAIC,WAAW,EAAIA,WAAW,CAACJ,MAAM,CAAE,CACrCS,QAAO,CAAMA,QAAO,yBAAyBL,WAAW,IAAI,C,CAG9D,KAAM,IAAI,CAAAM,sBAAU,sBAAuBC,cAAc,CAACf,OAAO,CAAEa,QAAO,CAAC,CAAC,C,CAG9E,GAAI,CAAAA,OAAO,KAAQZ,aAAa,wBAAwB,CACxD,GAAIO,WAAW,EAAIA,WAAW,CAACJ,MAAM,CAAE,CACrCS,OAAO,CAAMA,OAAO,kBAAkBL,WAAW,IAAI,C,CAEvD,GAAID,eAAe,EAAIA,eAAe,CAACH,MAAM,CAAE,CAC7CS,OAAO,CAAMA,OAAO,sCAAoCN,eAAe,KAAG,C,CAE5ES,OAAO,CAACC,IAAI,CAACF,cAAc,CAACf,OAAO,CAAEa,OAAO,CAAC,CAAC,CAChD,CAEA,QAAS,CAAAE,cAAcA,CAACf,OAAe,CAAEa,OAAe,EACtD,MAAU,CAAAb,OAAO,MAAKa,OAAO,CAC/B,CAOA,QAAS,CAAAH,eAAeA,CAACV,OAAe,EACtC,GAAM,CAAAS,IAAI,CAAGT,OAAO,CAACkB,OAAO,CAAC,OAAO,CAAE,GAAG,CAAC,CAACC,WAAW,EAAE,CACxD,MAAO,CAAAV,IAAI,CACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}