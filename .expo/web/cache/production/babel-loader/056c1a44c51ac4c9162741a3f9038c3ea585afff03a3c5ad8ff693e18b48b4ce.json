{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.BottomSheetInternalProvider=exports.BottomSheetInternalContext=void 0;var _react=require(\"react\");var BottomSheetInternalContext=exports.BottomSheetInternalContext=(0,_react.createContext)(null);var BottomSheetInternalProvider=exports.BottomSheetInternalProvider=BottomSheetInternalContext.Provider;","map":{"version":3,"names":["_react","require","BottomSheetInternalContext","exports","createContext","BottomSheetInternalProvider","Provider"],"sources":["/Users/shayan/workspace/godfather/node_modules/@gorhom/bottom-sheet/lib/module/contexts/internal.ts"],"sourcesContent":["import { createContext, RefObject } from 'react';\nimport type {\n  PanGestureHandlerProps,\n  State,\n} from 'react-native-gesture-handler';\nimport type Animated from 'react-native-reanimated';\nimport type {\n  AnimateToPositionType,\n  BottomSheetProps,\n} from '../components/bottomSheet/types';\nimport type {\n  ANIMATION_STATE,\n  KEYBOARD_STATE,\n  SCROLLABLE_STATE,\n  SCROLLABLE_TYPE,\n  SHEET_STATE,\n} from '../constants';\nimport type { Scrollable, ScrollableRef } from '../types';\n\nexport interface BottomSheetInternalContextType\n  extends Pick<\n      PanGestureHandlerProps,\n      | 'activeOffsetY'\n      | 'activeOffsetX'\n      | 'failOffsetY'\n      | 'failOffsetX'\n      | 'waitFor'\n      | 'simultaneousHandlers'\n    >,\n    Required<\n      Pick<\n        BottomSheetProps,\n        | 'enableContentPanningGesture'\n        | 'enableOverDrag'\n        | 'enablePanDownToClose'\n        | 'enableDynamicSizing'\n        | 'overDragResistanceFactor'\n      >\n    > {\n  // animated states\n  animatedAnimationState: Animated.SharedValue<ANIMATION_STATE>;\n  animatedSheetState: Animated.SharedValue<SHEET_STATE>;\n  animatedScrollableState: Animated.SharedValue<SCROLLABLE_STATE>;\n  animatedKeyboardState: Animated.SharedValue<KEYBOARD_STATE>;\n  animatedContentGestureState: Animated.SharedValue<State>;\n  animatedHandleGestureState: Animated.SharedValue<State>;\n\n  // animated values\n  animatedSnapPoints: Animated.SharedValue<number[]>;\n  animatedPosition: Animated.SharedValue<number>;\n  animatedIndex: Animated.SharedValue<number>;\n  animatedContainerHeight: Animated.SharedValue<number>;\n  animatedContentHeight: Animated.SharedValue<number>;\n  animatedHighestSnapPoint: Animated.SharedValue<number>;\n  animatedClosedPosition: Animated.SharedValue<number>;\n  animatedFooterHeight: Animated.SharedValue<number>;\n  animatedHandleHeight: Animated.SharedValue<number>;\n  animatedKeyboardHeight: Animated.SharedValue<number>;\n  animatedKeyboardHeightInContainer: Animated.SharedValue<number>;\n  animatedScrollableType: Animated.SharedValue<SCROLLABLE_TYPE>;\n  animatedScrollableContentOffsetY: Animated.SharedValue<number>;\n  animatedScrollableOverrideState: Animated.SharedValue<SCROLLABLE_STATE>;\n  isScrollableRefreshable: Animated.SharedValue<boolean>;\n  isContentHeightFixed: Animated.SharedValue<boolean>;\n  isInTemporaryPosition: Animated.SharedValue<boolean>;\n  shouldHandleKeyboardEvents: Animated.SharedValue<boolean>;\n\n  // methods\n  stopAnimation: () => void;\n  animateToPosition: AnimateToPositionType;\n  setScrollableRef: (ref: ScrollableRef) => void;\n  removeScrollableRef: (ref: RefObject<Scrollable>) => void;\n}\n\nexport const BottomSheetInternalContext =\n  createContext<BottomSheetInternalContextType | null>(null);\n\nexport const BottomSheetInternalProvider = BottomSheetInternalContext.Provider;\n"],"mappings":"uIAAA,IAAAA,MAAA,CAAAC,OAAA,UA0EO,GAAM,CAAAC,0BAA0B,CAAAC,OAAA,CAAAD,0BAAA,CACrC,GAAAE,oBAAa,EAAwC,IAAxC,CADR,CAGA,GAAM,CAAAC,2BAA2B,CAAAF,OAAA,CAAAE,2BAAA,CAAGH,0BAA0B,CAACI,QAA/D"},"metadata":{},"sourceType":"script","externalDependencies":[]}