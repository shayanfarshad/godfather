{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useScrollToTop;var _core=require(\"@react-navigation/core\");var React=_interopRequireWildcard(require(\"react\"));function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function getScrollableNode(ref){if(ref.current==null){return null;}if('scrollToTop'in ref.current||'scrollTo'in ref.current||'scrollToOffset'in ref.current||'scrollResponderScrollTo'in ref.current){return ref.current;}else if('getScrollResponder'in ref.current){return ref.current.getScrollResponder();}else if('getNode'in ref.current){return ref.current.getNode();}else{return ref.current;}}function useScrollToTop(ref){var navigation=(0,_core.useNavigation)();var route=(0,_core.useRoute)();React.useEffect(function(){var tabNavigations=[];var currentNavigation=navigation;while(currentNavigation){if(currentNavigation.getState().type==='tab'){tabNavigations.push(currentNavigation);}currentNavigation=currentNavigation.getParent();}if(tabNavigations.length===0){return;}var unsubscribers=tabNavigations.map(function(tab){return tab.addListener('tabPress',function(e){var isFocused=navigation.isFocused();var isFirst=tabNavigations.includes(navigation)||navigation.getState().routes[0].key===route.key;requestAnimationFrame(function(){var scrollable=getScrollableNode(ref);if(isFocused&&isFirst&&scrollable&&!e.defaultPrevented){if('scrollToTop'in scrollable){scrollable.scrollToTop();}else if('scrollTo'in scrollable){scrollable.scrollTo({y:0,animated:true});}else if('scrollToOffset'in scrollable){scrollable.scrollToOffset({offset:0,animated:true});}else if('scrollResponderScrollTo'in scrollable){scrollable.scrollResponderScrollTo({y:0,animated:true});}}});});});return function(){unsubscribers.forEach(function(unsubscribe){return unsubscribe();});};},[navigation,ref,route.key]);}","map":{"version":3,"names":["_core","require","React","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","getScrollableNode","ref","current","getScrollResponder","getNode","useScrollToTop","navigation","useNavigation","route","useRoute","useEffect","tabNavigations","currentNavigation","getState","type","push","getParent","length","unsubscribers","map","tab","addListener","isFocused","isFirst","includes","routes","key","requestAnimationFrame","scrollable","defaultPrevented","scrollToTop","scrollTo","y","animated","scrollToOffset","offset","scrollResponderScrollTo","forEach","unsubscribe"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/native/src/useScrollToTop.tsx"],"sourcesContent":["import {\n  EventArg,\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport type { ScrollView } from 'react-native';\n\ntype ScrollOptions = { x?: number; y?: number; animated?: boolean };\n\ntype ScrollableView =\n  | { scrollToTop(): void }\n  | { scrollTo(options: ScrollOptions): void }\n  | { scrollToOffset(options: { offset?: number; animated?: boolean }): void }\n  | { scrollResponderScrollTo(options: ScrollOptions): void };\n\ntype ScrollableWrapper =\n  | { getScrollResponder(): React.ReactNode | ScrollView }\n  | { getNode(): ScrollableView }\n  | ScrollableView;\n\nfunction getScrollableNode(ref: React.RefObject<ScrollableWrapper>) {\n  if (ref.current == null) {\n    return null;\n  }\n\n  if (\n    'scrollToTop' in ref.current ||\n    'scrollTo' in ref.current ||\n    'scrollToOffset' in ref.current ||\n    'scrollResponderScrollTo' in ref.current\n  ) {\n    // This is already a scrollable node.\n    return ref.current;\n  } else if ('getScrollResponder' in ref.current) {\n    // If the view is a wrapper like FlatList, SectionList etc.\n    // We need to use `getScrollResponder` to get access to the scroll responder\n    return ref.current.getScrollResponder();\n  } else if ('getNode' in ref.current) {\n    // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n    // we need to use `getNode` to get the ref to the actual scrollview.\n    // Note that `getNode` is deprecated in newer versions of react-native\n    // this is why we check if we already have a scrollable node above.\n    return ref.current.getNode();\n  } else {\n    return ref.current;\n  }\n}\n\nexport default function useScrollToTop(\n  ref: React.RefObject<ScrollableWrapper>\n) {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  React.useEffect(() => {\n    let tabNavigations: NavigationProp<ReactNavigation.RootParamList>[] = [];\n    let currentNavigation = navigation;\n\n    // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n    // So we need to find all the parent tab navigators and add the listeners there\n    while (currentNavigation) {\n      if (currentNavigation.getState().type === 'tab') {\n        tabNavigations.push(currentNavigation);\n      }\n\n      currentNavigation = currentNavigation.getParent();\n    }\n\n    if (tabNavigations.length === 0) {\n      return;\n    }\n\n    const unsubscribers = tabNavigations.map((tab) => {\n      return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress',\n        (e: EventArg<'tabPress', true>) => {\n          // We should scroll to top only when the screen is focused\n          const isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          const isFirst =\n            tabNavigations.includes(navigation) ||\n            navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            const scrollable = getScrollableNode(ref) as ScrollableWrapper;\n\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({ y: 0, animated: true });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({ offset: 0, animated: true });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({ y: 0, animated: true });\n              }\n            }\n          });\n        }\n      );\n    });\n\n    return () => {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n    };\n  }, [navigation, ref, route.key]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}