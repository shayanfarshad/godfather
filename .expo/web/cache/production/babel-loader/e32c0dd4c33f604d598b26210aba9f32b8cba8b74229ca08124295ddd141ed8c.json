{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.NAVIGATION_PERSISTENCE_KEY=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _i18n=require(\"./src/i18n\");require(\"./src/utils/ignoreWarnings\");var _react=_interopRequireWildcard(require(\"react\"));var _reactNativeSafeAreaContext=require(\"react-native-safe-area-context\");var _navigation=require(\"./src/navigation\");var storage=_interopRequireWildcard(require(\"./src/utils/storage\"));var _AnimatedSplash=require(\"./src/screen/Splash/AnimatedSplash\");var _i18nJs=_interopRequireDefault(require(\"i18n-js\"));var _useStore2=require(\"./src/constants/useStore\");var _theme=require(\"./src/theme\");var _reactNativeToastNotifications=require(\"react-native-toast-notifications\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var NAVIGATION_PERSISTENCE_KEY=exports.NAVIGATION_PERSISTENCE_KEY='NAVIGATION_STATE';var config={screens:{main:'main'}};function App(props){var _useStore=(0,_useStore2.useStore)(),langStore=_useStore.langStore,themeStore=_useStore.themeStore,roleStore=_useStore.roleStore,gameStore=_useStore.gameStore;var _useState=(0,_react.useState)(true),_useState2=(0,_slicedToArray2.default)(_useState,2),isLoading=_useState2[0],setLoading=_useState2[1];var _useNavigationPersist=(0,_navigation.useNavigationPersistence)(storage,NAVIGATION_PERSISTENCE_KEY),initialNavigationState=_useNavigationPersist.initialNavigationState,onNavigationStateChange=_useNavigationPersist.onNavigationStateChange;(0,_react.useEffect)(function(){simulateTasks().then(function(){setTimeout(function(){setLoading(false);},3000);});},[]);var simulateTasks=function _callee(){return _regenerator.default.async(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator.default.awrap(new Promise(function(resolve){return storage.load('theme').then(function(res){console.log({resOftheme:res});if(res){themeStore.setTheme(res==='dark'?true:false);(0,_theme.setColorMode)(res==='dark'?true:false);resolve(res);}else{console.log({baadazkhalibudanres:'umad tu else'});storage.save('theme','light');themeStore.setTheme(false);(0,_theme.setColorMode)(false);resolve(res);}});}));case 2:_context.next=4;return _regenerator.default.awrap(new Promise(function(resolve){return storage.load('language').then(function(res){if(res){_i18nJs.default.locale=res;(0,_i18n.changeLang)(res);langStore.changeLanguage(res==='en-IR'?'fa':'en');resolve(res);}else{_i18nJs.default.locale='en-IR';(0,_i18n.changeLang)('en-IR');langStore.changeLanguage('fa');storage.save('language','en-IR');resolve(res);}roleStore.resetRoles();gameStore.resetLastMoves();});}));case 4:case\"end\":return _context.stop();}},null,null,null,Promise);};var linking={config:config};return _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider,null,isLoading?_react.default.createElement(_AnimatedSplash.AnimatedBootSplash,{onAnimationEnd:function onAnimationEnd(){}}):_react.default.createElement(_reactNativeToastNotifications.ToastProvider,null,_react.default.createElement(_navigation.AppNavigator,null)));}var _default=exports.default=App;","map":{"version":3,"names":["_i18n","require","_react","_interopRequireWildcard","_reactNativeSafeAreaContext","_navigation","storage","_AnimatedSplash","_i18nJs","_interopRequireDefault","_useStore2","_theme","_reactNativeToastNotifications","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","NAVIGATION_PERSISTENCE_KEY","exports","config","screens","main","App","props","_useStore","useStore","langStore","themeStore","roleStore","gameStore","_useState","useState","_useState2","_slicedToArray2","isLoading","setLoading","_useNavigationPersist","useNavigationPersistence","initialNavigationState","onNavigationStateChange","useEffect","simulateTasks","then","setTimeout","_callee","_regenerator","async","_callee$","_context","prev","next","awrap","Promise","resolve","load","res","console","log","resOftheme","setTheme","setColorMode","baadazkhalibudanres","save","I18n","locale","changeLang","changeLanguage","resetRoles","resetLastMoves","stop","linking","createElement","SafeAreaProvider","AnimatedBootSplash","onAnimationEnd","ToastProvider","AppNavigator","_default"],"sources":["/Users/shayan/workspace/godfather/App.tsx"],"sourcesContent":["/* eslint-disable import/first */\n/**\n * Welcome to the main entry point of the app. In this file, we'll\n * be kicking off our app.\n *\n * Most of this file is boilerplate and you shouldn't need to modify\n * it very often. But take some time to look through and understand\n * what is going on here.\n *\n * The app navigation resides in ./app/navigators, so head over there\n * if you're interested in adding screens and navigators.\n */\n// if (__DEV__) {\n//   // Load Reactotron configuration in development. We don't want to\n//   // include this in our production bundle, so we are using `if (__DEV__)`\n//   // to only execute this in development.\n//   require('./devtools/ReactotronConfig.ts');\n// }\nimport './src/i18n';\nimport './src/utils/ignoreWarnings';\nimport React, {useEffect, useState} from 'react';\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\nimport {AppNavigator, useNavigationPersistence} from './src/navigation';\n\nimport * as storage from './src/utils/storage';\nimport {changeLang} from './src/i18n';\nimport {DarkTheme, DefaultTheme, ThemeProvider} from '@react-navigation/native';\nimport {AnimatedBootSplash} from './src/screen/Splash/AnimatedSplash';\nimport I18n from 'i18n-js';\nimport {useStore} from './src/constants/useStore';\nimport {setColorMode} from './src/theme';\nimport {ToastProvider} from 'react-native-toast-notifications';\nexport const NAVIGATION_PERSISTENCE_KEY = 'NAVIGATION_STATE';\n\nconst config = {\n  screens: {\n    main: 'main',\n  },\n};\n\ninterface AppProps {\n  hideSplashScreen: () => Promise<void>;\n}\n\n/**\n * This is the root component of our app.\n */\nfunction App(props: AppProps) {\n  const {langStore, themeStore, roleStore, gameStore} = useStore();\n  const [isLoading, setLoading] = useState(true);\n  const {initialNavigationState, onNavigationStateChange} =\n    useNavigationPersistence(storage, NAVIGATION_PERSISTENCE_KEY);\n\n  useEffect(() => {\n    simulateTasks().then(() => {\n      setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n    });\n  }, []);\n\n  const simulateTasks = async () => {\n    // Simulate fetching data or any other background tasks\n\n    await new Promise(resolve =>\n      storage.load('theme').then(res => {\n        console.log({resOftheme: res});\n        if (res) {\n          themeStore.setTheme(res === 'dark' ? true : false);\n          setColorMode(res === 'dark' ? true : false);\n          resolve(res);\n        } else {\n          console.log({baadazkhalibudanres: 'umad tu else'});\n          storage.save('theme', 'light');\n          themeStore.setTheme(false);\n          setColorMode(false);\n          resolve(res);\n        }\n      }),\n    );\n    // Update progress\n\n    // Simulate additional tasks\n    await new Promise(resolve =>\n      storage.load('language').then(res => {\n        if (res) {\n          I18n.locale = res as string;\n          changeLang(res as string);\n          langStore.changeLanguage(res === 'en-IR' ? 'fa' : 'en');\n          resolve(res);\n        } else {\n          I18n.locale = 'en-IR';\n          changeLang('en-IR');\n          langStore.changeLanguage('fa');\n          storage.save('language', 'en-IR');\n          resolve(res);\n        }\n        roleStore.resetRoles();\n        gameStore.resetLastMoves();\n      }),\n    );\n    // Update progress\n  };\n  // Before we show the app, we have to wait for our state to be ready.\n  // In the meantime, don't render anything. This will be the background\n  // color set in native by rootView's background color.\n  // In iOS: application:didFinishLaunchingWithOptions:\n  // In Android: https://stackoverflow.com/a/45838109/204044\n  // You can replace with your own loading component if you wish.\n\n  const linking = {\n    config,\n  };\n\n  // otherwise, we're ready to render the app\n  return (\n    <SafeAreaProvider>\n      {isLoading ? (\n        <AnimatedBootSplash\n          // timing={5000}\n          onAnimationEnd={() => {\n            // setVisible(false);\n          }}\n        />\n      ) : (\n        <ToastProvider>\n          <AppNavigator />\n        </ToastProvider>\n      )}\n    </SafeAreaProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}