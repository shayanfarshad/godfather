{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useIsFocused;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var React=_react;var _useNavigation=_interopRequireDefault(require(\"./useNavigation\"));function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function useIsFocused(){var navigation=(0,_useNavigation.default)();var _useState=(0,_react.useState)(navigation.isFocused),_useState2=(0,_slicedToArray2.default)(_useState,2),isFocused=_useState2[0],setIsFocused=_useState2[1];var valueToReturn=navigation.isFocused();if(isFocused!==valueToReturn){setIsFocused(valueToReturn);}React.useEffect(function(){var unsubscribeFocus=navigation.addListener('focus',function(){return setIsFocused(true);});var unsubscribeBlur=navigation.addListener('blur',function(){return setIsFocused(false);});return function(){unsubscribeFocus();unsubscribeBlur();};},[navigation]);React.useDebugValue(valueToReturn);return valueToReturn;}","map":{"version":3,"names":["_react","_interopRequireWildcard","require","React","_useNavigation","_interopRequireDefault","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","useIsFocused","navigation","useNavigation","_useState","useState","isFocused","_useState2","_slicedToArray2","setIsFocused","valueToReturn","useEffect","unsubscribeFocus","addListener","unsubscribeBlur","useDebugValue"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/core/src/useIsFocused.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\nimport useNavigation from './useNavigation';\n\n/**\n * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n * This can be used if a component needs to render something based on the focus state.\n */\nexport default function useIsFocused(): boolean {\n  const navigation = useNavigation();\n  const [isFocused, setIsFocused] = useState(navigation.isFocused);\n\n  const valueToReturn = navigation.isFocused();\n\n  if (isFocused !== valueToReturn) {\n    // If the value has changed since the last render, we need to update it.\n    // This could happen if we missed an update from the event listeners during re-render.\n    // React will process this update immediately, so the old subscription value won't be committed.\n    // It is still nice to avoid returning a mismatched value though, so let's override the return value.\n    // This is the same logic as in https://github.com/facebook/react/tree/master/packages/use-subscription\n    setIsFocused(valueToReturn);\n  }\n\n  React.useEffect(() => {\n    const unsubscribeFocus = navigation.addListener('focus', () =>\n      setIsFocused(true)\n    );\n\n    const unsubscribeBlur = navigation.addListener('blur', () =>\n      setIsFocused(false)\n    );\n\n    return () => {\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [navigation]);\n\n  React.useDebugValue(valueToReturn);\n\n  return valueToReturn;\n}\n"],"mappings":"qQAAA,IAAAA,MAAA,CAAAC,uBAAA,CAAAC,OAAA,WAA8B,IAAAC,KAAA,CAAAH,MAAA,CAG9B,IAAAI,cAAA,CAAAC,sBAAA,CAAAH,OAAA,qBAA2C,SAAAI,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,IAAAF,CAAA,YAAAN,wBAAAM,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,EAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,CAAAc,CAAA,OAAAI,CAAA,CAAAR,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAI,CAAA,GAAAA,CAAA,CAAAX,GAAA,EAAAW,CAAA,CAAAC,GAAA,EAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAI,CAAA,EAAAV,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,UAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,EAM5B,QAAS,CAAAY,YAAYA,CAAA,CAAY,CAC9C,GAAM,CAAAC,UAAU,CAAG,GAAAC,sBAAa,GAAE,CAClC,IAAAC,SAAA,CAAkC,GAAAC,eAAQ,EAACH,UAAU,CAACI,SAAS,CAAC,CAAAC,UAAA,IAAAC,eAAA,CAAAtB,OAAA,EAAAkB,SAAA,IAAzDE,SAAS,CAAAC,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAE9B,GAAM,CAAAG,aAAa,CAAGR,UAAU,CAACI,SAAS,EAAE,CAE5C,GAAIA,SAAS,GAAKI,aAAa,CAAE,CAM/BD,YAAY,CAACC,aAAa,CAAC,CAC7B,CAEAjC,KAAK,CAACkC,SAAS,CAAC,UAAM,CACpB,GAAM,CAAAC,gBAAgB,CAAGV,UAAU,CAACW,WAAW,CAAC,OAAO,CAAE,iBACvD,CAAAJ,YAAY,CAAC,IAAI,CAAC,GACnB,CAED,GAAM,CAAAK,eAAe,CAAGZ,UAAU,CAACW,WAAW,CAAC,MAAM,CAAE,iBACrD,CAAAJ,YAAY,CAAC,KAAK,CAAC,GACpB,CAED,MAAO,WAAM,CACXG,gBAAgB,EAAE,CAClBE,eAAe,EAAE,CACnB,CAAC,CACH,CAAC,CAAE,CAACZ,UAAU,CAAC,CAAC,CAEhBzB,KAAK,CAACsC,aAAa,CAACL,aAAa,CAAC,CAElC,MAAO,CAAAA,aAAa,CACtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}