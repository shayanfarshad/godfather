{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _expoModulesCore=require(\"expo-modules-core\");var _reactNative=require(\"react-native\");function getScaledAssetPath(asset){var scale=AssetSourceResolver.pickScale(asset.scales,_reactNative.PixelRatio.get());var scaleSuffix=scale===1?'':'@'+scale+'x';var type=!asset.type?'':\".\"+asset.type;if(__DEV__){return asset.httpServerLocation+'/'+asset.name+scaleSuffix+type;}else{return asset.httpServerLocation.replace(/\\.\\.\\//g,'_')+'/'+asset.name+scaleSuffix+type;}}var AssetSourceResolver=exports.default=function(){function AssetSourceResolver(serverUrl,jsbundleUrl,asset){(0,_classCallCheck2.default)(this,AssetSourceResolver);this.serverUrl=serverUrl||'https://expo.dev';this.jsbundleUrl=null;this.asset=asset;}(0,_createClass2.default)(AssetSourceResolver,[{key:\"isLoadedFromServer\",value:function isLoadedFromServer(){return true;}},{key:\"isLoadedFromFileSystem\",value:function isLoadedFromFileSystem(){return false;}},{key:\"defaultAsset\",value:function defaultAsset(){return this.assetServerURL();}},{key:\"assetServerURL\",value:function assetServerURL(){var fromUrl=new URL(getScaledAssetPath(this.asset),this.serverUrl);fromUrl.searchParams.set('platform',_expoModulesCore.Platform.OS);fromUrl.searchParams.set('hash',this.asset.hash);return this.fromSource(fromUrl.toString().replace(fromUrl.origin,''));}},{key:\"fromSource\",value:function fromSource(source){var _this$asset$width,_this$asset$height;return{__packager_asset:true,width:(_this$asset$width=this.asset.width)!=null?_this$asset$width:undefined,height:(_this$asset$height=this.asset.height)!=null?_this$asset$height:undefined,uri:source,scale:AssetSourceResolver.pickScale(this.asset.scales,_reactNative.PixelRatio.get())};}}],[{key:\"pickScale\",value:function pickScale(scales,deviceScale){for(var i=0;i<scales.length;i++){if(scales[i]>=deviceScale){return scales[i];}}return scales[scales.length-1]||1;}}]);return AssetSourceResolver;}();","map":{"version":3,"names":["_expoModulesCore","require","_reactNative","getScaledAssetPath","asset","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","scaleSuffix","type","__DEV__","httpServerLocation","name","replace","exports","default","serverUrl","jsbundleUrl","_classCallCheck2","_createClass2","key","value","isLoadedFromServer","isLoadedFromFileSystem","defaultAsset","assetServerURL","fromUrl","URL","searchParams","set","Platform","OS","hash","fromSource","toString","origin","source","_this$asset$width","_this$asset$height","__packager_asset","width","undefined","height","uri","deviceScale","i","length"],"sources":["/Users/shayan/workspace/godfather/node_modules/expo-asset/src/AssetSourceResolver.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { PixelRatio } from 'react-native';\nimport { PackagerAsset } from 'react-native/Libraries/Image/AssetRegistry';\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\n// Returns the Metro dev server-specific asset location.\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const type = !asset.type ? '' : `.${asset.type}`;\n  if (__DEV__) {\n    return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n  } else {\n    return asset.httpServerLocation.replace(/\\.\\.\\//g, '_') + '/' + asset.name + scaleSuffix + type;\n  }\n}\n\nexport default class AssetSourceResolver {\n  serverUrl: string;\n  // where the jsbundle is being run from\n  // NOTE(EvanBacon): Never defined on web.\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl || 'https://expo.dev';\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n\n  // Always true for web runtimes\n  isLoadedFromServer(): boolean {\n    return true;\n  }\n\n  // Always false for web runtimes\n  isLoadedFromFileSystem(): boolean {\n    return false;\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    return this.assetServerURL();\n  }\n\n  /**\n   * @returns absolute remote URL for the hosted asset.\n   */\n  assetServerURL(): ResolvedAssetSource {\n    const fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n    fromUrl.searchParams.set('platform', Platform.OS);\n    fromUrl.searchParams.set('hash', this.asset.hash);\n    return this.fromSource(\n      // Relative on web\n      fromUrl.toString().replace(fromUrl.origin, '')\n    );\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width ?? undefined,\n      height: this.asset.height ?? undefined,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}