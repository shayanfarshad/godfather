{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useNavigationState;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var React=_interopRequireWildcard(require(\"react\"));var _useNavigation=_interopRequireDefault(require(\"./useNavigation\"));function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function useNavigationState(selector){var navigation=(0,_useNavigation.default)();var _React$useState=React.useState(function(){return selector(navigation.getState());}),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),setResult=_React$useState2[1];var selectorRef=React.useRef(selector);React.useEffect(function(){selectorRef.current=selector;});React.useEffect(function(){var unsubscribe=navigation.addListener('state',function(e){setResult(selectorRef.current(e.data.state));});return unsubscribe;},[navigation]);return selector(navigation.getState());}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_useNavigation","_interopRequireDefault","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","useNavigationState","selector","navigation","useNavigation","_React$useState","useState","getState","_React$useState2","_slicedToArray2","setResult","selectorRef","useRef","useEffect","current","unsubscribe","addListener","data","state"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/core/src/useNavigationState.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport type { NavigationProp } from './types';\nimport useNavigation from './useNavigation';\n\ntype Selector<ParamList extends ParamListBase, T> = (\n  state: NavigationState<ParamList>\n) => T;\n\n/**\n * Hook to get a value from the current navigation state using a selector.\n *\n * @param selector Selector function to get a value from the state.\n */\nexport default function useNavigationState<ParamList extends ParamListBase, T>(\n  selector: Selector<ParamList, T>\n): T {\n  const navigation = useNavigation<NavigationProp<ParamList>>();\n\n  // We don't care about the state value, we run the selector again at the end\n  // The state is only to make sure that there's a re-render when we have a new value\n  const [, setResult] = React.useState(() => selector(navigation.getState()));\n\n  // We store the selector in a ref to avoid re-subscribing listeners every render\n  const selectorRef = React.useRef(selector);\n\n  React.useEffect(() => {\n    selectorRef.current = selector;\n  });\n\n  React.useEffect(() => {\n    const unsubscribe = navigation.addListener('state', (e) => {\n      setResult(selectorRef.current(e.data.state));\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  return selector(navigation.getState());\n}\n"],"mappings":"2QACA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WAGA,IAAAC,cAAA,CAAAC,sBAAA,CAAAF,OAAA,qBAA2C,SAAAG,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,IAAAF,CAAA,YAAAL,wBAAAK,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,EAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,CAAAc,CAAA,OAAAI,CAAA,CAAAR,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAI,CAAA,GAAAA,CAAA,CAAAX,GAAA,EAAAW,CAAA,CAAAC,GAAA,EAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAI,CAAA,EAAAV,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,UAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,EAW5B,QAAS,CAAAY,kBAAkBA,CACxCC,QAAgC,CAC7B,CACH,GAAM,CAAAC,UAAU,CAAG,GAAAC,sBAAa,GAA6B,CAI7D,IAAAC,eAAA,CAAsB9B,KAAK,CAAC+B,QAAQ,CAAC,iBAAM,CAAAJ,QAAQ,CAACC,UAAU,CAACI,QAAQ,EAAE,CAAC,GAAC,CAAAC,gBAAA,IAAAC,eAAA,CAAAvB,OAAA,EAAAmB,eAAA,IAAlEK,SAAS,CAAAF,gBAAA,IAGlB,GAAM,CAAAG,WAAW,CAAGpC,KAAK,CAACqC,MAAM,CAACV,QAAQ,CAAC,CAE1C3B,KAAK,CAACsC,SAAS,CAAC,UAAM,CACpBF,WAAW,CAACG,OAAO,CAAGZ,QAAQ,CAChC,CAAC,CAAC,CAEF3B,KAAK,CAACsC,SAAS,CAAC,UAAM,CACpB,GAAM,CAAAE,WAAW,CAAGZ,UAAU,CAACa,WAAW,CAAC,OAAO,CAAG,SAAAnC,CAAC,CAAK,CACzD6B,SAAS,CAACC,WAAW,CAACG,OAAO,CAACjC,CAAC,CAACoC,IAAI,CAACC,KAAK,CAAC,CAAC,CAC9C,CAAC,CAAC,CAEF,MAAO,CAAAH,WAAW,CACpB,CAAC,CAAE,CAACZ,UAAU,CAAC,CAAC,CAEhB,MAAO,CAAAD,QAAQ,CAACC,UAAU,CAACI,QAAQ,EAAE,CAAC,CACxC"},"metadata":{},"sourceType":"script","externalDependencies":[]}