{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _interfaces=require(\"../interfaces\");var _EventManager2=_interopRequireDefault(require(\"./EventManager\"));var _utils=require(\"../utils\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var PointerEventManager=exports.default=function(_EventManager){(0,_inherits2.default)(PointerEventManager,_EventManager);var _super=_createSuper(PointerEventManager);function PointerEventManager(){var _this;(0,_classCallCheck2.default)(this,PointerEventManager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty((0,_assertThisInitialized2.default)(_this),\"trackedPointers\",new Set());return _this;}(0,_createClass2.default)(PointerEventManager,[{key:\"setListeners\",value:function setListeners(){var _this2=this;this.view.addEventListener('pointerdown',function(event){if(event.pointerType===_interfaces.PointerType.TOUCH){return;}if(!(0,_utils.isPointerInBounds)(_this2.view,{x:event.clientX,y:event.clientY})){return;}var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.DOWN);var target=event.target;target.setPointerCapture(adaptedEvent.pointerId);_this2.markAsInBounds(adaptedEvent.pointerId);_this2.trackedPointers.add(adaptedEvent.pointerId);if(++_this2.activePointersCounter>1){adaptedEvent.eventType=_interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;_this2.onPointerAdd(adaptedEvent);}else{_this2.onPointerDown(adaptedEvent);}});this.view.addEventListener('pointerup',function(event){if(event.pointerType===_interfaces.PointerType.TOUCH){return;}if(_this2.activePointersCounter===0){return;}var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.UP);var target=event.target;target.releasePointerCapture(adaptedEvent.pointerId);_this2.markAsOutOfBounds(adaptedEvent.pointerId);_this2.trackedPointers.delete(adaptedEvent.pointerId);if(--_this2.activePointersCounter>0){adaptedEvent.eventType=_interfaces.EventTypes.ADDITIONAL_POINTER_UP;_this2.onPointerRemove(adaptedEvent);}else{_this2.onPointerUp(adaptedEvent);}});this.view.addEventListener('pointermove',function(event){if(event.pointerType===_interfaces.PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.MOVE);var target=event.target;if(!target.hasPointerCapture(event.pointerId)){target.setPointerCapture(event.pointerId);}var inBounds=(0,_utils.isPointerInBounds)(_this2.view,{x:adaptedEvent.x,y:adaptedEvent.y});var pointerIndex=_this2.pointersInBounds.indexOf(adaptedEvent.pointerId);if(inBounds){if(pointerIndex<0){adaptedEvent.eventType=_interfaces.EventTypes.ENTER;_this2.onPointerEnter(adaptedEvent);_this2.markAsInBounds(adaptedEvent.pointerId);}else{_this2.onPointerMove(adaptedEvent);}}else{if(pointerIndex>=0){adaptedEvent.eventType=_interfaces.EventTypes.LEAVE;_this2.onPointerLeave(adaptedEvent);_this2.markAsOutOfBounds(adaptedEvent.pointerId);}else{_this2.onPointerOutOfBounds(adaptedEvent);}}});this.view.addEventListener('pointercancel',function(event){if(event.pointerType===_interfaces.PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.CANCEL);_this2.onPointerCancel(adaptedEvent);_this2.markAsOutOfBounds(adaptedEvent.pointerId);_this2.activePointersCounter=0;_this2.trackedPointers.clear();});this.view.addEventListener('pointerenter',function(event){if(event.pointerType===_interfaces.PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.ENTER);_this2.onPointerMoveOver(adaptedEvent);});this.view.addEventListener('pointerleave',function(event){if(event.pointerType===_interfaces.PointerType.TOUCH){return;}var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.LEAVE);_this2.onPointerMoveOut(adaptedEvent);});this.view.addEventListener('lostpointercapture',function(event){var adaptedEvent=_this2.mapEvent(event,_interfaces.EventTypes.CANCEL);if(_this2.trackedPointers.has(adaptedEvent.pointerId)){_this2.onPointerCancel(adaptedEvent);_this2.activePointersCounter=0;_this2.trackedPointers.clear();}});}},{key:\"mapEvent\",value:function mapEvent(event,eventType){return{x:event.clientX,y:event.clientY,offsetX:event.offsetX,offsetY:event.offsetY,pointerId:event.pointerId,eventType:eventType,pointerType:event.pointerType,buttons:event.buttons,time:event.timeStamp};}},{key:\"resetManager\",value:function resetManager(){(0,_get2.default)((0,_getPrototypeOf2.default)(PointerEventManager.prototype),\"resetManager\",this).call(this);this.trackedPointers.clear();}}]);return PointerEventManager;}(_EventManager2.default);","map":{"version":3,"names":["_interfaces","require","_EventManager2","_interopRequireDefault","_utils","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","t","Boolean","prototype","valueOf","call","PointerEventManager","exports","_EventManager","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","Set","_createClass2","key","value","setListeners","_this2","view","addEventListener","event","pointerType","PointerType","TOUCH","isPointerInBounds","x","clientX","y","clientY","adaptedEvent","mapEvent","EventTypes","DOWN","target","setPointerCapture","pointerId","markAsInBounds","trackedPointers","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","CANCEL","onPointerCancel","clear","onPointerMoveOver","onPointerMoveOut","has","offsetX","offsetY","buttons","time","timeStamp","resetManager","_get2","EventManager"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/web/tools/PointerEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes, PointerType } from '../interfaces';\nimport EventManager from './EventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n\n  public setListeners(): void {\n    this.view.addEventListener('pointerdown', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n      if (\n        !isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })\n      ) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n      const target = event.target as HTMLElement;\n\n      target.setPointerCapture(adaptedEvent.pointerId);\n      this.markAsInBounds(adaptedEvent.pointerId);\n      this.trackedPointers.add(adaptedEvent.pointerId);\n\n      if (++this.activePointersCounter > 1) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n        this.onPointerAdd(adaptedEvent);\n      } else {\n        this.onPointerDown(adaptedEvent);\n      }\n    });\n\n    this.view.addEventListener('pointerup', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      // When we call reset on gesture handlers, it also resets their event managers\n      // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n      // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n      // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n      if (this.activePointersCounter === 0) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n      const target = event.target as HTMLElement;\n\n      target.releasePointerCapture(adaptedEvent.pointerId);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.trackedPointers.delete(adaptedEvent.pointerId);\n\n      if (--this.activePointersCounter > 0) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n        this.onPointerRemove(adaptedEvent);\n      } else {\n        this.onPointerUp(adaptedEvent);\n      }\n    });\n\n    this.view.addEventListener('pointermove', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n      const target = event.target as HTMLElement;\n\n      // You may be wondering why are we setting pointer capture here, when we\n      // already set it in `pointerdown` handler. Well, that's a great question,\n      // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n      // says that the requirement for `setPointerCapture` to work is that pointer\n      // must be in 'active buttons state`, otherwise it will fail silently, which\n      // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n      // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n      // will succeed, for some reason. Since it fails silently, we don't actually know\n      // if it worked or not (there's `gotpointercapture` event, but the complexity of\n      // incorporating it here seems stupid), so we just call it again here, every time\n      // pointer moves until it succeeds.\n      // God, I do love web development.\n      if (!target.hasPointerCapture(event.pointerId)) {\n        target.setPointerCapture(event.pointerId);\n      }\n\n      const inBounds: boolean = isPointerInBounds(this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y,\n      });\n\n      const pointerIndex: number = this.pointersInBounds.indexOf(\n        adaptedEvent.pointerId\n      );\n\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = EventTypes.ENTER;\n          this.onPointerEnter(adaptedEvent);\n          this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = EventTypes.LEAVE;\n          this.onPointerLeave(adaptedEvent);\n          this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('pointercancel', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.CANCEL\n      );\n\n      this.onPointerCancel(adaptedEvent);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    });\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n\n    this.view.addEventListener('pointerenter', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n      this.onPointerMoveOver(adaptedEvent);\n    });\n\n    this.view.addEventListener('pointerleave', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n      this.onPointerMoveOut(adaptedEvent);\n    });\n\n    this.view.addEventListener(\n      'lostpointercapture',\n      (event: PointerEvent): void => {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.CANCEL\n        );\n\n        if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n          // in some cases the `pointerup` event is not fired, but `lostpointercapture` is\n          // we simulate the `pointercancel` event here to make sure the gesture handler stops tracking it\n          this.onPointerCancel(adaptedEvent);\n\n          this.activePointersCounter = 0;\n          this.trackedPointers.clear();\n        }\n      }\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: event.offsetX,\n      offsetY: event.offsetY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType: event.pointerType as PointerType,\n      buttons: event.buttons,\n      time: event.timeStamp,\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}