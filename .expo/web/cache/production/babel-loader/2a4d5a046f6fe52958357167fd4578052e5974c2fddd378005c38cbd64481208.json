{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useNavigationBuilder;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _extends3=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _routers=require(\"@react-navigation/routers\");var React=_interopRequireWildcard(require(\"react\"));var _reactIs=require(\"react-is\");var _Group=_interopRequireDefault(require(\"./Group\"));var _isArrayEqual=_interopRequireDefault(require(\"./isArrayEqual\"));var _isRecordEqual=_interopRequireDefault(require(\"./isRecordEqual\"));var _NavigationHelpersContext=_interopRequireDefault(require(\"./NavigationHelpersContext\"));var _NavigationRouteContext=_interopRequireDefault(require(\"./NavigationRouteContext\"));var _NavigationStateContext=_interopRequireDefault(require(\"./NavigationStateContext\"));var _PreventRemoveProvider=_interopRequireDefault(require(\"./PreventRemoveProvider\"));var _Screen=_interopRequireDefault(require(\"./Screen\"));var _types=require(\"./types\");var _useChildListeners2=_interopRequireDefault(require(\"./useChildListeners\"));var _useComponent=_interopRequireDefault(require(\"./useComponent\"));var _useCurrentRender=_interopRequireDefault(require(\"./useCurrentRender\"));var _useDescriptors=_interopRequireDefault(require(\"./useDescriptors\"));var _useEventEmitter=_interopRequireDefault(require(\"./useEventEmitter\"));var _useFocusedListenersChildrenAdapter=_interopRequireDefault(require(\"./useFocusedListenersChildrenAdapter\"));var _useFocusEvents=_interopRequireDefault(require(\"./useFocusEvents\"));var _useKeyedChildListeners=_interopRequireDefault(require(\"./useKeyedChildListeners\"));var _useNavigationHelpers=_interopRequireDefault(require(\"./useNavigationHelpers\"));var _useOnAction=_interopRequireDefault(require(\"./useOnAction\"));var _useOnGetState=_interopRequireDefault(require(\"./useOnGetState\"));var _useOnRouteFocus=_interopRequireDefault(require(\"./useOnRouteFocus\"));var _useRegisterNavigator=_interopRequireDefault(require(\"./useRegisterNavigator\"));var _useScheduleUpdate=_interopRequireDefault(require(\"./useScheduleUpdate\"));var _excluded=[\"children\",\"screenListeners\"];function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}_types.PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===_Screen.default){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the screen '\"+child.props.name+\"'. It must be a non-empty string or 'undefined'.\");}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,props:child.props});return acc;}if(child.type===React.Fragment||child.type===_Group.default){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the group. It must be a non-empty string or 'undefined'.\");}acc.push.apply(acc,(0,_toConsumableArray2.default)(getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==_Group.default?groupOptions:groupOptions!=null?[].concat((0,_toConsumableArray2.default)(groupOptions),[child.props.screenOptions]):[child.props.screenOptions])));return acc;}}throw new Error(\"A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found \"+(React.isValidElement(child)?\"'\"+(typeof child.type==='string'?child.type:(_child$type=child.type)===null||_child$type===void 0?void 0:_child$type.name)+\"'\"+(child.props!=null&&typeof child.props==='object'&&'name'in child.props&&(_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.name?\" for the screen '\"+child.props.name+\"'\":''):typeof child==='object'?JSON.stringify(child):\"'\"+String(child)+\"'\")+\"). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.\");},[]);if(process.env.NODE_ENV!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(\"Got an invalid name (\"+JSON.stringify(name)+\") for the screen. It must be a non-empty string.\");}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(\"Got both 'component' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&getComponent!==undefined){throw new Error(\"Got both 'getComponent' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(component!==undefined&&getComponent!==undefined){throw new Error(\"Got both 'component' and 'getComponent' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&typeof children!=='function'){throw new Error(\"Got an invalid value for 'children' prop for the screen '\"+name+\"'. It must be a function returning a React Element.\");}if(component!==undefined&&!(0,_reactIs.isValidElementType)(component)){throw new Error(\"Got an invalid value for 'component' prop for the screen '\"+name+\"'. It must be a valid React Component.\");}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(\"Got an invalid value for 'getComponent' prop for the screen '\"+name+\"'. It must be a function returning a React Component.\");}if(typeof component==='function'){if(component.name==='component'){console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\"+name+\"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");}else if(/^[a-z]/.test(component.name)){console.warn(\"Got a component with the name '\"+component.name+\"' for the screen '\"+name+\"'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.\");}}}else{throw new Error(\"Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '\"+name+\"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");}});}return configs;};function useNavigationBuilder(createRouter,options){var navigatorKey=(0,_useRegisterNavigator.default)();var route=React.useContext(_NavigationRouteContext.default);var children=options.children,screenListeners=options.screenListeners,rest=(0,_objectWithoutProperties2.default)(options,_excluded);var _React$useRef=React.useRef(createRouter((0,_extends3.default)({},rest,route!==null&&route!==void 0&&route.params&&route.params.state==null&&route.params.initial!==false&&typeof route.params.screen==='string'?{initialRouteName:route.params.screen}:null))),router=_React$useRef.current;var routeConfigs=getRouteConfigsFromChildren(children);var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\"+config.props.name+\"')\");}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!=null?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return(0,_extends3.default)(acc,(0,_defineProperty2.default)({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(_NavigationStateContext.default),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var cleanUpState=React.useCallback(function(){setCurrentState(undefined);stateCleanedUp.current=true;},[setCurrentState]);var setState=React.useCallback(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);},[setCurrentState]);var _React$useMemo=React.useMemo(function(){var _route$params4;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route===null||route===void 0?void 0:(_route$params=route.params)===null||_route$params===void 0?void 0:_route$params.state)==null&&(route===null||route===void 0?void 0:(_route$params2=route.params)===null||_route$params2===void 0?void 0:_route$params2.initial)!==false&&(route===null||route===void 0?void 0:(_route$params3=route.params)===null||_route$params3===void 0?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?(0,_extends3.default)({},initialParams,initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route===null||route===void 0?void 0:(_route$params4=route.params)===null||_route$params4===void 0?void 0:_route$params4.state)==null){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _ref;var _route$params5;return[router.getRehydratedState((_ref=route===null||route===void 0?void 0:(_route$params5=route.params)===null||_route$params5===void 0?void 0:_route$params5.state)!=null?_ref:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=(0,_slicedToArray2.default)(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!(0,_isArrayEqual.default)(state.routeNames,routeNames)||!(0,_isRecordEqual.default)(routeKeyList,previousRouteKeyList)){nextState=router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return previousRouteKeyList.hasOwnProperty(name)&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route===null||route===void 0?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route===null||route===void 0?void 0:route.params;},[route===null||route===void 0?void 0:route.params]);if(route!==null&&route!==void 0&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=_routers.CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=_routers.CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;(0,_useScheduleUpdate.default)(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){setTimeout(function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){cleanUpState();}},0);};},[]);var initializedStateRef=React.useRef();initializedStateRef.current=initializedState;var getState=React.useCallback(function(){var currentState=getCurrentState();return isStateInitialized(currentState)?currentState:initializedStateRef.current;},[getCurrentState,isStateInitialized]);var emitter=(0,_useEventEmitter.default)(function(e){var _ref2;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!==null&&_route!==void 0&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,(0,_toConsumableArray2.default)(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)===null||_route2===void 0?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref2=[]).concat.apply(_ref2,(0,_toConsumableArray2.default)([screenListeners].concat((0,_toConsumableArray2.default)(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map===null||map===void 0?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener===null||listener===void 0?void 0:listener(e);});});(0,_useFocusEvents.default)({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _useChildListeners=(0,_useChildListeners2.default)(),childListeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=(0,_useKeyedChildListeners.default)(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var onAction=(0,_useOnAction.default)({router:router,getState:getState,setState:setState,key:route===null||route===void 0?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=(0,_useOnRouteFocus.default)({router:router,key:route===null||route===void 0?void 0:route.key,getState:getState,setState:setState});var navigation=(0,_useNavigationHelpers.default)({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router});(0,_useFocusedListenersChildrenAdapter.default)({navigation:navigation,focusedListeners:childListeners.focus});(0,_useOnGetState.default)({getState:getState,getStateListeners:keyedListeners.getState});var descriptors=(0,_useDescriptors.default)({state:state,screens:screens,navigation:navigation,screenOptions:options.screenOptions,defaultScreenOptions:options.defaultScreenOptions,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter});(0,_useCurrentRender.default)({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=(0,_useComponent.default)(function(children){return React.createElement(_NavigationHelpersContext.default.Provider,{value:navigation},React.createElement(_PreventRemoveProvider.default,null,children));});return{state:state,navigation:navigation,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_reactIs","_Group","_interopRequireDefault","_isArrayEqual","_isRecordEqual","_NavigationHelpersContext","_NavigationRouteContext","_NavigationStateContext","_PreventRemoveProvider","_Screen","_types","_useChildListeners2","_useComponent","_useCurrentRender","_useDescriptors","_useEventEmitter","_useFocusedListenersChildrenAdapter","_useFocusEvents","_useKeyedChildListeners","_useNavigationHelpers","_useOnAction","_useOnGetState","_useOnRouteFocus","_useRegisterNavigator","_useScheduleUpdate","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","PrivateValueStore","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","configs","Children","toArray","reduce","acc","child","_child$type","_child$props","isValidElement","type","Screen","props","navigationKey","Error","JSON","stringify","name","push","keys","options","Fragment","Group","apply","_toConsumableArray2","concat","screenOptions","String","process","env","NODE_ENV","forEach","config","_config$props","component","getComponent","isValidElementType","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","useRegisterNavigator","route","useContext","NavigationRouteContext","screenListeners","rest","_objectWithoutProperties2","_React$useRef","useRef","_extends3","params","state","initial","screen","initialRouteName","router","current","routeConfigs","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","_defineProperty2","getId","length","isStateValid","useCallback","isStateInitialized","stale","_React$useContext","NavigationStateContext","currentState","getCurrentState","getState","setCurrentState","setState","setKey","getKey","getIsInitial","stateCleanedUp","cleanUpState","_React$useMemo","useMemo","_route$params4","initialRouteParamList","_route$params","_route$params2","_route$params3","initialParamsFromParams","getInitialState","_ref","_route$params5","getRehydratedState","_React$useMemo2","_slicedToArray2","initializedState","isFirstStateInitialization","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","isArrayEqual","isRecordEqual","getStateForRouteNamesChange","routeKeyChanges","filter","previousNestedParamsRef","previousParams","action","CommonActions","reset","navigate","path","updatedState","getStateForAction","shouldUpdate","useScheduleUpdate","setTimeout","initializedStateRef","emitter","useEventEmitter","_ref2","target","_route","routes","find","index","_route2","navigation","descriptors","listeners","cb","self","lastIndexOf","listener","useFocusEvents","emit","data","_useChildListeners","useChildListeners","childListeners","addListener","_useKeyedChildListene","useKeyedChildListeners","keyedListeners","addKeyedListener","onAction","useOnAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","useOnRouteFocus","useNavigationHelpers","id","useFocusedListenersChildrenAdapter","focusedListeners","focus","useOnGetState","getStateListeners","useDescriptors","defaultScreenOptions","useCurrentRender","NavigationContent","useComponent","createElement","NavigationHelpersContext","Provider","value","PreventRemoveProvider"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/core/src/useNavigationBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  DefaultRouterOptions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n  RouterConfigOptions,\n  RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\n\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport {\n  DefaultNavigatorOptions,\n  EventMapBase,\n  EventMapCore,\n  NavigatorScreenParams,\n  PrivateValueStore,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors, { ScreenConfigWithParent } from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigationBuilderOptions<ScreenOptions extends {}> = {\n  /**\n   * Default options specified by the navigator.\n   * It receives the custom options in the arguments if a function is specified.\n   */\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n};\n\ntype NavigatorRoute<State extends NavigationState> = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase, State>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap\n          >,\n        });\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n              ? [...groupOptions, child.props.screenOptions]\n              : [child.props.screenOptions]\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props != null &&\n              typeof child.props === 'object' &&\n              'name' in child.props &&\n              child.props?.name\n                ? ` for the screen '${child.props.name}'`\n                : ''\n            }`\n          : typeof child === 'object'\n          ? JSON.stringify(child)\n          : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    State,\n    ScreenOptions,\n    EventMap\n  > &\n    NavigationBuilderOptions<ScreenOptions> &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute<State>\n    | undefined;\n\n  const { children, screenListeners, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...(rest as unknown as RouterOptions),\n      ...(route?.params &&\n      route.params.state == null &&\n      route.params.initial !== false &&\n      typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState>) =>\n      state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n\n  const setState = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    },\n    [setCurrentState]\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      return [\n        router.getRehydratedState(\n          route?.params?.state ?? (currentState as PartialState<State>),\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(\n        (name) =>\n          previousRouteKeyList.hasOwnProperty(name) &&\n          routeKeyList[name] !== previousRouteKeyList[name]\n      ),\n    });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef<State>();\n  initializedStateRef.current = initializedState;\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    let routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const descriptors = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => (\n    <NavigationHelpersContext.Provider value={navigation}>\n      <PreventRemoveProvider>{children}</PreventRemoveProvider>\n    </NavigationHelpersContext.Provider>\n  ));\n\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent,\n  };\n}\n"],"mappings":"+oBAAA,IAAAA,QAAA,CAAAC,OAAA,8BAYA,IAAAC,KAAA,CAAAC,uBAAA,CAAAF,OAAA,WACA,IAAAG,QAAA,CAAAH,OAAA,aAEA,IAAAI,MAAA,CAAAC,sBAAA,CAAAL,OAAA,aACA,IAAAM,aAAA,CAAAD,sBAAA,CAAAL,OAAA,oBACA,IAAAO,cAAA,CAAAF,sBAAA,CAAAL,OAAA,qBACA,IAAAQ,yBAAA,CAAAH,sBAAA,CAAAL,OAAA,gCACA,IAAAS,uBAAA,CAAAJ,sBAAA,CAAAL,OAAA,8BACA,IAAAU,uBAAA,CAAAL,sBAAA,CAAAL,OAAA,8BACA,IAAAW,sBAAA,CAAAN,sBAAA,CAAAL,OAAA,6BACA,IAAAY,OAAA,CAAAP,sBAAA,CAAAL,OAAA,cACA,IAAAa,MAAA,CAAAb,OAAA,YASA,IAAAc,mBAAA,CAAAT,sBAAA,CAAAL,OAAA,yBACA,IAAAe,aAAA,CAAAV,sBAAA,CAAAL,OAAA,oBACA,IAAAgB,iBAAA,CAAAX,sBAAA,CAAAL,OAAA,wBACA,IAAAiB,eAAA,CAAAZ,sBAAA,CAAAL,OAAA,sBACA,IAAAkB,gBAAA,CAAAb,sBAAA,CAAAL,OAAA,uBACA,IAAAmB,mCAAA,CAAAd,sBAAA,CAAAL,OAAA,0CACA,IAAAoB,eAAA,CAAAf,sBAAA,CAAAL,OAAA,sBACA,IAAAqB,uBAAA,CAAAhB,sBAAA,CAAAL,OAAA,8BACA,IAAAsB,qBAAA,CAAAjB,sBAAA,CAAAL,OAAA,4BACA,IAAAuB,YAAA,CAAAlB,sBAAA,CAAAL,OAAA,mBACA,IAAAwB,cAAA,CAAAnB,sBAAA,CAAAL,OAAA,qBACA,IAAAyB,gBAAA,CAAApB,sBAAA,CAAAL,OAAA,uBACA,IAAA0B,qBAAA,CAAArB,sBAAA,CAAAL,OAAA,4BACA,IAAA2B,kBAAA,CAAAtB,sBAAA,CAAAL,OAAA,yBAAmD,IAAA4B,SAAA,yCAAAC,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,IAAAF,CAAA,YAAA5B,wBAAA4B,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,EAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,CAAAc,CAAA,OAAAI,CAAA,CAAAR,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAI,CAAA,GAAAA,CAAA,CAAAX,GAAA,EAAAW,CAAA,CAAAC,GAAA,EAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAI,CAAA,EAAAV,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,UAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,EAInDY,wBAAiB,CAqBjB,GAAM,CAAAC,UAAU,CAAI,QAAd,CAAAA,UAAUA,CAAIC,GAAY,QAC9B,CAAAA,GAAG,GAAKC,SAAS,EAAK,MAAO,CAAAD,GAAG,GAAK,QAAQ,EAAIA,GAAG,GAAK,EAAG,GAO9D,GAAM,CAAAE,2BAA2B,CAAG,QAA9B,CAAAA,2BAA2BA,CAK/BC,QAAyB,CACzBC,QAAiB,CACjBC,YAIY,CACT,CACH,GAAM,CAAAC,OAAO,CAAGzD,KAAK,CAAC0D,QAAQ,CAACC,OAAO,CAACL,QAAQ,CAAC,CAACM,MAAM,CAErD,SAACC,GAAG,CAAEC,KAAK,CAAK,KAAAC,WAAA,CAAAC,YAAA,CAChB,GAAIhE,KAAK,CAACiE,cAAc,CAACH,KAAK,CAAC,CAAE,CAC/B,GAAIA,KAAK,CAACI,IAAI,GAAKC,eAAM,CAAE,CAIzB,GAAI,CAACjB,UAAU,CAACY,KAAK,CAACM,KAAK,CAACC,aAAa,CAAC,CAAE,CAC1C,KAAM,IAAI,CAAAC,KAAK,yCAC2BC,IAAI,CAACC,SAAS,CACpDV,KAAK,CAACM,KAAK,CAACC,aAAa,CACzB,sBACAP,KAAK,CAACM,KAAK,CAACK,IACb,mDAAiD,CACnD,CACH,CAEAZ,GAAG,CAACa,IAAI,CAAC,CACPC,IAAI,CAAE,CAACpB,QAAQ,CAAEO,KAAK,CAACM,KAAK,CAACC,aAAa,CAAC,CAC3CO,OAAO,CAAEpB,YAAY,CACrBY,KAAK,CAAEN,KAAK,CAACM,KAOf,CAAC,CAAC,CACF,MAAO,CAAAP,GAAG,CACZ,CAEA,GAAIC,KAAK,CAACI,IAAI,GAAKlE,KAAK,CAAC6E,QAAQ,EAAIf,KAAK,CAACI,IAAI,GAAKY,cAAK,CAAE,CACzD,GAAI,CAAC5B,UAAU,CAACY,KAAK,CAACM,KAAK,CAACC,aAAa,CAAC,CAAE,CAC1C,KAAM,IAAI,CAAAC,KAAK,yCAC2BC,IAAI,CAACC,SAAS,CACpDV,KAAK,CAACM,KAAK,CAACC,aAAa,CACzB,iEAA+D,CAClE,CACH,CAIAR,GAAG,CAACa,IAAI,CAAAK,KAAA,CAARlB,GAAG,IAAAmB,mBAAA,CAAA9C,OAAA,EACEmB,2BAA2B,CAC5BS,KAAK,CAACM,KAAK,CAACd,QAAQ,CACpBQ,KAAK,CAACM,KAAK,CAACC,aAAa,CACzBP,KAAK,CAACI,IAAI,GAAKY,cAAK,CAChBtB,YAAY,CACZA,YAAY,EAAI,IAAI,IAAAyB,MAAA,IAAAD,mBAAA,CAAA9C,OAAA,EAChBsB,YAAY,GAAEM,KAAK,CAACM,KAAK,CAACc,aAAa,GAC3C,CAACpB,KAAK,CAACM,KAAK,CAACc,aAAa,CAAC,CAChC,EACF,CACD,MAAO,CAAArB,GAAG,CACZ,CACF,CAEA,KAAM,IAAI,CAAAS,KAAK,sGAEXtE,KAAK,CAACiE,cAAc,CAACH,KAAK,CAAC,MAErB,MAAO,CAAAA,KAAK,CAACI,IAAI,GAAK,QAAQ,CAAGJ,KAAK,CAACI,IAAI,EAAAH,WAAA,CAAGD,KAAK,CAACI,IAAI,UAAAH,WAAA,iBAAVA,WAAA,CAAYU,IAC3D,OACCX,KAAK,CAACM,KAAK,EAAI,IAAI,EACnB,MAAO,CAAAN,KAAK,CAACM,KAAK,GAAK,QAAQ,EAC/B,MAAM,EAAI,CAAAN,KAAK,CAACM,KAAK,GAAAJ,YAAA,CACrBF,KAAK,CAACM,KAAK,UAAAJ,YAAA,WAAXA,YAAA,CAAaS,IAAI,qBACOX,KAAK,CAACM,KAAK,CAACK,IAAK,KACrC,EACL,EACD,MAAO,CAAAX,KAAK,GAAK,QAAQ,CACzBS,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC,KACjBqB,MAAM,CAACrB,KAAK,CAAE,IACvB,8FAA2F,CAC7F,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIsB,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC7B,OAAO,CAAC8B,OAAO,CAAE,SAAAC,MAAM,CAAK,CAC1B,IAAAC,aAAA,CAAoDD,MAAM,CAACpB,KAAK,CAAxDK,IAAI,CAAAgB,aAAA,CAAJhB,IAAI,CAAEnB,QAAQ,CAAAmC,aAAA,CAARnC,QAAQ,CAAEoC,SAAS,CAAAD,aAAA,CAATC,SAAS,CAAEC,YAAA,CAAAF,aAAA,CAAAE,YAAA,CAEnC,GAAI,MAAO,CAAAlB,IAAI,GAAK,QAAQ,EAAI,CAACA,IAAI,CAAE,CACrC,KAAM,IAAI,CAAAH,KAAK,yBACWC,IAAI,CAACC,SAAS,CACpCC,IAAI,CACJ,mDAAiD,CACpD,CACH,CAEA,GACEnB,QAAQ,EAAI,IAAI,EAChBoC,SAAS,GAAKtC,SAAS,EACvBuC,YAAY,GAAKvC,SAAS,CAC1B,CACA,GAAIE,QAAQ,EAAI,IAAI,EAAIoC,SAAS,GAAKtC,SAAS,CAAE,CAC/C,KAAM,IAAI,CAAAkB,KAAK,8DACgDG,IAAK,qCAAmC,CACtG,CACH,CAEA,GAAInB,QAAQ,EAAI,IAAI,EAAIqC,YAAY,GAAKvC,SAAS,CAAE,CAClD,KAAM,IAAI,CAAAkB,KAAK,iEACmDG,IAAK,qCAAmC,CACzG,CACH,CAEA,GAAIiB,SAAS,GAAKtC,SAAS,EAAIuC,YAAY,GAAKvC,SAAS,CAAE,CACzD,KAAM,IAAI,CAAAkB,KAAK,kEACoDG,IAAK,qCAAmC,CAC1G,CACH,CAEA,GAAInB,QAAQ,EAAI,IAAI,EAAI,MAAO,CAAAA,QAAQ,GAAK,UAAU,CAAE,CACtD,KAAM,IAAI,CAAAgB,KAAK,6DAC+CG,IAAK,sDAAoD,CACtH,CACH,CAEA,GAAIiB,SAAS,GAAKtC,SAAS,EAAI,CAAC,GAAAwC,2BAAkB,EAACF,SAAS,CAAC,CAAE,CAC7D,KAAM,IAAI,CAAApB,KAAK,8DACgDG,IAAK,yCAAuC,CAC1G,CACH,CAEA,GAAIkB,YAAY,GAAKvC,SAAS,EAAI,MAAO,CAAAuC,YAAY,GAAK,UAAU,CAAE,CACpE,KAAM,IAAI,CAAArB,KAAK,iEACmDG,IAAK,wDAAsD,CAC5H,CACH,CAEA,GAAI,MAAO,CAAAiB,SAAS,GAAK,UAAU,CAAE,CACnC,GAAIA,SAAS,CAACjB,IAAI,GAAK,WAAW,CAAE,CAIlCoB,OAAO,CAACC,IAAI,sFAC2ErB,IAAK,wRAAsR,CACjX,CACH,CAAC,IAAM,IAAI,QAAQ,CAACsB,IAAI,CAACL,SAAS,CAACjB,IAAI,CAAC,CAAE,CACxCoB,OAAO,CAACC,IAAI,mCACwBJ,SAAS,CAACjB,IAAK,sBAAoBA,IAAK,0MAAwM,CACnR,CACH,CACF,CACF,CAAC,IAAM,CACL,KAAM,IAAI,CAAAH,KAAK,mFACqEG,IAAK,sLAAoL,CAC5Q,CACH,CACF,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAhB,OAAO,CAChB,CAAC,CASc,QAAS,CAAAuC,oBAAoBA,CAO1CC,YAAsD,CACtDrB,OAOe,CACf,CACA,GAAM,CAAAsB,YAAY,CAAG,GAAAC,6BAAoB,GAAE,CAE3C,GAAM,CAAAC,KAAK,CAAGpG,KAAK,CAACqG,UAAU,CAACC,+BAAsB,CAExC,CAEb,GAAQ,CAAAhD,QAAQ,CAA+BsB,OAAO,CAA9CtB,QAAQ,CAAEiD,eAAe,CAAc3B,OAAO,CAApC2B,eAAe,CAAKC,IAAA,IAAAC,yBAAA,CAAAvE,OAAA,EAAS0C,OAAO,CAAAjD,SAAA,EACtD,IAAA+E,aAAA,CAA4B1G,KAAK,CAAC2G,MAAM,CACtCV,YAAY,IAAAW,SAAA,CAAA1E,OAAA,KACNsE,IAAiC,CACjCJ,KAAK,SAALA,KAAK,WAALA,KAAK,CAAES,MAAM,EACjBT,KAAK,CAACS,MAAM,CAACC,KAAK,EAAI,IAAI,EAC1BV,KAAK,CAACS,MAAM,CAACE,OAAO,GAAK,KAAK,EAC9B,MAAO,CAAAX,KAAK,CAACS,MAAM,CAACG,MAAM,GAAK,QAAQ,CACnC,CAAEC,gBAAgB,CAAEb,KAAK,CAACS,MAAM,CAACG,MAAO,CAAC,CACzC,IAAI,CACT,CAAC,CACH,CAVgBE,MAAA,CAAAR,aAAA,CAATS,OAAO,CAYf,GAAM,CAAAC,YAAY,CAAG/D,2BAA2B,CAI9CC,QAAQ,CAAC,CAEX,GAAM,CAAA+D,OAAO,CAAGD,YAAY,CAACxD,MAAM,CAEjC,SAACC,GAAG,CAAE2B,MAAM,CAAK,CACjB,GAAIA,MAAM,CAACpB,KAAK,CAACK,IAAI,GAAI,CAAAZ,GAAG,CAAE,CAC5B,KAAM,IAAI,CAAAS,KAAK,8GACgGkB,MAAM,CAACpB,KAAK,CAACK,IAAK,KAAG,CACnI,CACH,CAEAZ,GAAG,CAAC2B,MAAM,CAACpB,KAAK,CAACK,IAAI,CAAC,CAAGe,MAAM,CAC/B,MAAO,CAAA3B,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,GAAM,CAAAyD,UAAU,CAAGF,YAAY,CAACG,GAAG,CAAE,SAAA/B,MAAM,QAAK,CAAAA,MAAM,CAACpB,KAAK,CAACK,IAAI,GAAC,CAClE,GAAM,CAAA+C,YAAY,CAAGF,UAAU,CAAC1D,MAAM,CACpC,SAACC,GAAG,CAAE4D,IAAI,CAAK,CACb5D,GAAG,CAAC4D,IAAI,CAAC,CAAGJ,OAAO,CAACI,IAAI,CAAC,CAAC9C,IAAI,CAAC4C,GAAG,CAAE,SAAApE,GAAG,QAAK,CAAAA,GAAG,OAAHA,GAAG,CAAI,EAAE,GAAC,CAACuE,IAAI,CAAC,GAAG,CAAC,CAChE,MAAO,CAAA7D,GAAG,CACZ,CAAC,CACD,CAAC,CAAC,CACH,CACD,GAAM,CAAA8D,cAAc,CAAGL,UAAU,CAAC1D,MAAM,CACtC,SAACC,GAAG,CAAE4D,IAAI,CAAK,CACb,GAAQ,CAAAG,aAAA,CAAkBP,OAAO,CAACI,IAAI,CAAC,CAACrD,KAAK,CAArCwD,aAAA,CACR/D,GAAG,CAAC4D,IAAI,CAAC,CAAGG,aAAa,CACzB,MAAO,CAAA/D,GAAG,CACZ,CAAC,CACD,CAAC,CAAC,CACH,CACD,GAAM,CAAAgE,cAAc,CAAGP,UAAU,CAAC1D,MAAM,CAGtC,SAACC,GAAG,CAAE4D,IAAI,QACR,GAAAb,SAAA,CAAA1E,OAAA,EAAc2B,GAAG,IAAAiE,gBAAA,CAAA5F,OAAA,KACduF,IAAI,CAAGJ,OAAO,CAACI,IAAI,CAAC,CAACrD,KAAK,CAAC2D,KAAA,CAC7B,CAAC,GACJ,CAAC,CAAC,CACH,CAED,GAAI,CAACT,UAAU,CAACU,MAAM,CAAE,CACtB,KAAM,IAAI,CAAA1D,KAAK,CACb,4FAA4F,CAC7F,CACH,CAEA,GAAM,CAAA2D,YAAY,CAAGjI,KAAK,CAACkI,WAAW,CACnC,SAAApB,KAAsD,QACrD,CAAAA,KAAK,CAAC5C,IAAI,GAAKd,SAAS,EAAI0D,KAAK,CAAC5C,IAAI,GAAKgD,MAAM,CAAChD,IAAI,GACxD,CAACgD,MAAM,CAAChD,IAAI,CAAC,CACd,CAED,GAAM,CAAAiE,kBAAkB,CAAGnI,KAAK,CAACkI,WAAW,CACzC,SAAApB,KAAkE,QACjE,CAAAA,KAAK,GAAK1D,SAAS,EAAI0D,KAAK,CAACsB,KAAK,GAAK,KAAK,EAAIH,YAAY,CAACnB,KAAK,CAAC,GACrE,CAACmB,YAAY,CAAC,CACf,CAED,IAAAI,iBAAA,CAOIrI,KAAK,CAACqG,UAAU,CAACiC,+BAAsB,CAAC,CANnCC,YAAY,CAAAF,iBAAA,CAAnBvB,KAAK,CACK0B,eAAe,CAAAH,iBAAA,CAAzBI,QAAQ,CACEC,eAAe,CAAAL,iBAAA,CAAzBM,QAAQ,CACRC,MAAM,CAAAP,iBAAA,CAANO,MAAM,CACNC,MAAM,CAAAR,iBAAA,CAANQ,MAAM,CACNC,YAAA,CAAAT,iBAAA,CAAAS,YAAA,CAGF,GAAM,CAAAC,cAAc,CAAG/I,KAAK,CAAC2G,MAAM,CAAC,KAAK,CAAC,CAE1C,GAAM,CAAAqC,YAAY,CAAGhJ,KAAK,CAACkI,WAAW,CAAC,UAAM,CAC3CQ,eAAe,CAACtF,SAAS,CAAC,CAC1B2F,cAAc,CAAC5B,OAAO,CAAG,IAAI,CAC/B,CAAC,CAAE,CAACuB,eAAe,CAAC,CAAC,CAErB,GAAM,CAAAC,QAAQ,CAAG3I,KAAK,CAACkI,WAAW,CAC/B,SAAApB,KAAkE,CAAK,CACtE,GAAIiC,cAAc,CAAC5B,OAAO,CAAE,CAI1B,OACF,CACAuB,eAAe,CAAC5B,KAAK,CAAC,CACxB,CAAC,CACD,CAAC4B,eAAe,CAAC,CAClB,CAED,IAAAO,cAAA,CAAuDjJ,KAAK,CAACkJ,OAAO,CAAC,UAAM,KAAAC,cAAA,CACzE,GAAM,CAAAC,qBAAqB,CAAG9B,UAAU,CAAC1D,MAAM,CAE7C,SAACC,GAAG,CAAE4D,IAAI,CAAK,KAAA4B,aAAA,CAAAC,cAAA,CAAAC,cAAA,CACf,GAAQ,CAAA3B,aAAA,CAAkBP,OAAO,CAACI,IAAI,CAAC,CAACrD,KAAK,CAArCwD,aAAA,CACR,GAAM,CAAA4B,uBAAuB,CAC3B,CAAApD,KAAK,SAALA,KAAK,kBAAAiD,aAAA,CAALjD,KAAK,CAAES,MAAM,UAAAwC,aAAA,iBAAbA,aAAA,CAAevC,KAAK,GAAI,IAAI,EAC5B,CAAAV,KAAK,SAALA,KAAK,kBAAAkD,cAAA,CAALlD,KAAK,CAAES,MAAM,UAAAyC,cAAA,iBAAbA,cAAA,CAAevC,OAAO,IAAK,KAAK,EAChC,CAAAX,KAAK,SAALA,KAAK,kBAAAmD,cAAA,CAALnD,KAAK,CAAES,MAAM,UAAA0C,cAAA,iBAAbA,cAAA,CAAevC,MAAM,IAAKS,IAAI,CAC1BrB,KAAK,CAACS,MAAM,CAACA,MAAM,CACnBzD,SAAS,CAEfS,GAAG,CAAC4D,IAAI,CAAC,CACPG,aAAa,GAAKxE,SAAS,EAAIoG,uBAAuB,GAAKpG,SAAS,IAAAwD,SAAA,CAAA1E,OAAA,KAE3D0F,aAAa,CACb4B,uBAAA,EAELpG,SAAS,CAEf,MAAO,CAAAS,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAMN,GACE,CAAC0E,YAAY,GAAKnF,SAAS,EAAI,CAAC6E,YAAY,CAACM,YAAY,CAAC,GAC1D,CAAAnC,KAAK,SAALA,KAAK,kBAAA+C,cAAA,CAAL/C,KAAK,CAAES,MAAM,UAAAsC,cAAA,iBAAbA,cAAA,CAAerC,KAAK,GAAI,IAAI,CAC5B,CACA,MAAO,CACLI,MAAM,CAACuC,eAAe,CAAC,CACrBnC,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAEyB,qBAAqB,CACrCvB,cAAA,CAAAA,cACF,CAAC,CAAC,CACF,IAAI,CACL,CACH,CAAC,IAAM,KAAA6B,IAAA,KAAAC,cAAA,CACL,MAAO,CACLzC,MAAM,CAAC0C,kBAAkB,EAAAF,IAAA,CACvBtD,KAAK,SAALA,KAAK,kBAAAuD,cAAA,CAALvD,KAAK,CAAES,MAAM,UAAA8C,cAAA,iBAAbA,cAAA,CAAe7C,KAAK,QAAA4C,IAAA,CAAKnB,YAAoC,CAC7D,CACEjB,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAEyB,qBAAqB,CACrCvB,cAAA,CAAAA,cACF,CAAC,CACF,CACD,KAAK,CACN,CACH,CAOF,CAAC,CAAE,CAACU,YAAY,CAAErB,MAAM,CAAEe,YAAY,CAAC,CAAC,CAAA4B,eAAA,IAAAC,eAAA,CAAA5H,OAAA,EAAA+G,cAAA,IA1DjCc,gBAAgB,CAAAF,eAAA,IAAEG,0BAA0B,CAAAH,eAAA,IA4DnD,GAAM,CAAAI,uBAAuB,CAAGjK,KAAK,CAAC2G,MAAM,CAACa,YAAY,CAAC,CAE1DxH,KAAK,CAACkK,SAAS,CAAC,UAAM,CACpBD,uBAAuB,CAAC9C,OAAO,CAAGK,YAAY,CAChD,CAAC,CAAC,CAEF,GAAM,CAAA2C,oBAAoB,CAAGF,uBAAuB,CAAC9C,OAAO,CAE5D,GAAI,CAAAL,KAAK,CAIPqB,kBAAkB,CAACI,YAAY,CAAC,CAC3BA,YAAY,CACZwB,gBAA0B,CAEjC,GAAI,CAAAK,SAAgB,CAAGtD,KAAK,CAE5B,GACE,CAAC,GAAAuD,qBAAY,EAACvD,KAAK,CAACQ,UAAU,CAAEA,UAAU,CAAC,EAC3C,CAAC,GAAAgD,sBAAa,EAAC9C,YAAY,CAAE2C,oBAAoB,CAAC,CAClD,CAEAC,SAAS,CAAGlD,MAAM,CAACqD,2BAA2B,CAACzD,KAAK,CAAE,CACpDQ,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAc,CAAdA,cAAc,CACd2C,eAAe,CAAEhI,MAAM,CAACmC,IAAI,CAAC6C,YAAY,CAAC,CAACiD,MAAM,CAC9C,SAAAhG,IAAI,QACH,CAAA0F,oBAAoB,CAACtH,cAAc,CAAC4B,IAAI,CAAC,EACzC+C,YAAY,CAAC/C,IAAI,CAAC,GAAK0F,oBAAoB,CAAC1F,IAAI,CAAC,GAEvD,CAAC,CAAC,CACJ,CAEA,GAAM,CAAAiG,uBAAuB,CAAG1K,KAAK,CAAC2G,MAAM,CAACP,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAES,MAAM,CAAC,CAE3D7G,KAAK,CAACkK,SAAS,CAAC,UAAM,CACpBQ,uBAAuB,CAACvD,OAAO,CAAGf,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAES,MAAM,CACjD,CAAC,CAAE,CAACT,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAES,MAAM,CAAC,CAAC,CAEnB,GAAIT,KAAK,SAALA,KAAK,WAALA,KAAK,CAAES,MAAM,CAAE,CACjB,GAAM,CAAA8D,cAAc,CAAGD,uBAAuB,CAACvD,OAAO,CAEtD,GAAI,CAAAyD,MAAwC,CAE5C,GACE,MAAO,CAAAxE,KAAK,CAACS,MAAM,CAACC,KAAK,GAAK,QAAQ,EACtCV,KAAK,CAACS,MAAM,CAACC,KAAK,EAAI,IAAI,EAC1BV,KAAK,CAACS,MAAM,GAAK8D,cAAc,CAC/B,CAEAC,MAAM,CAAGC,sBAAa,CAACC,KAAK,CAAC1E,KAAK,CAACS,MAAM,CAACC,KAAK,CAAC,CAClD,CAAC,IAAM,IACL,MAAO,CAAAV,KAAK,CAACS,MAAM,CAACG,MAAM,GAAK,QAAQ,GACrCZ,KAAK,CAACS,MAAM,CAACE,OAAO,GAAK,KAAK,EAAIiD,0BAA0B,EAC5D5D,KAAK,CAACS,MAAM,GAAK8D,cAAc,CAAC,CAClC,CAEAC,MAAM,CAAGC,sBAAa,CAACE,QAAQ,CAAC,CAC9BtG,IAAI,CAAE2B,KAAK,CAACS,MAAM,CAACG,MAAM,CACzBH,MAAM,CAAET,KAAK,CAACS,MAAM,CAACA,MAAM,CAC3BmE,IAAI,CAAE5E,KAAK,CAACS,MAAM,CAACmE,IACrB,CAAC,CAAC,CACJ,CAGA,GAAM,CAAAC,YAAY,CAAGL,MAAM,CACvB1D,MAAM,CAACgE,iBAAiB,CAACd,SAAS,CAAEQ,MAAM,CAAE,CAC1CtD,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAA,CAAAA,cACF,CAAC,CAAC,CACF,IAAI,CAERuC,SAAS,CACPa,YAAY,GAAK,IAAI,CACjB/D,MAAM,CAAC0C,kBAAkB,CAACqB,YAAY,CAAE,CACtC3D,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAA,CAAAA,cACF,CAAC,CAAC,CACFuC,SAAS,CACjB,CAEA,GAAM,CAAAe,YAAY,CAAGrE,KAAK,GAAKsD,SAAS,CAExC,GAAAgB,0BAAiB,EAAC,UAAM,CACtB,GAAID,YAAY,CAAE,CAEhBxC,QAAQ,CAACyB,SAAS,CAAC,CACrB,CACF,CAAC,CAAC,CAKFtD,KAAK,CAAGsD,SAAS,CAEjBpK,KAAK,CAACkK,SAAS,CAAC,UAAM,CACpBtB,MAAM,CAAC1C,YAAY,CAAC,CAEpB,GAAI,CAAC4C,YAAY,EAAE,CAAE,CAInBH,QAAQ,CAACyB,SAAS,CAAC,CACrB,CAEA,MAAO,WAAM,CAKXiB,UAAU,CAAC,UAAM,CACf,GAAI7C,eAAe,EAAE,GAAKpF,SAAS,EAAIyF,MAAM,EAAE,GAAK3C,YAAY,CAAE,CAChE8C,YAAY,EAAE,CAChB,CACF,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAEH,CAAC,CAAE,EAAE,CAAC,CAKN,GAAM,CAAAsC,mBAAmB,CAAGtL,KAAK,CAAC2G,MAAM,EAAS,CACjD2E,mBAAmB,CAACnE,OAAO,CAAG4C,gBAAgB,CAE9C,GAAM,CAAAtB,QAAQ,CAAGzI,KAAK,CAACkI,WAAW,CAAC,UAAa,CAC9C,GAAM,CAAAK,YAAY,CAAGC,eAAe,EAAE,CAEtC,MAAO,CAAAL,kBAAkB,CAACI,YAAY,CAAC,CAClCA,YAAY,CACZ+C,mBAAmB,CAACnE,OAAiB,CAC5C,CAAC,CAAE,CAACqB,eAAe,CAAEL,kBAAkB,CAAC,CAAC,CAEzC,GAAM,CAAAoD,OAAO,CAAG,GAAAC,wBAAe,EAAuB,SAAA3J,CAAC,CAAK,KAAA4J,KAAA,CAC1D,GAAI,CAAAnE,UAAU,CAAG,EAAE,CAEnB,GAAI,CAAAlB,KAAgC,CAEpC,GAAIvE,CAAC,CAAC6J,MAAM,CAAE,KAAAC,MAAA,CACZvF,KAAK,CAAGU,KAAK,CAAC8E,MAAM,CAACC,IAAI,CAAE,SAAAzF,KAAK,QAAK,CAAAA,KAAK,CAACjD,GAAG,GAAKtB,CAAC,CAAC6J,MAAM,GAAC,CAE5D,IAAAC,MAAA,CAAIvF,KAAK,UAAAuF,MAAA,WAALA,MAAA,CAAOlH,IAAI,CAAE,CACf6C,UAAU,CAAC5C,IAAI,CAAC0B,KAAK,CAAC3B,IAAI,CAAC,CAC7B,CACF,CAAC,IAAM,CACL2B,KAAK,CAAGU,KAAK,CAAC8E,MAAM,CAAC9E,KAAK,CAACgF,KAAK,CAAC,CACjCxE,UAAU,CAAC5C,IAAI,CAAAK,KAAA,CAAfuC,UAAU,IAAAtC,mBAAA,CAAA9C,OAAA,EACLM,MAAM,CAACmC,IAAI,CAAC0C,OAAO,CAAC,CAACoD,MAAM,CAAE,SAAAhG,IAAI,MAAAsH,OAAA,OAAK,EAAAA,OAAA,CAAA3F,KAAK,UAAA2F,OAAA,iBAALA,OAAA,CAAOtH,IAAI,IAAKA,IAAI,GAAC,EAC/D,CACH,CAEA,GAAI2B,KAAK,EAAI,IAAI,CAAE,CACjB,OACF,CAEA,GAAM,CAAA4F,UAAU,CAAGC,WAAW,CAAC7F,KAAK,CAACjD,GAAG,CAAC,CAAC6I,UAAU,CAEpD,GAAM,CAAAE,SAAS,CAAI,CAAAT,KAAA,GAAE,EAClBxG,MAAM,CAAAF,KAAA,CAAA0G,KAAA,IAAAzG,mBAAA,CAAA9C,OAAA,EAEF,CACDqE,eAAe,EAAAtB,MAAA,IAAAD,mBAAA,CAAA9C,OAAA,EACZoF,UAAU,CAACC,GAAG,CAAE,SAAA9C,IAAI,CAAK,CAC1B,GAAQ,CAAAyH,SAAA,CAAc7E,OAAO,CAAC5C,IAAI,CAAC,CAACL,KAAK,CAAjC8H,SAAA,CACR,MAAO,CAAAA,SAAS,CAClB,CAAC,CAAC,GACF3E,GAAG,CAAE,SAAA2E,SAAS,CAAK,CACnB,GAAM,CAAA3E,GAAG,CACP,MAAO,CAAA2E,SAAS,GAAK,UAAU,CAC3BA,SAAS,CAAC,CAAE9F,KAAK,CAAEA,KAAY,CAAE4F,UAAA,CAAAA,UAAW,CAAC,CAAC,CAC9CE,SAAS,CAEf,MAAO,CAAA3E,GAAG,CACN/E,MAAM,CAACmC,IAAI,CAAC4C,GAAG,CAAC,CACbkD,MAAM,CAAE,SAAAvG,IAAI,QAAK,CAAAA,IAAI,GAAKrC,CAAC,CAACqC,IAAI,GAAC,CACjCqD,GAAG,CAAE,SAAArD,IAAI,QAAK,CAAAqD,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAGrD,IAAI,CAAC,GAAC,CAC7Bd,SAAS,CACf,CAAC,CAAC,GAIHqH,MAAM,CAAC,SAAC0B,EAAE,CAAEpJ,CAAC,CAAEqJ,IAAI,QAAK,CAAAD,EAAE,EAAIC,IAAI,CAACC,WAAW,CAACF,EAAE,CAAC,GAAKpJ,CAAC,GAAC,CAE5DmJ,SAAS,CAAC3G,OAAO,CAAE,SAAA+G,QAAQ,QAAK,CAAAA,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAGzK,CAAC,CAAC,GAAC,CAChD,CAAC,CAAC,CAEF,GAAA0K,uBAAc,EAAC,CAAEzF,KAAK,CAALA,KAAK,CAAEyE,OAAA,CAAAA,OAAQ,CAAC,CAAC,CAElCvL,KAAK,CAACkK,SAAS,CAAC,UAAM,CACpBqB,OAAO,CAACiB,IAAI,CAAC,CAAEtI,IAAI,CAAE,OAAO,CAAEuI,IAAI,CAAE,CAAE3F,KAAA,CAAAA,KAAM,CAAE,CAAC,CAAC,CAClD,CAAC,CAAE,CAACyE,OAAO,CAAEzE,KAAK,CAAC,CAAC,CAEpB,IAAA4F,kBAAA,CAAmD,GAAAC,2BAAiB,GAAE,CAAnDC,cAAc,CAAAF,kBAAA,CAAzBR,SAAS,CAAkBW,WAAA,CAAAH,kBAAA,CAAAG,WAAA,CAEnC,IAAAC,qBAAA,CAA6C,GAAAC,+BAAsB,GAAE,CAA7DC,cAAc,CAAAF,qBAAA,CAAdE,cAAc,CAAEC,gBAAA,CAAAH,qBAAA,CAAAG,gBAAA,CAExB,GAAM,CAAAC,QAAQ,CAAG,GAAAC,oBAAW,EAAC,CAC3BjG,MAAM,CAANA,MAAM,CACNuB,QAAQ,CAARA,QAAQ,CACRE,QAAQ,CAARA,QAAQ,CACRxF,GAAG,CAAEiD,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEjD,GAAG,CACfiK,eAAe,CAAER,cAAc,CAAChC,MAAM,CACtCyC,qBAAqB,CAAEL,cAAc,CAACM,YAAY,CAClDC,mBAAmB,CAAE,CACnBjG,UAAU,CAAVA,UAAU,CACVK,cAAc,CAAdA,cAAc,CACdE,cAAA,CAAAA,cACF,CAAC,CACD0D,OAAA,CAAAA,OACF,CAAC,CAAC,CAEF,GAAM,CAAAiC,YAAY,CAAG,GAAAC,wBAAe,EAAC,CACnCvG,MAAM,CAANA,MAAM,CACN/D,GAAG,CAAEiD,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEjD,GAAG,CACfsF,QAAQ,CAARA,QAAQ,CACRE,QAAA,CAAAA,QACF,CAAC,CAAC,CAEF,GAAM,CAAAqD,UAAU,CAAG,GAAA0B,6BAAoB,EAKrC,CACAC,EAAE,CAAE/I,OAAO,CAAC+I,EAAE,CACdT,QAAQ,CAARA,QAAQ,CACRzE,QAAQ,CAARA,QAAQ,CACR8C,OAAO,CAAPA,OAAO,CACPrE,MAAA,CAAAA,MACF,CAAC,CAAC,CAEF,GAAA0G,2CAAkC,EAAC,CACjC5B,UAAU,CAAVA,UAAU,CACV6B,gBAAgB,CAAEjB,cAAc,CAACkB,KACnC,CAAC,CAAC,CAEF,GAAAC,sBAAa,EAAC,CACZtF,QAAQ,CAARA,QAAQ,CACRuF,iBAAiB,CAAEhB,cAAc,CAACvE,QACpC,CAAC,CAAC,CAEF,GAAM,CAAAwD,WAAW,CAAG,GAAAgC,uBAAc,EAKhC,CACAnH,KAAK,CAALA,KAAK,CACLO,OAAO,CAAPA,OAAO,CACP2E,UAAU,CAAVA,UAAU,CACV9G,aAAa,CAAEN,OAAO,CAACM,aAAa,CACpCgJ,oBAAoB,CAAEtJ,OAAO,CAACsJ,oBAAoB,CAClDhB,QAAQ,CAARA,QAAQ,CACRzE,QAAQ,CAARA,QAAQ,CACRE,QAAQ,CAARA,QAAQ,CACR6E,YAAY,CAAZA,YAAY,CACZX,WAAW,CAAXA,WAAW,CACXI,gBAAgB,CAAhBA,gBAAgB,CAChB/F,MAAM,CAANA,MAAM,CAENqE,OAAA,CAAAA,OACF,CAAC,CAAC,CAEF,GAAA4C,yBAAgB,EAAC,CACfrH,KAAK,CAALA,KAAK,CACLkF,UAAU,CAAVA,UAAU,CACVC,WAAA,CAAAA,WACF,CAAC,CAAC,CAEF,GAAM,CAAAmC,iBAAiB,CAAG,GAAAC,qBAAY,EAAE,SAAA/K,QAAyB,QAC/D,CAAAtD,KAAA,CAAAsO,aAAA,CAACC,iCAAwB,CAACC,QAAQ,EAACC,KAAK,CAAEzC,UAAW,EACnDhM,KAAA,CAAAsO,aAAA,CAACI,8BAAqB,MAAEpL,QAAQ,CAAyB,CAE5D,GAAC,CAEF,MAAO,CACLwD,KAAK,CAALA,KAAK,CACLkF,UAAU,CAAVA,UAAU,CACVC,WAAW,CAAXA,WAAW,CACXmC,iBAAA,CAAAA,iBACF,CAAC,CACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}