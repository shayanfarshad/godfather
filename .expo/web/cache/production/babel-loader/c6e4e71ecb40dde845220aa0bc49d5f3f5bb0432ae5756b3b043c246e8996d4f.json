{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _get3=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _hammerjs=_interopRequireDefault(require(\"@egjs/hammerjs\"));var _DiscreteGestureHandler=_interopRequireDefault(require(\"./DiscreteGestureHandler\"));var _utils=require(\"./utils\");var _excluded=[\"shouldCancelWhenOutside\",\"maxDeltaX\",\"maxDeltaY\",\"numberOfTaps\",\"minDurationMs\",\"maxDelayMs\",\"maxDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var TapGestureHandler=function(_DiscreteGestureHandl){(0,_inherits2.default)(TapGestureHandler,_DiscreteGestureHandl);var _super=_createSuper(TapGestureHandler);function TapGestureHandler(){var _this;(0,_classCallCheck2.default)(this,TapGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty((0,_assertThisInitialized2.default)(_this),\"_shouldFireEndEvent\",null);_defineProperty((0,_assertThisInitialized2.default)(_this),\"_timer\",void 0);_defineProperty((0,_assertThisInitialized2.default)(_this),\"_multiTapTimer\",void 0);_defineProperty((0,_assertThisInitialized2.default)(_this),\"onSuccessfulTap\",function(ev){if(_this._getPendingGestures().length){_this._shouldFireEndEvent=ev;return;}if(ev.eventType===_hammerjs.default.INPUT_END){_this.sendEvent((0,_extends2.default)({},ev,{eventType:_hammerjs.default.INPUT_MOVE}));}_this.sendEvent((0,_extends2.default)({},ev,{isFinal:true}));_this.onGestureEnded(ev);});return _this;}(0,_createClass2.default)(TapGestureHandler,[{key:\"name\",get:function get(){return'tap';}},{key:\"NativeGestureClass\",get:function get(){return _hammerjs.default.Tap;}},{key:\"maxDelayMs\",get:function get(){return(0,_utils.isnan)(this.config.maxDelayMs)?300:this.config.maxDelayMs;}},{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){if(this.isGestureRunning){this.cancelEvent(inputData);}}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){if(this.isGestureRunning){this.onSuccessfulTap(ev);}}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this2=this;(0,_get3.default)((0,_getPrototypeOf2.default)(TapGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(!this.hasGestureFailed&&!this.isGestureRunning&&!ev.isFinal){var gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){clearTimeout(this._multiTapTimer);this.onStart(ev);this.sendEvent(ev);}}if(ev.isFinal&&ev.maxPointers>1){setTimeout(function(){if(_this2.isGestureRunning){_this2.cancelEvent(ev);}});}if(this.hasGestureFailed){return;}if(ev.isFinal){if(ev.maxPointers>1){setTimeout(function(){if(_this2.isGestureRunning){_this2.cancelEvent(ev);}});}clearTimeout(this._timer);this._timer=setTimeout(function(){_this2.hasGestureFailed=true;_this2.cancelEvent(ev);},this.maxDelayMs);}else if(!this.hasGestureFailed&&!this.isGestureRunning){var _gesture2=this.hammer.get(this.name);if(_gesture2.options.enable(_gesture2,ev)){clearTimeout(this._multiTapTimer);this.onStart(ev);this.sendEvent(ev);}}}},{key:\"getHammerConfig\",value:function getHammerConfig(){return(0,_extends2.default)({},(0,_get3.default)((0,_getPrototypeOf2.default)(TapGestureHandler.prototype),\"getHammerConfig\",this).call(this),{event:this.name,taps:(0,_utils.isnan)(this.config.numberOfTaps)?1:this.config.numberOfTaps,interval:this.maxDelayMs,time:(0,_utils.isnan)(this.config.maxDurationMs)||this.config.maxDurationMs==null?250:this.config.maxDurationMs});}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref){var _ref$shouldCancelWhen=_ref.shouldCancelWhenOutside,shouldCancelWhenOutside=_ref$shouldCancelWhen===void 0?true:_ref$shouldCancelWhen,_ref$maxDeltaX=_ref.maxDeltaX,maxDeltaX=_ref$maxDeltaX===void 0?Number.NaN:_ref$maxDeltaX,_ref$maxDeltaY=_ref.maxDeltaY,maxDeltaY=_ref$maxDeltaY===void 0?Number.NaN:_ref$maxDeltaY,_ref$numberOfTaps=_ref.numberOfTaps,numberOfTaps=_ref$numberOfTaps===void 0?1:_ref$numberOfTaps,_ref$minDurationMs=_ref.minDurationMs,minDurationMs=_ref$minDurationMs===void 0?525:_ref$minDurationMs,_ref$maxDelayMs=_ref.maxDelayMs,maxDelayMs=_ref$maxDelayMs===void 0?Number.NaN:_ref$maxDelayMs,_ref$maxDurationMs=_ref.maxDurationMs,maxDurationMs=_ref$maxDurationMs===void 0?Number.NaN:_ref$maxDurationMs,_ref$maxDist=_ref.maxDist,maxDist=_ref$maxDist===void 0?2:_ref$maxDist,_ref$minPointers=_ref.minPointers,minPointers=_ref$minPointers===void 0?1:_ref$minPointers,_ref$maxPointers=_ref.maxPointers,maxPointers=_ref$maxPointers===void 0?1:_ref$maxPointers,props=(0,_objectWithoutProperties2.default)(_ref,_excluded);return(0,_get3.default)((0,_getPrototypeOf2.default)(TapGestureHandler.prototype),\"updateGestureConfig\",this).call(this,(0,_extends2.default)({shouldCancelWhenOutside:shouldCancelWhenOutside,numberOfTaps:numberOfTaps,maxDeltaX:maxDeltaX,maxDeltaY:maxDeltaY,minDurationMs:minDurationMs,maxDelayMs:maxDelayMs,maxDist:maxDist,minPointers:minPointers,maxPointers:maxPointers},props));}},{key:\"onGestureEnded\",value:function onGestureEnded(){var _get2;clearTimeout(this._timer);for(var _len2=arguments.length,props=new Array(_len2),_key2=0;_key2<_len2;_key2++){props[_key2]=arguments[_key2];}(_get2=(0,_get3.default)((0,_getPrototypeOf2.default)(TapGestureHandler.prototype),\"onGestureEnded\",this)).call.apply(_get2,[this].concat(props));}},{key:\"onWaitingEnded\",value:function onWaitingEnded(_gesture){if(this._shouldFireEndEvent){this.onSuccessfulTap(this._shouldFireEndEvent);this._shouldFireEndEvent=null;}}}]);return TapGestureHandler;}(_DiscreteGestureHandler.default);var _default=exports.default=TapGestureHandler;","map":{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_DiscreteGestureHandler","_utils","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","t","Boolean","prototype","valueOf","call","TapGestureHandler","_DiscreteGestureHandl","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","ev","_getPendingGestures","_shouldFireEndEvent","eventType","Hammer","INPUT_END","sendEvent","_extends2","INPUT_MOVE","isFinal","onGestureEnded","_createClass2","key","get","Tap","isnan","config","maxDelayMs","value","simulateCancelEvent","inputData","isGestureRunning","cancelEvent","onGestureActivated","onSuccessfulTap","onRawEvent","_this2","_get3","hasGestureFailed","gesture","hammer","name","options","enable","clearTimeout","_multiTapTimer","onStart","maxPointers","setTimeout","_timer","getHammerConfig","event","taps","numberOfTaps","interval","time","maxDurationMs","updateGestureConfig","_ref","_ref$shouldCancelWhen","shouldCancelWhenOutside","_ref$maxDeltaX","maxDeltaX","Number","NaN","_ref$maxDeltaY","maxDeltaY","_ref$numberOfTaps","_ref$minDurationMs","minDurationMs","_ref$maxDelayMs","_ref$maxDurationMs","_ref$maxDist","maxDist","_ref$minPointers","minPointers","_ref$maxPointers","props","_objectWithoutProperties2","_get2","_len2","_key2","onWaitingEnded","_gesture","DiscreteGestureHandler","_default","exports"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/web_hammer/TapGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport { isnan } from './utils';\n\nclass TapGestureHandler extends DiscreteGestureHandler {\n  private _shouldFireEndEvent: HammerInputExt | null = null;\n  private _timer: any;\n  private _multiTapTimer: any; // TODO unused?\n  get name() {\n    return 'tap';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Tap;\n  }\n\n  get maxDelayMs() {\n    // @ts-ignore TODO(TS) trace down config\n    return isnan(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n  }\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    if (this.isGestureRunning) {\n      this.cancelEvent(inputData);\n    }\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    if (this.isGestureRunning) {\n      this.onSuccessfulTap(ev);\n    }\n  }\n\n  onSuccessfulTap = (ev: HammerInputExt) => {\n    if (this._getPendingGestures().length) {\n      this._shouldFireEndEvent = ev;\n      return;\n    }\n    if (ev.eventType === Hammer.INPUT_END) {\n      this.sendEvent({ ...ev, eventType: Hammer.INPUT_MOVE });\n    }\n    // When handler gets activated it will turn into State.END immediately.\n    this.sendEvent({ ...ev, isFinal: true });\n    this.onGestureEnded(ev);\n  };\n\n  onRawEvent(ev: HammerInput) {\n    super.onRawEvent(ev);\n\n    // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n    if (\n      !this.hasGestureFailed &&\n      !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal\n    ) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore TODO(TS) trace down config\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n    if (ev.isFinal && ev.maxPointers > 1) {\n      setTimeout(() => {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    }\n\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      // Handle case where one finger presses slightly\n      // after the first finger on a multi-tap event\n      if (ev.maxPointers > 1) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n\n      // Clear last timer\n      clearTimeout(this._timer);\n      // Create time out for multi-taps.\n      this._timer = setTimeout(() => {\n        this.hasGestureFailed = true;\n        this.cancelEvent(ev);\n      }, this.maxDelayMs);\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore TODO(TS) trace down config\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      event: this.name,\n      // @ts-ignore TODO(TS) trace down config\n      taps: isnan(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n      interval: this.maxDelayMs,\n      time:\n        // @ts-ignore TODO(TS) trace down config\n        isnan(this.config.maxDurationMs) || this.config.maxDurationMs == null\n          ? 250\n          : // @ts-ignore TODO(TS) trace down config\n            this.config.maxDurationMs,\n    };\n  }\n\n  updateGestureConfig({\n    shouldCancelWhenOutside = true,\n    maxDeltaX = Number.NaN,\n    maxDeltaY = Number.NaN,\n    numberOfTaps = 1,\n    minDurationMs = 525,\n    maxDelayMs = Number.NaN,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n    maxDurationMs = Number.NaN,\n    maxDist = 2,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldCancelWhenOutside,\n      numberOfTaps,\n      maxDeltaX,\n      maxDeltaY,\n      minDurationMs,\n      maxDelayMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  onGestureEnded(...props: any) {\n    clearTimeout(this._timer);\n    // @ts-ignore TODO(TS) check how onGestureEnded works\n    super.onGestureEnded(...props);\n  }\n\n  onWaitingEnded(_gesture: any) {\n    if (this._shouldFireEndEvent) {\n      this.onSuccessfulTap(this._shouldFireEndEvent);\n      this._shouldFireEndEvent = null;\n    }\n  }\n}\nexport default TapGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}