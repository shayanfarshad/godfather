{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useAnimatedScrollHandler=useAnimatedScrollHandler;var _Hooks=require(\"./Hooks\");var _worklet_16221043853259_init_data={code:\"function anonymous(event){const{scrollHandlers,context}=this._closure;const{onScroll:onScroll,onBeginDrag:onBeginDrag,onEndDrag:onEndDrag,onMomentumBegin:onMomentumBegin,onMomentumEnd:onMomentumEnd}=scrollHandlers;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}}\",location:\"node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedScrollHandler.js\"};function useAnimatedScrollHandler(handlers,dependencies){var scrollHandlers=typeof handlers==='function'?{onScroll:handlers}:handlers;var _useHandler=(0,_Hooks.useHandler)(scrollHandlers,dependencies),context=_useHandler.context,doDependenciesDiffer=_useHandler.doDependenciesDiffer;var subscribeForEvents=['onScroll'];if(scrollHandlers.onBeginDrag!==undefined){subscribeForEvents.push('onScrollBeginDrag');}if(scrollHandlers.onEndDrag!==undefined){subscribeForEvents.push('onScrollEndDrag');}if(scrollHandlers.onMomentumBegin!==undefined){subscribeForEvents.push('onMomentumScrollBegin');}if(scrollHandlers.onMomentumEnd!==undefined){subscribeForEvents.push('onMomentumScrollEnd');}return(0,_Hooks.useEvent)(function(){var _f=function _f(event){var onScroll=scrollHandlers.onScroll,onBeginDrag=scrollHandlers.onBeginDrag,onEndDrag=scrollHandlers.onEndDrag,onMomentumBegin=scrollHandlers.onMomentumBegin,onMomentumEnd=scrollHandlers.onMomentumEnd;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}};_f._closure={scrollHandlers:scrollHandlers,context:context};_f.__initData=_worklet_16221043853259_init_data;_f.__workletHash=16221043853259;return _f;}(),subscribeForEvents,doDependenciesDiffer);}","map":{"version":3,"names":["_Hooks","require","_worklet_16221043853259_init_data","code","location","useAnimatedScrollHandler","handlers","dependencies","scrollHandlers","onScroll","_useHandler","useHandler","context","doDependenciesDiffer","subscribeForEvents","onBeginDrag","undefined","push","onEndDrag","onMomentumBegin","onMomentumEnd","useEvent","_f","event","eventName","endsWith","_closure","__initData","__workletHash"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedScrollHandler.ts"],"sourcesContent":["import { RefObject } from 'react';\nimport { NativeScrollEvent } from 'react-native';\nimport { Context, NativeEvent, WorkletFunction } from '../commonTypes';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\nexport interface ScrollHandler<TContext extends Context>\n  extends WorkletFunction {\n  (event: NativeScrollEvent, context?: TContext): void;\n}\n\nexport interface ScrollEvent\n  extends NativeScrollEvent,\n    NativeEvent<ScrollEvent> {\n  eventName: string;\n}\nexport interface ScrollHandlers<TContext extends Context> {\n  [key: string]: ScrollHandler<TContext> | undefined;\n  onScroll?: ScrollHandler<TContext>;\n  onBeginDrag?: ScrollHandler<TContext>;\n  onEndDrag?: ScrollHandler<TContext>;\n  onMomentumBegin?: ScrollHandler<TContext>;\n  onMomentumEnd?: ScrollHandler<TContext>;\n}\n\nexport function useAnimatedScrollHandler<TContext extends Context>(\n  handlers: ScrollHandlers<TContext> | ScrollHandler<TContext>,\n  dependencies?: DependencyList\n): RefObject<WorkletEventHandler<ScrollEvent>> {\n  // case when handlers is a function\n  const scrollHandlers: ScrollHandlers<TContext> =\n    typeof handlers === 'function' ? { onScroll: handlers } : handlers;\n  const { context, doDependenciesDiffer } = useHandler<ScrollEvent, TContext>(\n    scrollHandlers,\n    dependencies\n  );\n\n  // build event subscription array\n  const subscribeForEvents = ['onScroll'];\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n\n  return useEvent<ScrollEvent>(\n    (event: ScrollEvent) => {\n      'worklet';\n      const {\n        onScroll,\n        onBeginDrag,\n        onEndDrag,\n        onMomentumBegin,\n        onMomentumEnd,\n      } = scrollHandlers;\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (\n        onMomentumBegin &&\n        event.eventName.endsWith('onMomentumScrollBegin')\n      ) {\n        onMomentumBegin(event, context);\n      } else if (\n        onMomentumEnd &&\n        event.eventName.endsWith('onMomentumScrollEnd')\n      ) {\n        onMomentumEnd(event, context);\n      }\n    },\n    subscribeForEvents,\n    doDependenciesDiffer\n  );\n}\n"],"mappings":"mHAKA,IAAAA,MAAA,CAAAC,OAAA,YAA8C,IAAAC,iCAAA,EAAAC,IAAA,mrBAAAC,QAAA,iGAqBvC,QAAS,CAAAC,wBAAwBA,CACtCC,QAA4D,CAC5DC,YAA6B,CACgB,CAE7C,GAAM,CAAAC,cAAwC,CAC5C,MAAO,CAAAF,QAAQ,GAAK,UAAU,CAAG,CAAEG,QAAQ,CAAEH,QAAS,CAAC,CAAGA,QAAQ,CACpE,IAAAI,WAAA,CAA0C,GAAAC,iBAAU,EAClDH,cAAc,CACdD,YAAY,CACb,CAHOK,OAAO,CAAAF,WAAA,CAAPE,OAAO,CAAEC,oBAAA,CAAAH,WAAA,CAAAG,oBAAA,CAMjB,GAAM,CAAAC,kBAAkB,CAAG,CAAC,UAAU,CAAC,CACvC,GAAIN,cAAc,CAACO,WAAW,GAAKC,SAAS,CAAE,CAC5CF,kBAAkB,CAACG,IAAI,CAAC,mBAAmB,CAAC,CAC9C,CACA,GAAIT,cAAc,CAACU,SAAS,GAAKF,SAAS,CAAE,CAC1CF,kBAAkB,CAACG,IAAI,CAAC,iBAAiB,CAAC,CAC5C,CACA,GAAIT,cAAc,CAACW,eAAe,GAAKH,SAAS,CAAE,CAChDF,kBAAkB,CAACG,IAAI,CAAC,uBAAuB,CAAC,CAClD,CACA,GAAIT,cAAc,CAACY,aAAa,GAAKJ,SAAS,CAAE,CAC9CF,kBAAkB,CAACG,IAAI,CAAC,qBAAqB,CAAC,CAChD,CAEA,MAAO,GAAAI,eAAQ,iBAAAC,EAAA,UAAAA,GACZC,KAAkB,CAAK,CAEtB,GACE,CAAAd,QAAQ,CAKND,cAAc,CALhBC,QAAQ,CACRM,WAAW,CAITP,cAAc,CAJhBO,WAAW,CACXG,SAAS,CAGPV,cAAc,CAHhBU,SAAS,CACTC,eAAe,CAEbX,cAAc,CAFhBW,eAAe,CACfC,aAAA,CACEZ,cAAc,CADhBY,aAAA,CAEF,GAAIX,QAAQ,EAAIc,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE,CACpDhB,QAAQ,CAACc,KAAK,CAAEX,OAAO,CAAC,CAC1B,CAAC,IAAM,IAAIG,WAAW,EAAIQ,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAAE,CACvEV,WAAW,CAACQ,KAAK,CAAEX,OAAO,CAAC,CAC7B,CAAC,IAAM,IAAIM,SAAS,EAAIK,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAAE,CACnEP,SAAS,CAACK,KAAK,CAAEX,OAAO,CAAC,CAC3B,CAAC,IAAM,IACLO,eAAe,EACfI,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CACjD,CACAN,eAAe,CAACI,KAAK,CAAEX,OAAO,CAAC,CACjC,CAAC,IAAM,IACLQ,aAAa,EACbG,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,CAC/C,CACAL,aAAa,CAACG,KAAK,CAAEX,OAAO,CAAC,CAC/B,CACF,CAAC,CAAAU,EAAA,CAAAI,QAAA,EAAAlB,cAAA,CA/CKA,cAAO,CAAAI,OAAA,CAWMA,OAAK,EAAAU,EAAA,CAAAK,UAAA,CAAAzB,iCAAA,CAAAoB,EAAA,CAAAM,aAAA,uBAAAN,EAAA,KAqCxBR,kBAAkB,CAClBD,oBAAoB,CACrB,CACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}