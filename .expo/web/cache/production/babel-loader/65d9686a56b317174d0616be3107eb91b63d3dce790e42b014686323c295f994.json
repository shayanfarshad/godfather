{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _VelocityTracker=_interopRequireDefault(require(\"./VelocityTracker\"));function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var MAX_POINTERS=20;var PointerTracker=exports.default=function(){function PointerTracker(){(0,_classCallCheck2.default)(this,PointerTracker);_defineProperty(this,\"velocityTracker\",new _VelocityTracker.default());_defineProperty(this,\"trackedPointers\",new Map());_defineProperty(this,\"touchEventsIds\",new Map());_defineProperty(this,\"lastMovedPointerId\",void 0);_defineProperty(this,\"cachedAverages\",{x:0,y:0});this.lastMovedPointerId=NaN;for(var i=0;i<MAX_POINTERS;++i){this.touchEventsIds.set(i,NaN);}}(0,_createClass2.default)(PointerTracker,[{key:\"addToTracker\",value:function addToTracker(event){if(this.trackedPointers.has(event.pointerId)){return;}this.lastMovedPointerId=event.pointerId;var newElement={lastX:event.x,lastY:event.y,timeStamp:event.time,velocityX:0,velocityY:0};this.trackedPointers.set(event.pointerId,newElement);this.mapTouchEventId(event.pointerId);this.cachedAverages={x:this.getLastAvgX(),y:this.getLastAvgY()};}},{key:\"removeFromTracker\",value:function removeFromTracker(pointerId){this.trackedPointers.delete(pointerId);this.removeMappedTouchId(pointerId);}},{key:\"track\",value:function track(event){var element=this.trackedPointers.get(event.pointerId);if(!element){return;}this.lastMovedPointerId=event.pointerId;this.velocityTracker.add(event);var _this$velocityTracker=this.velocityTracker.getVelocity(),_this$velocityTracker2=(0,_slicedToArray2.default)(_this$velocityTracker,2),velocityX=_this$velocityTracker2[0],velocityY=_this$velocityTracker2[1];element.velocityX=velocityX;element.velocityY=velocityY;element.lastX=event.x;element.lastY=event.y;this.trackedPointers.set(event.pointerId,element);var avgX=this.getLastAvgX();var avgY=this.getLastAvgY();this.cachedAverages={x:avgX,y:avgY};}},{key:\"mapTouchEventId\",value:function mapTouchEventId(id){for(var _iterator=_createForOfIteratorHelperLoose(this.touchEventsIds),_step;!(_step=_iterator()).done;){var _ref=_step.value;var _ref2=(0,_slicedToArray2.default)(_ref,2);var mappedId=_ref2[0];var touchId=_ref2[1];if(isNaN(touchId)){this.touchEventsIds.set(mappedId,id);break;}}}},{key:\"removeMappedTouchId\",value:function removeMappedTouchId(id){var mappedId=this.getMappedTouchEventId(id);if(!isNaN(mappedId)){this.touchEventsIds.set(mappedId,NaN);}}},{key:\"getMappedTouchEventId\",value:function getMappedTouchEventId(touchEventId){for(var _iterator2=_createForOfIteratorHelperLoose(this.touchEventsIds.entries()),_step2;!(_step2=_iterator2()).done;){var _ref3=_step2.value;var _ref4=(0,_slicedToArray2.default)(_ref3,2);var key=_ref4[0];var value=_ref4[1];if(value===touchEventId){return key;}}return NaN;}},{key:\"getVelocityX\",value:function getVelocityX(pointerId){var _this$trackedPointers;return(_this$trackedPointers=this.trackedPointers.get(pointerId))===null||_this$trackedPointers===void 0?void 0:_this$trackedPointers.velocityX;}},{key:\"getVelocityY\",value:function getVelocityY(pointerId){var _this$trackedPointers2;return(_this$trackedPointers2=this.trackedPointers.get(pointerId))===null||_this$trackedPointers2===void 0?void 0:_this$trackedPointers2.velocityY;}},{key:\"getLastX\",value:function getLastX(pointerId){if(pointerId!==undefined){var _this$trackedPointers3;return(_this$trackedPointers3=this.trackedPointers.get(pointerId))===null||_this$trackedPointers3===void 0?void 0:_this$trackedPointers3.lastX;}else{var _this$trackedPointers4;return(_this$trackedPointers4=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers4===void 0?void 0:_this$trackedPointers4.lastX;}}},{key:\"getLastY\",value:function getLastY(pointerId){if(pointerId!==undefined){var _this$trackedPointers5;return(_this$trackedPointers5=this.trackedPointers.get(pointerId))===null||_this$trackedPointers5===void 0?void 0:_this$trackedPointers5.lastY;}else{var _this$trackedPointers6;return(_this$trackedPointers6=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers6===void 0?void 0:_this$trackedPointers6.lastY;}}},{key:\"getLastAvgX\",value:function getLastAvgX(){var avgX=this.getSumX()/this.trackedPointers.size;return isNaN(avgX)?this.cachedAverages.x:avgX;}},{key:\"getLastAvgY\",value:function getLastAvgY(){var avgY=this.getSumY()/this.trackedPointers.size;return isNaN(avgY)?this.cachedAverages.y:avgY;}},{key:\"getSumX\",value:function getSumX(ignoredPointer){var sumX=0;this.trackedPointers.forEach(function(value,key){if(key!==ignoredPointer){sumX+=value.lastX;}});return sumX;}},{key:\"getSumY\",value:function getSumY(ignoredPointer){var sumY=0;this.trackedPointers.forEach(function(value,key){if(key!==ignoredPointer){sumY+=value.lastY;}});return sumY;}},{key:\"getTrackedPointersCount\",value:function getTrackedPointersCount(){return this.trackedPointers.size;}},{key:\"getTrackedPointersID\",value:function getTrackedPointersID(){var keys=[];this.trackedPointers.forEach(function(_value,key){keys.push(key);});return keys;}},{key:\"getData\",value:function getData(){return this.trackedPointers;}},{key:\"resetTracker\",value:function resetTracker(){this.velocityTracker.reset();this.trackedPointers.clear();this.lastMovedPointerId=NaN;for(var i=0;i<MAX_POINTERS;++i){this.touchEventsIds.set(i,NaN);}}}],[{key:\"shareCommonPointers\",value:function shareCommonPointers(stPointers,ndPointers){return stPointers.some(function(pointerId){return ndPointers.includes(pointerId);});}}]);return PointerTracker;}();","map":{"version":3,"names":["_VelocityTracker","_interopRequireDefault","require","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","MAX_POINTERS","PointerTracker","exports","default","_classCallCheck2","_defineProperty","VelocityTracker","Map","x","y","lastMovedPointerId","NaN","touchEventsIds","set","_createClass2","key","addToTracker","event","trackedPointers","has","pointerId","newElement","lastX","lastY","timeStamp","time","velocityX","velocityY","mapTouchEventId","cachedAverages","getLastAvgX","getLastAvgY","removeFromTracker","delete","removeMappedTouchId","track","element","get","velocityTracker","add","_this$velocityTracker","getVelocity","_this$velocityTracker2","_slicedToArray2","avgX","avgY","id","_iterator","_step","_ref","_ref2","mappedId","touchId","isNaN","getMappedTouchEventId","touchEventId","_iterator2","entries","_step2","_ref3","_ref4","getVelocityX","_this$trackedPointers","getVelocityY","_this$trackedPointers2","getLastX","undefined","_this$trackedPointers3","_this$trackedPointers4","getLastY","_this$trackedPointers5","_this$trackedPointers6","getSumX","size","getSumY","ignoredPointer","sumX","forEach","sumY","getTrackedPointersCount","getTrackedPointersID","keys","_value","push","getData","resetTracker","reset","clear","shareCommonPointers","stPointers","ndPointers","some","includes"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/web/tools/PointerTracker.ts"],"sourcesContent":["import { AdaptedEvent } from '../interfaces';\nimport VelocityTracker from './VelocityTracker';\n\nexport interface TrackerElement {\n  lastX: number;\n  lastY: number;\n\n  timeStamp: number;\n\n  velocityX: number;\n  velocityY: number;\n}\n\nconst MAX_POINTERS = 20;\n\nexport default class PointerTracker {\n  private velocityTracker = new VelocityTracker();\n  private trackedPointers: Map<number, TrackerElement> = new Map<\n    number,\n    TrackerElement\n  >();\n\n  private touchEventsIds: Map<number, number> = new Map<number, number>();\n\n  private lastMovedPointerId: number;\n\n  private cachedAverages: { x: number; y: number } = { x: 0, y: 0 };\n\n  public constructor() {\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public addToTracker(event: AdaptedEvent): void {\n    if (this.trackedPointers.has(event.pointerId)) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    const newElement: TrackerElement = {\n      lastX: event.x,\n      lastY: event.y,\n      timeStamp: event.time,\n      velocityX: 0,\n      velocityY: 0,\n    };\n\n    this.trackedPointers.set(event.pointerId, newElement);\n    this.mapTouchEventId(event.pointerId);\n\n    this.cachedAverages = {\n      x: this.getLastAvgX(),\n      y: this.getLastAvgY(),\n    };\n  }\n\n  public removeFromTracker(pointerId: number): void {\n    this.trackedPointers.delete(pointerId);\n    this.removeMappedTouchId(pointerId);\n  }\n\n  public track(event: AdaptedEvent): void {\n    const element: TrackerElement = this.trackedPointers.get(\n      event.pointerId\n    ) as TrackerElement;\n\n    if (!element) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    this.velocityTracker.add(event);\n    const [velocityX, velocityY] = this.velocityTracker.getVelocity();\n\n    element.velocityX = velocityX;\n    element.velocityY = velocityY;\n\n    element.lastX = event.x;\n    element.lastY = event.y;\n\n    this.trackedPointers.set(event.pointerId, element);\n\n    const avgX: number = this.getLastAvgX();\n    const avgY: number = this.getLastAvgY();\n\n    this.cachedAverages = {\n      x: avgX,\n      y: avgY,\n    };\n  }\n\n  //Mapping TouchEvents ID\n  private mapTouchEventId(id: number): void {\n    for (const [mappedId, touchId] of this.touchEventsIds) {\n      if (isNaN(touchId)) {\n        this.touchEventsIds.set(mappedId, id);\n        break;\n      }\n    }\n  }\n\n  private removeMappedTouchId(id: number): void {\n    const mappedId: number = this.getMappedTouchEventId(id);\n    if (!isNaN(mappedId)) {\n      this.touchEventsIds.set(mappedId, NaN);\n    }\n  }\n\n  public getMappedTouchEventId(touchEventId: number): number {\n    for (const [key, value] of this.touchEventsIds.entries()) {\n      if (value === touchEventId) {\n        return key;\n      }\n    }\n\n    return NaN;\n  }\n\n  public getVelocityX(pointerId: number): number {\n    return this.trackedPointers.get(pointerId)?.velocityX as number;\n  }\n  public getVelocityY(pointerId: number): number {\n    return this.trackedPointers.get(pointerId)?.velocityY as number;\n  }\n\n  /**\n   * Returns X coordinate of last moved pointer\n   */\n  public getLastX(): number;\n\n  /**\n   *\n   * @param pointerId\n   * Returns X coordinate of given pointer\n   */\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  public getLastX(pointerId: number): number;\n\n  public getLastX(pointerId?: number): number {\n    if (pointerId !== undefined) {\n      return this.trackedPointers.get(pointerId)?.lastX as number;\n    } else {\n      return this.trackedPointers.get(this.lastMovedPointerId)?.lastX as number;\n    }\n  }\n\n  /**\n   * Returns Y coordinate of last moved pointer\n   */\n  public getLastY(): number;\n\n  /**\n   *\n   * @param pointerId\n   * Returns Y coordinate of given pointer\n   */\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  public getLastY(pointerId: number): number;\n\n  public getLastY(pointerId?: number): number {\n    if (pointerId !== undefined) {\n      return this.trackedPointers.get(pointerId)?.lastY as number;\n    } else {\n      return this.trackedPointers.get(this.lastMovedPointerId)?.lastY as number;\n    }\n  }\n\n  // Some handlers use these methods to send average values in native event.\n  // This may happen when pointers have already been removed from tracker (i.e. pointerup event).\n  // In situation when NaN would be sent as a response, we return cached value.\n  // That prevents handlers from crashing\n  public getLastAvgX(): number {\n    const avgX: number = this.getSumX() / this.trackedPointers.size;\n    return isNaN(avgX) ? this.cachedAverages.x : avgX;\n  }\n  public getLastAvgY(): number {\n    const avgY: number = this.getSumY() / this.trackedPointers.size;\n    return isNaN(avgY) ? this.cachedAverages.y : avgY;\n  }\n  public getSumX(ignoredPointer?: number): number {\n    let sumX = 0;\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sumX += value.lastX;\n      }\n    });\n\n    return sumX;\n  }\n  public getSumY(ignoredPointer?: number): number {\n    let sumY = 0;\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sumY += value.lastY;\n      }\n    });\n\n    return sumY;\n  }\n  public getTrackedPointersCount(): number {\n    return this.trackedPointers.size;\n  }\n  public getTrackedPointersID(): number[] {\n    const keys: number[] = [];\n\n    this.trackedPointers.forEach((_value, key) => {\n      keys.push(key);\n    });\n\n    return keys;\n  }\n\n  public getData(): Map<number, TrackerElement> {\n    return this.trackedPointers;\n  }\n\n  public resetTracker(): void {\n    this.velocityTracker.reset();\n    this.trackedPointers.clear();\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public static shareCommonPointers(\n    stPointers: number[],\n    ndPointers: number[]\n  ): boolean {\n    return stPointers.some((pointerId) => ndPointers.includes(pointerId));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}