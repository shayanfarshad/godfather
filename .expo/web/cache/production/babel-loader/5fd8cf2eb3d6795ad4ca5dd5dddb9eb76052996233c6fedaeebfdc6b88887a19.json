{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useScrollable=void 0;var _react=require(\"react\");var _reactNativeReanimated=require(\"react-native-reanimated\");var _getRefNativeTag=require(\"../utilities/getRefNativeTag\");var _constants=require(\"../constants\");var useScrollable=exports.useScrollable=function useScrollable(){var scrollableRef=(0,_react.useRef)(null);var previousScrollableRef=(0,_react.useRef)(null);var animatedScrollableType=(0,_reactNativeReanimated.useSharedValue)(_constants.SCROLLABLE_TYPE.UNDETERMINED);var animatedScrollableContentOffsetY=(0,_reactNativeReanimated.useSharedValue)(0);var animatedScrollableOverrideState=(0,_reactNativeReanimated.useSharedValue)(_constants.SCROLLABLE_STATE.UNDETERMINED);var isScrollableRefreshable=(0,_reactNativeReanimated.useSharedValue)(false);var setScrollableRef=(0,_react.useCallback)(function(ref){var _scrollableRef$curren,_scrollableRef$curren2;var currentRefId=(_scrollableRef$curren=(_scrollableRef$curren2=scrollableRef.current)===null||_scrollableRef$curren2===void 0?void 0:_scrollableRef$curren2.id)!==null&&_scrollableRef$curren!==void 0?_scrollableRef$curren:null;if(currentRefId!==ref.id){if(scrollableRef.current){previousScrollableRef.current=scrollableRef.current;}scrollableRef.current=ref;}},[]);var removeScrollableRef=(0,_react.useCallback)(function(ref){var _scrollableRef$curren3,_scrollableRef$curren4;var id;try{id=(0,_getRefNativeTag.getRefNativeTag)(ref);}catch(_unused){return;}var currentRefId=(_scrollableRef$curren3=(_scrollableRef$curren4=scrollableRef.current)===null||_scrollableRef$curren4===void 0?void 0:_scrollableRef$curren4.id)!==null&&_scrollableRef$curren3!==void 0?_scrollableRef$curren3:null;if(id===currentRefId){scrollableRef.current=previousScrollableRef.current;}},[]);return{scrollableRef:scrollableRef,animatedScrollableType:animatedScrollableType,animatedScrollableContentOffsetY:animatedScrollableContentOffsetY,animatedScrollableOverrideState:animatedScrollableOverrideState,isScrollableRefreshable:isScrollableRefreshable,setScrollableRef:setScrollableRef,removeScrollableRef:removeScrollableRef};};","map":{"version":3,"names":["_react","require","_reactNativeReanimated","_getRefNativeTag","_constants","useScrollable","exports","scrollableRef","useRef","previousScrollableRef","animatedScrollableType","useSharedValue","SCROLLABLE_TYPE","UNDETERMINED","animatedScrollableContentOffsetY","animatedScrollableOverrideState","SCROLLABLE_STATE","isScrollableRefreshable","setScrollableRef","useCallback","ref","_scrollableRef$curren","_scrollableRef$curren2","currentRefId","current","id","removeScrollableRef","_scrollableRef$curren3","_scrollableRef$curren4","getRefNativeTag","_unused"],"sources":["/Users/shayan/workspace/godfather/node_modules/@gorhom/bottom-sheet/lib/module/hooks/useScrollable.ts"],"sourcesContent":["import { useCallback, RefObject, useRef } from 'react';\nimport { useSharedValue } from 'react-native-reanimated';\nimport { getRefNativeTag } from '../utilities/getRefNativeTag';\nimport { SCROLLABLE_STATE, SCROLLABLE_TYPE } from '../constants';\nimport type { ScrollableRef, Scrollable } from '../types';\n\nexport const useScrollable = () => {\n  // refs\n  const scrollableRef = useRef<ScrollableRef>(null);\n  const previousScrollableRef = useRef<ScrollableRef>(null);\n\n  // variables\n  const animatedScrollableType = useSharedValue<SCROLLABLE_TYPE>(\n    SCROLLABLE_TYPE.UNDETERMINED\n  );\n  const animatedScrollableContentOffsetY = useSharedValue<number>(0);\n  const animatedScrollableOverrideState = useSharedValue<SCROLLABLE_STATE>(\n    SCROLLABLE_STATE.UNDETERMINED\n  );\n  const isScrollableRefreshable = useSharedValue<boolean>(false);\n\n  // callbacks\n  const setScrollableRef = useCallback((ref: ScrollableRef) => {\n    // get current node handle id\n    let currentRefId = scrollableRef.current?.id ?? null;\n\n    if (currentRefId !== ref.id) {\n      if (scrollableRef.current) {\n        // @ts-ignore\n        previousScrollableRef.current = scrollableRef.current;\n      }\n      // @ts-ignore\n      scrollableRef.current = ref;\n    }\n  }, []);\n\n  const removeScrollableRef = useCallback((ref: RefObject<Scrollable>) => {\n    // find node handle id\n    let id;\n    try {\n      id = getRefNativeTag(ref);\n    } catch {\n      return;\n    }\n\n    // get current node handle id\n    let currentRefId = scrollableRef.current?.id ?? null;\n\n    /**\n     * @DEV\n     * when the incoming node is actually the current node, we reset\n     * the current scrollable ref to the previous one.\n     */\n    if (id === currentRefId) {\n      // @ts-ignore\n      scrollableRef.current = previousScrollableRef.current;\n    }\n  }, []);\n\n  return {\n    scrollableRef,\n    animatedScrollableType,\n    animatedScrollableContentOffsetY,\n    animatedScrollableOverrideState,\n    isScrollableRefreshable,\n    setScrollableRef,\n    removeScrollableRef,\n  };\n};\n"],"mappings":"sFAAA,IAAAA,MAAA,CAAAC,OAAA,UACA,IAAAC,sBAAA,CAAAD,OAAA,4BACA,IAAAE,gBAAA,CAAAF,OAAA,iCACA,IAAAG,UAAA,CAAAH,OAAA,iBAGO,GAAM,CAAAI,aAAa,CAAAC,OAAA,CAAAD,aAAA,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAEjC,GAAM,CAAAE,aAAa,CAAG,GAAAC,aAAM,EAAgB,IAAhB,CAA5B,CACA,GAAM,CAAAC,qBAAqB,CAAG,GAAAD,aAAM,EAAgB,IAAhB,CAApC,CAGA,GAAM,CAAAE,sBAAsB,CAAG,GAAAC,qCAAc,EAC3CC,0BAAe,CAACC,YAD2B,CAA7C,CAGA,GAAM,CAAAC,gCAAgC,CAAG,GAAAH,qCAAc,EAAS,CAAT,CAAvD,CACA,GAAM,CAAAI,+BAA+B,CAAG,GAAAJ,qCAAc,EACpDK,2BAAgB,CAACH,YADmC,CAAtD,CAGA,GAAM,CAAAI,uBAAuB,CAAG,GAAAN,qCAAc,EAAU,KAAV,CAA9C,CAGA,GAAM,CAAAO,gBAAgB,CAAG,GAAAC,kBAAW,EAAE,SAAAC,GAAD,CAAwB,KAAAC,qBAAA,CAAAC,sBAAA,CAE3D,GAAI,CAAAC,YAAY,EAAAF,qBAAA,EAAAC,sBAAA,CAAGf,aAAa,CAACiB,OAAjB,UAAAF,sBAAA,iBAAGA,sBAAA,CAAuBG,EAA1B,UAAAJ,qBAAA,UAAAA,qBAAA,CAAgC,IAAhD,CAEA,GAAIE,YAAY,GAAKH,GAAG,CAACK,EAAzB,CAA6B,CAC3B,GAAIlB,aAAa,CAACiB,OAAlB,CAA2B,CAEzBf,qBAAqB,CAACe,OAAtB,CAAgCjB,aAAa,CAACiB,OAA9C,CACD,CAEDjB,aAAa,CAACiB,OAAd,CAAwBJ,GAAxB,CACD,CACF,CAZmC,CAYjC,EAZiC,CAApC,CAcA,GAAM,CAAAM,mBAAmB,CAAG,GAAAP,kBAAW,EAAE,SAAAC,GAAD,CAAgC,KAAAO,sBAAA,CAAAC,sBAAA,CAEtE,GAAI,CAAAH,EAAJ,CACA,GAAI,CACFA,EAAE,CAAG,GAAAI,gCAAe,EAACT,GAAD,CAApB,CACD,CAAC,MAAAU,OAAA,CAAM,CACN,OACD,CAGD,GAAI,CAAAP,YAAY,EAAAI,sBAAA,EAAAC,sBAAA,CAAGrB,aAAa,CAACiB,OAAjB,UAAAI,sBAAA,iBAAGA,sBAAA,CAAuBH,EAA1B,UAAAE,sBAAA,UAAAA,sBAAA,CAAgC,IAAhD,CAOA,GAAIF,EAAE,GAAKF,YAAX,CAAyB,CAEvBhB,aAAa,CAACiB,OAAd,CAAwBf,qBAAqB,CAACe,OAA9C,CACD,CACF,CArBsC,CAqBpC,EArBoC,CAAvC,CAuBA,MAAO,CACLjB,aADK,CACLA,aADK,CAELG,sBAFK,CAELA,sBAFK,CAGLI,gCAHK,CAGLA,gCAHK,CAILC,+BAJK,CAILA,+BAJK,CAKLE,uBALK,CAKLA,uBALK,CAMLC,gBANK,CAMLA,gBANK,CAOLQ,mBAAA,CAAAA,mBAPK,CAAP,CASD,CA9DM"},"metadata":{},"sourceType":"script","externalDependencies":[]}