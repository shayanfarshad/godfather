{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.onGestureHandlerEvent=onGestureHandlerEvent;exports.startListening=startListening;exports.stopListening=stopListening;var _reactNative=require(\"react-native\");var _State=require(\"../../State\");var _TouchEventType=require(\"../../TouchEventType\");var _handlersRegistry=require(\"../handlersRegistry\");var _gestureStateManager=require(\"./gestureStateManager\");var gestureHandlerEventSubscription=null;var gestureHandlerStateChangeEventSubscription=null;var gestureStateManagers=new Map();var lastUpdateEvent=[];function isStateChangeEvent(event){return event.oldState!=null;}function isTouchEvent(event){return event.eventType!=null;}function onGestureHandlerEvent(event){var _handler$handlers7,_handler$handlers7$on,_handler$handlers8,_handler$handlers8$on,_handler$handlers9,_handler$handlers9$on,_handler$handlers10,_handler$handlers10$o;var handler=(0,_handlersRegistry.findHandler)(event.handlerTag);if(handler){if(isStateChangeEvent(event)){if(event.oldState===_State.State.UNDETERMINED&&event.state===_State.State.BEGAN){var _handler$handlers$onB,_handler$handlers;(_handler$handlers$onB=(_handler$handlers=handler.handlers).onBegin)===null||_handler$handlers$onB===void 0?void 0:_handler$handlers$onB.call(_handler$handlers,event);}else if((event.oldState===_State.State.BEGAN||event.oldState===_State.State.UNDETERMINED)&&event.state===_State.State.ACTIVE){var _handler$handlers$onS,_handler$handlers2;(_handler$handlers$onS=(_handler$handlers2=handler.handlers).onStart)===null||_handler$handlers$onS===void 0?void 0:_handler$handlers$onS.call(_handler$handlers2,event);lastUpdateEvent[handler.handlers.handlerTag]=event;}else if(event.oldState!==event.state&&event.state===_State.State.END){var _handler$handlers$onF,_handler$handlers4;if(event.oldState===_State.State.ACTIVE){var _handler$handlers$onE,_handler$handlers3;(_handler$handlers$onE=(_handler$handlers3=handler.handlers).onEnd)===null||_handler$handlers$onE===void 0?void 0:_handler$handlers$onE.call(_handler$handlers3,event,true);}(_handler$handlers$onF=(_handler$handlers4=handler.handlers).onFinalize)===null||_handler$handlers$onF===void 0?void 0:_handler$handlers$onF.call(_handler$handlers4,event,true);lastUpdateEvent[handler.handlers.handlerTag]=undefined;}else if((event.state===_State.State.FAILED||event.state===_State.State.CANCELLED)&&event.oldState!==event.state){var _handler$handlers$onF2,_handler$handlers6;if(event.oldState===_State.State.ACTIVE){var _handler$handlers$onE2,_handler$handlers5;(_handler$handlers$onE2=(_handler$handlers5=handler.handlers).onEnd)===null||_handler$handlers$onE2===void 0?void 0:_handler$handlers$onE2.call(_handler$handlers5,event,false);}(_handler$handlers$onF2=(_handler$handlers6=handler.handlers).onFinalize)===null||_handler$handlers$onF2===void 0?void 0:_handler$handlers$onF2.call(_handler$handlers6,event,false);gestureStateManagers.delete(event.handlerTag);lastUpdateEvent[handler.handlers.handlerTag]=undefined;}}else if(isTouchEvent(event)){if(!gestureStateManagers.has(event.handlerTag)){gestureStateManagers.set(event.handlerTag,_gestureStateManager.GestureStateManager.create(event.handlerTag));}var manager=gestureStateManagers.get(event.handlerTag);switch(event.eventType){case _TouchEventType.TouchEventType.TOUCHES_DOWN:(_handler$handlers7=handler.handlers)===null||_handler$handlers7===void 0?void 0:(_handler$handlers7$on=_handler$handlers7.onTouchesDown)===null||_handler$handlers7$on===void 0?void 0:_handler$handlers7$on.call(_handler$handlers7,event,manager);break;case _TouchEventType.TouchEventType.TOUCHES_MOVE:(_handler$handlers8=handler.handlers)===null||_handler$handlers8===void 0?void 0:(_handler$handlers8$on=_handler$handlers8.onTouchesMove)===null||_handler$handlers8$on===void 0?void 0:_handler$handlers8$on.call(_handler$handlers8,event,manager);break;case _TouchEventType.TouchEventType.TOUCHES_UP:(_handler$handlers9=handler.handlers)===null||_handler$handlers9===void 0?void 0:(_handler$handlers9$on=_handler$handlers9.onTouchesUp)===null||_handler$handlers9$on===void 0?void 0:_handler$handlers9$on.call(_handler$handlers9,event,manager);break;case _TouchEventType.TouchEventType.TOUCHES_CANCELLED:(_handler$handlers10=handler.handlers)===null||_handler$handlers10===void 0?void 0:(_handler$handlers10$o=_handler$handlers10.onTouchesCancelled)===null||_handler$handlers10$o===void 0?void 0:_handler$handlers10$o.call(_handler$handlers10,event,manager);break;}}else{var _handler$handlers$onU,_handler$handlers11;(_handler$handlers$onU=(_handler$handlers11=handler.handlers).onUpdate)===null||_handler$handlers$onU===void 0?void 0:_handler$handlers$onU.call(_handler$handlers11,event);if(handler.handlers.onChange&&handler.handlers.changeEventCalculator){var _handler$handlers$onC,_handler$handlers12,_handler$handlers$cha,_handler$handlers13;(_handler$handlers$onC=(_handler$handlers12=handler.handlers).onChange)===null||_handler$handlers$onC===void 0?void 0:_handler$handlers$onC.call(_handler$handlers12,(_handler$handlers$cha=(_handler$handlers13=handler.handlers).changeEventCalculator)===null||_handler$handlers$cha===void 0?void 0:_handler$handlers$cha.call(_handler$handlers13,event,lastUpdateEvent[handler.handlers.handlerTag]));lastUpdateEvent[handler.handlers.handlerTag]=event;}}}else{var oldHandler=(0,_handlersRegistry.findOldGestureHandler)(event.handlerTag);if(oldHandler){var nativeEvent={nativeEvent:event};if(isStateChangeEvent(event)){oldHandler.onGestureStateChange(nativeEvent);}else{oldHandler.onGestureEvent(nativeEvent);}return;}}}function startListening(){stopListening();gestureHandlerEventSubscription=_reactNative.DeviceEventEmitter.addListener('onGestureHandlerEvent',onGestureHandlerEvent);gestureHandlerStateChangeEventSubscription=_reactNative.DeviceEventEmitter.addListener('onGestureHandlerStateChange',onGestureHandlerEvent);}function stopListening(){if(gestureHandlerEventSubscription){gestureHandlerEventSubscription.remove();gestureHandlerEventSubscription=null;}if(gestureHandlerStateChangeEventSubscription){gestureHandlerStateChangeEventSubscription.remove();gestureHandlerStateChangeEventSubscription=null;}}","map":{"version":3,"names":["_reactNative","require","_State","_TouchEventType","_handlersRegistry","_gestureStateManager","gestureHandlerEventSubscription","gestureHandlerStateChangeEventSubscription","gestureStateManagers","Map","lastUpdateEvent","isStateChangeEvent","event","oldState","isTouchEvent","eventType","onGestureHandlerEvent","_handler$handlers7","_handler$handlers7$on","_handler$handlers8","_handler$handlers8$on","_handler$handlers9","_handler$handlers9$on","_handler$handlers10","_handler$handlers10$o","handler","findHandler","handlerTag","State","UNDETERMINED","state","BEGAN","_handler$handlers$onB","_handler$handlers","handlers","onBegin","call","ACTIVE","_handler$handlers$onS","_handler$handlers2","onStart","END","_handler$handlers$onF","_handler$handlers4","_handler$handlers$onE","_handler$handlers3","onEnd","onFinalize","undefined","FAILED","CANCELLED","_handler$handlers$onF2","_handler$handlers6","_handler$handlers$onE2","_handler$handlers5","delete","has","set","GestureStateManager","create","manager","get","TouchEventType","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","_handler$handlers$onU","_handler$handlers11","onUpdate","onChange","changeEventCalculator","_handler$handlers$onC","_handler$handlers12","_handler$handlers$cha","_handler$handlers13","oldHandler","findOldGestureHandler","nativeEvent","onGestureStateChange","onGestureEvent","startListening","stopListening","DeviceEventEmitter","addListener","remove"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/eventReceiver.ts"],"sourcesContent":["import { DeviceEventEmitter, EmitterSubscription } from 'react-native';\nimport { State } from '../../State';\nimport { TouchEventType } from '../../TouchEventType';\nimport {\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { findHandler, findOldGestureHandler } from '../handlersRegistry';\nimport { BaseGesture } from './gesture';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from './gestureStateManager';\n\nlet gestureHandlerEventSubscription: EmitterSubscription | null = null;\nlet gestureHandlerStateChangeEventSubscription: EmitterSubscription | null =\n  null;\n\nconst gestureStateManagers: Map<number, GestureStateManagerType> = new Map<\n  number,\n  GestureStateManagerType\n>();\n\nconst lastUpdateEvent: (GestureUpdateEvent | undefined)[] = [];\n\nfunction isStateChangeEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureStateChangeEvent {\n  // @ts-ignore oldState doesn't exist on GestureTouchEvent and that's the point\n  return event.oldState != null;\n}\n\nfunction isTouchEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureTouchEvent {\n  return event.eventType != null;\n}\n\nexport function onGestureHandlerEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n) {\n  const handler = findHandler(event.handlerTag) as BaseGesture<\n    Record<string, unknown>\n  >;\n\n  if (handler) {\n    if (isStateChangeEvent(event)) {\n      if (\n        event.oldState === State.UNDETERMINED &&\n        event.state === State.BEGAN\n      ) {\n        handler.handlers.onBegin?.(event);\n      } else if (\n        (event.oldState === State.BEGAN ||\n          event.oldState === State.UNDETERMINED) &&\n        event.state === State.ACTIVE\n      ) {\n        handler.handlers.onStart?.(event);\n        lastUpdateEvent[handler.handlers.handlerTag] = event;\n      } else if (event.oldState !== event.state && event.state === State.END) {\n        if (event.oldState === State.ACTIVE) {\n          handler.handlers.onEnd?.(event, true);\n        }\n        handler.handlers.onFinalize?.(event, true);\n        lastUpdateEvent[handler.handlers.handlerTag] = undefined;\n      } else if (\n        (event.state === State.FAILED || event.state === State.CANCELLED) &&\n        event.oldState !== event.state\n      ) {\n        if (event.oldState === State.ACTIVE) {\n          handler.handlers.onEnd?.(event, false);\n        }\n        handler.handlers.onFinalize?.(event, false);\n        gestureStateManagers.delete(event.handlerTag);\n        lastUpdateEvent[handler.handlers.handlerTag] = undefined;\n      }\n    } else if (isTouchEvent(event)) {\n      if (!gestureStateManagers.has(event.handlerTag)) {\n        gestureStateManagers.set(\n          event.handlerTag,\n          GestureStateManager.create(event.handlerTag)\n        );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const manager = gestureStateManagers.get(event.handlerTag)!;\n\n      switch (event.eventType) {\n        case TouchEventType.TOUCHES_DOWN:\n          handler.handlers?.onTouchesDown?.(event, manager);\n          break;\n        case TouchEventType.TOUCHES_MOVE:\n          handler.handlers?.onTouchesMove?.(event, manager);\n          break;\n        case TouchEventType.TOUCHES_UP:\n          handler.handlers?.onTouchesUp?.(event, manager);\n          break;\n        case TouchEventType.TOUCHES_CANCELLED:\n          handler.handlers?.onTouchesCancelled?.(event, manager);\n          break;\n      }\n    } else {\n      handler.handlers.onUpdate?.(event);\n\n      if (handler.handlers.onChange && handler.handlers.changeEventCalculator) {\n        handler.handlers.onChange?.(\n          handler.handlers.changeEventCalculator?.(\n            event,\n            lastUpdateEvent[handler.handlers.handlerTag]\n          )\n        );\n\n        lastUpdateEvent[handler.handlers.handlerTag] = event;\n      }\n    }\n  } else {\n    const oldHandler = findOldGestureHandler(event.handlerTag);\n    if (oldHandler) {\n      const nativeEvent = { nativeEvent: event };\n      if (isStateChangeEvent(event)) {\n        oldHandler.onGestureStateChange(nativeEvent);\n      } else {\n        oldHandler.onGestureEvent(nativeEvent);\n      }\n      return;\n    }\n  }\n}\n\nexport function startListening() {\n  stopListening();\n\n  gestureHandlerEventSubscription = DeviceEventEmitter.addListener(\n    'onGestureHandlerEvent',\n    onGestureHandlerEvent\n  );\n\n  gestureHandlerStateChangeEventSubscription = DeviceEventEmitter.addListener(\n    'onGestureHandlerStateChange',\n    onGestureHandlerEvent\n  );\n}\n\nexport function stopListening() {\n  if (gestureHandlerEventSubscription) {\n    gestureHandlerEventSubscription.remove();\n    gestureHandlerEventSubscription = null;\n  }\n\n  if (gestureHandlerStateChangeEventSubscription) {\n    gestureHandlerStateChangeEventSubscription.remove();\n    gestureHandlerStateChangeEventSubscription = null;\n  }\n}\n"],"mappings":"uLAAA,IAAAA,YAAA,CAAAC,OAAA,iBACA,IAAAC,MAAA,CAAAD,OAAA,gBACA,IAAAE,eAAA,CAAAF,OAAA,yBAMA,IAAAG,iBAAA,CAAAH,OAAA,wBAEA,IAAAI,oBAAA,CAAAJ,OAAA,0BAKA,GAAI,CAAAK,+BAA2D,CAAG,IAAlE,CACA,GAAI,CAAAC,0CAAsE,CACxE,IADF,CAGA,GAAM,CAAAC,oBAA0D,CAAG,GAAI,CAAAC,GAAJ,EAAnE,CAKA,GAAM,CAAAC,eAAmD,CAAG,EAA5D,CAEA,QAAS,CAAAC,kBAATA,CACEC,KADF,CAEoC,CAElC,MAAO,CAAAA,KAAK,CAACC,QAAN,EAAkB,IAAzB,CACD,CAED,QAAS,CAAAC,YAATA,CACEF,KADF,CAE8B,CAC5B,MAAO,CAAAA,KAAK,CAACG,SAAN,EAAmB,IAA1B,CACD,CAEM,QAAS,CAAAC,qBAATA,CACLJ,KADK,CAEL,KAAAK,kBAAA,CAAAC,qBAAA,CAAAC,kBAAA,CAAAC,qBAAA,CAAAC,kBAAA,CAAAC,qBAAA,CAAAC,mBAAA,CAAAC,qBAAA,CACA,GAAM,CAAAC,OAAO,CAAG,GAAAC,6BAAW,EAACd,KAAK,CAACe,UAAP,CAA3B,CAIA,GAAIF,OAAJ,CAAa,CACX,GAAId,kBAAkB,CAACC,KAAD,CAAtB,CAA+B,CAC7B,GACEA,KAAK,CAACC,QAAN,GAAmBe,YAAK,CAACC,YAAzB,EACAjB,KAAK,CAACkB,KAAN,GAAgBF,YAAK,CAACG,KAFxB,CAGE,KAAAC,qBAAA,CAAAC,iBAAA,CACA,CAAAD,qBAAA,EAAAC,iBAAA,CAAAR,OAAO,CAACS,QAAR,EAAiBC,OAAjB,UAAAH,qBAAA,iBAAAA,qBAAA,CAAAI,IAAA,CAAAH,iBAAA,CAA2BrB,KAA3B,EACD,CALD,IAKO,IACL,CAACA,KAAK,CAACC,QAAN,GAAmBe,YAAK,CAACG,KAAzB,EACCnB,KAAK,CAACC,QAAN,GAAmBe,YAAK,CAACC,YAD3B,GAEAjB,KAAK,CAACkB,KAAN,GAAgBF,YAAK,CAACS,MAHjB,CAIL,KAAAC,qBAAA,CAAAC,kBAAA,CACA,CAAAD,qBAAA,EAAAC,kBAAA,CAAAd,OAAO,CAACS,QAAR,EAAiBM,OAAjB,UAAAF,qBAAA,iBAAAA,qBAAA,CAAAF,IAAA,CAAAG,kBAAA,CAA2B3B,KAA3B,EACAF,eAAe,CAACe,OAAO,CAACS,QAAR,CAAiBP,UAAlB,CAAf,CAA+Cf,KAA/C,CACD,CAPM,IAOA,IAAIA,KAAK,CAACC,QAAN,GAAmBD,KAAK,CAACkB,KAAzB,EAAkClB,KAAK,CAACkB,KAAN,GAAgBF,YAAK,CAACa,GAA5D,CAAiE,KAAAC,qBAAA,CAAAC,kBAAA,CACtE,GAAI/B,KAAK,CAACC,QAAN,GAAmBe,YAAK,CAACS,MAA7B,CAAqC,KAAAO,qBAAA,CAAAC,kBAAA,CACnC,CAAAD,qBAAA,EAAAC,kBAAA,CAAApB,OAAO,CAACS,QAAR,EAAiBY,KAAjB,UAAAF,qBAAA,iBAAAA,qBAAA,CAAAR,IAAA,CAAAS,kBAAA,CAAyBjC,KAAzB,CAAgC,IAAhC,EACD,CACD,CAAA8B,qBAAA,EAAAC,kBAAA,CAAAlB,OAAO,CAACS,QAAR,EAAiBa,UAAjB,UAAAL,qBAAA,iBAAAA,qBAAA,CAAAN,IAAA,CAAAO,kBAAA,CAA8B/B,KAA9B,CAAqC,IAArC,EACAF,eAAe,CAACe,OAAO,CAACS,QAAR,CAAiBP,UAAlB,CAAf,CAA+CqB,SAA/C,CACD,CANM,IAMA,IACL,CAACpC,KAAK,CAACkB,KAAN,GAAgBF,YAAK,CAACqB,MAAtB,EAAgCrC,KAAK,CAACkB,KAAN,GAAgBF,YAAK,CAACsB,SAAvD,GACAtC,KAAK,CAACC,QAAN,GAAmBD,KAAK,CAACkB,KAFpB,CAGL,KAAAqB,sBAAA,CAAAC,kBAAA,CACA,GAAIxC,KAAK,CAACC,QAAN,GAAmBe,YAAK,CAACS,MAA7B,CAAqC,KAAAgB,sBAAA,CAAAC,kBAAA,CACnC,CAAAD,sBAAA,EAAAC,kBAAA,CAAA7B,OAAO,CAACS,QAAR,EAAiBY,KAAjB,UAAAO,sBAAA,iBAAAA,sBAAA,CAAAjB,IAAA,CAAAkB,kBAAA,CAAyB1C,KAAzB,CAAgC,KAAhC,EACD,CACD,CAAAuC,sBAAA,EAAAC,kBAAA,CAAA3B,OAAO,CAACS,QAAR,EAAiBa,UAAjB,UAAAI,sBAAA,iBAAAA,sBAAA,CAAAf,IAAA,CAAAgB,kBAAA,CAA8BxC,KAA9B,CAAqC,KAArC,EACAJ,oBAAoB,CAAC+C,MAArB,CAA4B3C,KAAK,CAACe,UAAlC,EACAjB,eAAe,CAACe,OAAO,CAACS,QAAR,CAAiBP,UAAlB,CAAf,CAA+CqB,SAA/C,CACD,CACF,CA9BD,IA8BO,IAAIlC,YAAY,CAACF,KAAD,CAAhB,CAAyB,CAC9B,GAAI,CAACJ,oBAAoB,CAACgD,GAArB,CAAyB5C,KAAK,CAACe,UAA/B,CAAL,CAAiD,CAC/CnB,oBAAoB,CAACiD,GAArB,CACE7C,KAAK,CAACe,UADR,CAEE+B,wCAAmB,CAACC,MAApB,CAA2B/C,KAAK,CAACe,UAAjC,CAFF,EAID,CAGD,GAAM,CAAAiC,OAAO,CAAGpD,oBAAoB,CAACqD,GAArB,CAAyBjD,KAAK,CAACe,UAA/B,CAAhB,CAEA,OAAQf,KAAK,CAACG,SAAd,EACE,IAAK,CAAA+C,8BAAc,CAACC,YAApB,CACE,CAAA9C,kBAAA,CAAAQ,OAAO,CAACS,QAAR,UAAAjB,kBAAA,kBAAAC,qBAAA,CAAAD,kBAAA,CAAkB+C,aAAlB,UAAA9C,qBAAA,iBAAAA,qBAAA,CAAAkB,IAAA,CAAAnB,kBAAA,CAAkCL,KAAlC,CAAyCgD,OAAzC,EACA,MACF,IAAK,CAAAE,8BAAc,CAACG,YAApB,CACE,CAAA9C,kBAAA,CAAAM,OAAO,CAACS,QAAR,UAAAf,kBAAA,kBAAAC,qBAAA,CAAAD,kBAAA,CAAkB+C,aAAlB,UAAA9C,qBAAA,iBAAAA,qBAAA,CAAAgB,IAAA,CAAAjB,kBAAA,CAAkCP,KAAlC,CAAyCgD,OAAzC,EACA,MACF,IAAK,CAAAE,8BAAc,CAACK,UAApB,CACE,CAAA9C,kBAAA,CAAAI,OAAO,CAACS,QAAR,UAAAb,kBAAA,kBAAAC,qBAAA,CAAAD,kBAAA,CAAkB+C,WAAlB,UAAA9C,qBAAA,iBAAAA,qBAAA,CAAAc,IAAA,CAAAf,kBAAA,CAAgCT,KAAhC,CAAuCgD,OAAvC,EACA,MACF,IAAK,CAAAE,8BAAc,CAACO,iBAApB,CACE,CAAA9C,mBAAA,CAAAE,OAAO,CAACS,QAAR,UAAAX,mBAAA,kBAAAC,qBAAA,CAAAD,mBAAA,CAAkB+C,kBAAlB,UAAA9C,qBAAA,iBAAAA,qBAAA,CAAAY,IAAA,CAAAb,mBAAA,CAAuCX,KAAvC,CAA8CgD,OAA9C,EACA,MAZJ,CAcD,CAzBM,IAyBA,KAAAW,qBAAA,CAAAC,mBAAA,CACL,CAAAD,qBAAA,EAAAC,mBAAA,CAAA/C,OAAO,CAACS,QAAR,EAAiBuC,QAAjB,UAAAF,qBAAA,iBAAAA,qBAAA,CAAAnC,IAAA,CAAAoC,mBAAA,CAA4B5D,KAA5B,EAEA,GAAIa,OAAO,CAACS,QAAR,CAAiBwC,QAAjB,EAA6BjD,OAAO,CAACS,QAAR,CAAiByC,qBAAlD,CAAyE,KAAAC,qBAAA,CAAAC,mBAAA,CAAAC,qBAAA,CAAAC,mBAAA,CACvE,CAAAH,qBAAA,EAAAC,mBAAA,CAAApD,OAAO,CAACS,QAAR,EAAiBwC,QAAjB,UAAAE,qBAAA,iBAAAA,qBAAA,CAAAxC,IAAA,CAAAyC,mBAAA,EAAAC,qBAAA,CACE,CAAAC,mBAAA,CAAAtD,OAAO,CAACS,QAAR,EAAiByC,qBADnB,UAAAG,qBAAA,iBACEA,qBAAA,CAAA1C,IAAA,CAAA2C,mBAAA,CACEnE,KADF,CAEEF,eAAe,CAACe,OAAO,CAACS,QAAR,CAAiBP,UAAlB,CAFjB,CADF,EAOAjB,eAAe,CAACe,OAAO,CAACS,QAAR,CAAiBP,UAAlB,CAAf,CAA+Cf,KAA/C,CACD,CACF,CACF,CAtED,IAsEO,CACL,GAAM,CAAAoE,UAAU,CAAG,GAAAC,uCAAqB,EAACrE,KAAK,CAACe,UAAP,CAAxC,CACA,GAAIqD,UAAJ,CAAgB,CACd,GAAM,CAAAE,WAAW,CAAG,CAAEA,WAAW,CAAEtE,KAAf,CAApB,CACA,GAAID,kBAAkB,CAACC,KAAD,CAAtB,CAA+B,CAC7BoE,UAAU,CAACG,oBAAX,CAAgCD,WAAhC,EACD,CAFD,IAEO,CACLF,UAAU,CAACI,cAAX,CAA0BF,WAA1B,EACD,CACD,OACD,CACF,CACF,CAEM,QAAS,CAAAG,cAATA,CAAA,CAA0B,CAC/BC,aAAa,GAEbhF,+BAA+B,CAAGiF,+BAAkB,CAACC,WAAnB,CAChC,uBADgC,CAEhCxE,qBAFgC,CAAlC,CAKAT,0CAA0C,CAAGgF,+BAAkB,CAACC,WAAnB,CAC3C,6BAD2C,CAE3CxE,qBAF2C,CAA7C,CAID,CAEM,QAAS,CAAAsE,aAATA,CAAA,CAAyB,CAC9B,GAAIhF,+BAAJ,CAAqC,CACnCA,+BAA+B,CAACmF,MAAhC,GACAnF,+BAA+B,CAAG,IAAlC,CACD,CAED,GAAIC,0CAAJ,CAAgD,CAC9CA,0CAA0C,CAACkF,MAA3C,GACAlF,0CAA0C,CAAG,IAA7C,CACD,CACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}