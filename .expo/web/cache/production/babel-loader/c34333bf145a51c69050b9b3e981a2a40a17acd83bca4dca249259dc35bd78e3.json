{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.tapHandlerName=exports.tapGestureHandlerProps=exports.TapGestureHandler=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _createHandler=_interopRequireDefault(require(\"./createHandler\"));var _gestureHandlerCommon=require(\"./gestureHandlerCommon\");var tapGestureHandlerProps=exports.tapGestureHandlerProps=['maxDurationMs','maxDelayMs','numberOfTaps','maxDeltaX','maxDeltaY','maxDist','minPointers'];var tapHandlerName=exports.tapHandlerName='TapGestureHandler';var TapGestureHandler=exports.TapGestureHandler=(0,_createHandler.default)({name:tapHandlerName,allowedProps:[].concat((0,_toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps),tapGestureHandlerProps),config:{shouldCancelWhenOutside:true}});","map":{"version":3,"names":["_createHandler","_interopRequireDefault","require","_gestureHandlerCommon","tapGestureHandlerProps","exports","tapHandlerName","TapGestureHandler","createHandler","name","allowedProps","concat","_toConsumableArray2","default","baseGestureHandlerProps","config","shouldCancelWhenOutside"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/handlers/TapGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const tapGestureHandlerProps = [\n  'maxDurationMs',\n  'maxDelayMs',\n  'numberOfTaps',\n  'maxDeltaX',\n  'maxDeltaY',\n  'maxDist',\n  'minPointers',\n] as const;\n\nexport type TapGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\nexport interface TapGestureConfig {\n  /**\n   * Minimum number of pointers (fingers) required to be placed before the\n   * handler activates. Should be a positive integer.\n   * The default value is 1.\n   */\n  minPointers?: number;\n\n  /**\n   * Maximum time, expressed in milliseconds, that defines how fast a finger\n   * must be released after a touch. The default value is 500.\n   */\n  maxDurationMs?: number;\n\n  /**\n   * Maximum time, expressed in milliseconds, that can pass before the next tap\n   * if many taps are required. The default value is 500.\n   */\n  maxDelayMs?: number;\n\n  /**\n   * Number of tap gestures required to activate the handler. The default value\n   * is 1.\n   */\n  numberOfTaps?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel along the X axis during a tap gesture. If the finger\n   * travels further than the defined distance along the X axis and the handler\n   * hasn't yet activated, it will fail to recognize the gesture.\n   */\n  maxDeltaX?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel along the Y axis during a tap gesture. If the finger\n   * travels further than the defined distance along the Y axis and the handler\n   * hasn't yet activated, it will fail to recognize the gesture.\n   */\n  maxDeltaY?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a tap gesture. If the finger travels further than\n   * the defined distance and the handler hasn't yet\n   * activated, it will fail to recognize the gesture.\n   */\n  maxDist?: number;\n}\n\nexport interface TapGestureHandlerProps\n  extends BaseGestureHandlerProps<TapGestureHandlerEventPayload>,\n    TapGestureConfig {}\n\nexport const tapHandlerName = 'TapGestureHandler';\n\nexport type TapGestureHandler = typeof TapGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const TapGestureHandler = createHandler<\n  TapGestureHandlerProps,\n  TapGestureHandlerEventPayload\n>({\n  name: tapHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...tapGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n"],"mappings":"uUAAA,IAAAA,cAAA,CAAAC,sBAAA,CAAAC,OAAA,qBACA,IAAAC,qBAAA,CAAAD,OAAA,2BAKO,GAAM,CAAAE,sBAAsB,CAAAC,OAAA,CAAAD,sBAAA,CAAG,CACpC,eADoC,CAEpC,YAFoC,CAGpC,cAHoC,CAIpC,WAJoC,CAKpC,WALoC,CAMpC,SANoC,CAOpC,aAPoC,CAA/B,CAuEA,GAAM,CAAAE,cAAc,CAAAD,OAAA,CAAAC,cAAA,CAAG,mBAAvB,CAIA,GAAM,CAAAC,iBAAiB,CAAAF,OAAA,CAAAE,iBAAA,CAAG,GAAAC,sBAAa,EAG5C,CACAC,IAAI,CAAEH,cADN,CAEAI,YAAY,IAAAC,MAAA,IAAAC,mBAAA,CAAAC,OAAA,EACPC,6CADS,EAETV,sBAFS,CAFd,CAMAW,MAAM,CAAE,CACNC,uBAAuB,CAAE,IADnB,CANR,CAH4C,CAAvC"},"metadata":{},"sourceType":"script","externalDependencies":[]}