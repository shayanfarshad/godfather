{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.NOT_INITIALIZED_ERROR=void 0;exports.default=createNavigationContainerRef;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _routers=require(\"@react-navigation/routers\");var NOT_INITIALIZED_ERROR=exports.NOT_INITIALIZED_ERROR=\"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";function createNavigationContainerRef(){var methods=[].concat((0,_toConsumableArray2.default)(Object.keys(_routers.CommonActions)),['addListener','removeListener','resetRoot','dispatch','isFocused','canGoBack','getRootState','getState','getParent','getCurrentRoute','getCurrentOptions']);var listeners={};var removeListener=function removeListener(event,callback){if(listeners[event]){listeners[event]=listeners[event].filter(function(cb){return cb!==callback;});}};var current=null;var ref=(0,_extends2.default)({get current(){return current;},set current(value){current=value;if(value!=null){Object.entries(listeners).forEach(function(_ref){var _ref2=(0,_slicedToArray2.default)(_ref,2),event=_ref2[0],callbacks=_ref2[1];callbacks.forEach(function(callback){value.addListener(event,callback);});});}},isReady:function isReady(){if(current==null){return false;}return current.isReady();}},methods.reduce(function(acc,name){acc[name]=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(current==null){switch(name){case'addListener':{var event=args[0],callback=args[1];listeners[event]=listeners[event]||[];listeners[event].push(callback);return function(){return removeListener(event,callback);};}case'removeListener':{var _event=args[0],_callback=args[1];removeListener(_event,_callback);break;}default:console.error(NOT_INITIALIZED_ERROR);}}else{var _current;return(_current=current)[name].apply(_current,args);}};return acc;},{}));return ref;}","map":{"version":3,"names":["_routers","require","NOT_INITIALIZED_ERROR","exports","createNavigationContainerRef","methods","concat","_toConsumableArray2","default","Object","keys","CommonActions","listeners","removeListener","event","callback","filter","cb","current","ref","_extends2","value","entries","forEach","_ref","_ref2","_slicedToArray2","callbacks","addListener","isReady","reduce","acc","name","_len","arguments","length","args","Array","_key","push","console","error","_current","apply"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/core/src/createNavigationContainerRef.tsx"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\n\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerRefWithCurrent,\n} from './types';\n\nexport const NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nexport default function createNavigationContainerRef<\n  ParamList extends {} = ReactNavigation.RootParamList\n>(): NavigationContainerRefWithCurrent<ParamList> {\n  const methods = [\n    ...Object.keys(CommonActions),\n    'addListener',\n    'removeListener',\n    'resetRoot',\n    'dispatch',\n    'isFocused',\n    'canGoBack',\n    'getRootState',\n    'getState',\n    'getParent',\n    'getCurrentRoute',\n    'getCurrentOptions',\n  ] as const;\n\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\n\n  const removeListener = (\n    event: string,\n    callback: (...args: any[]) => void\n  ) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\n    }\n  };\n\n  let current: NavigationContainerRef<ParamList> | null = null;\n\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\n    get current() {\n      return current;\n    },\n    set current(value: NavigationContainerRef<ParamList> | null) {\n      current = value;\n\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach((callback) => {\n            value.addListener(\n              event as keyof NavigationContainerEventMap,\n              callback\n            );\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n\n      return current.isReady();\n    },\n    ...methods.reduce<any>((acc, name) => {\n      acc[name] = (...args: any[]) => {\n        if (current == null) {\n          switch (name) {\n            case 'addListener': {\n              const [event, callback] = args;\n\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n\n              return () => removeListener(event, callback);\n            }\n            case 'removeListener': {\n              const [event, callback] = args;\n\n              removeListener(event, callback);\n              break;\n            }\n            default:\n              console.error(NOT_INITIALIZED_ERROR);\n          }\n        } else {\n          // @ts-expect-error: this is ok\n          return current[name](...args);\n        }\n      };\n      return acc;\n    }, {}),\n  };\n\n  return ref;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}