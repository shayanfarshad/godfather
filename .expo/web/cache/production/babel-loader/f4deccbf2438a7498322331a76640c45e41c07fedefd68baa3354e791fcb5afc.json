{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _core=require(\"@react-navigation/core\");var React=_interopRequireWildcard(require(\"react\"));var _ServerContext=_interopRequireDefault(require(\"./ServerContext\"));function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var _default=exports.default=React.forwardRef(function ServerContainer(_ref,ref){var children=_ref.children,location=_ref.location;React.useEffect(function(){console.error(\"'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.\");},[]);var current={};if(ref){var value={getCurrentOptions:function getCurrentOptions(){return current.options;}};if(typeof ref==='function'){ref(value);}else{ref.current=value;}}return React.createElement(_ServerContext.default.Provider,{value:{location:location}},React.createElement(_core.CurrentRenderContext.Provider,{value:current},children));});","map":{"version":3,"names":["_core","require","React","_interopRequireWildcard","_ServerContext","_interopRequireDefault","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_default","exports","forwardRef","ServerContainer","_ref","ref","children","location","useEffect","console","error","current","value","getCurrentOptions","options","createElement","ServerContext","Provider","CurrentRenderContext"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/native/src/ServerContainer.tsx"],"sourcesContent":["import { CurrentRenderContext } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport ServerContext, { ServerContextType } from './ServerContext';\nimport type { ServerContainerRef } from './types';\n\ntype Props = ServerContextType & {\n  children: React.ReactNode;\n};\n\n/**\n * Container component for server rendering.\n *\n * @param props.location Location object to base the initial URL for SSR.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which contains helper methods.\n */\nexport default React.forwardRef(function ServerContainer(\n  { children, location }: Props,\n  ref: React.Ref<ServerContainerRef>\n) {\n  React.useEffect(() => {\n    console.error(\n      \"'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.\"\n    );\n  }, []);\n\n  const current: { options?: object } = {};\n\n  if (ref) {\n    const value = {\n      getCurrentOptions() {\n        return current.options;\n      },\n    };\n\n    // We write to the `ref` during render instead of `React.useImperativeHandle`\n    // This is because `useImperativeHandle` will update the ref after 'commit',\n    // and there's no 'commit' phase during SSR.\n    // Mutating ref during render is unsafe in concurrent mode, but we don't care about it for SSR.\n    if (typeof ref === 'function') {\n      ref(value);\n    } else {\n      // @ts-expect-error: the TS types are incorrect and say that ref.current is readonly\n      ref.current = value;\n    }\n  }\n\n  return (\n    <ServerContext.Provider value={{ location }}>\n      <CurrentRenderContext.Provider value={current}>\n        {children}\n      </CurrentRenderContext.Provider>\n    </ServerContext.Provider>\n  );\n});\n"],"mappings":"mKAAA,IAAAA,KAAA,CAAAC,OAAA,2BACA,IAAAC,KAAA,CAAAC,uBAAA,CAAAF,OAAA,WAEA,IAAAG,cAAA,CAAAC,sBAAA,CAAAJ,OAAA,qBAAkE,SAAAK,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,IAAAF,CAAA,YAAAJ,wBAAAI,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,EAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,CAAAc,CAAA,OAAAI,CAAA,CAAAR,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAI,CAAA,GAAAA,CAAA,CAAAX,GAAA,EAAAW,CAAA,CAAAC,GAAA,EAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAI,CAAA,EAAAV,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,UAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,MAAAY,QAAA,CAAAC,OAAA,CAAAhB,OAAA,CAcnDV,KAAK,CAAC2B,UAAU,CAAC,QAAS,CAAAC,eAAeA,CAAAC,IAAA,CAEtDC,GAAkC,CAClC,IAFE,CAAAC,QAAQ,CAAmBF,IAAA,CAA3BE,QAAQ,CAAEC,QAAA,CAAiBH,IAAA,CAAjBG,QAAA,CAGZhC,KAAK,CAACiC,SAAS,CAAC,UAAM,CACpBC,OAAO,CAACC,KAAK,CACX,sFAAsF,CACvF,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,OAA6B,CAAG,CAAC,CAAC,CAExC,GAAIN,GAAG,CAAE,CACP,GAAM,CAAAO,KAAK,CAAG,CACZC,iBAAiB,UAAAA,kBAAA,CAAG,CAClB,MAAO,CAAAF,OAAO,CAACG,OAAO,CACxB,CACF,CAAC,CAMD,GAAI,MAAO,CAAAT,GAAG,GAAK,UAAU,CAAE,CAC7BA,GAAG,CAACO,KAAK,CAAC,CACZ,CAAC,IAAM,CAELP,GAAG,CAACM,OAAO,CAAGC,KAAK,CACrB,CACF,CAEA,MACE,CAAArC,KAAA,CAAAwC,aAAA,CAACC,sBAAa,CAACC,QAAQ,EAACL,KAAK,CAAE,CAAEL,QAAA,CAAAA,QAAS,CAAE,EAC1ChC,KAAA,CAAAwC,aAAA,CAACG,0BAAoB,CAACD,QAAQ,EAACL,KAAK,CAAED,OAAQ,EAC3CL,QAAQ,CACqB,CACT,CAE7B,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}