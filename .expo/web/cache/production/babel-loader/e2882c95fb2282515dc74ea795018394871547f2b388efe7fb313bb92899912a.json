{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.SimultaneousGesture=exports.ExclusiveGesture=exports.ComposedGesture=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _gesture=require(\"./gesture\");function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function extendRelation(currentRelation,extendWith){if(currentRelation===undefined){return(0,_toConsumableArray2.default)(extendWith);}else{return[].concat((0,_toConsumableArray2.default)(currentRelation),(0,_toConsumableArray2.default)(extendWith));}}var ComposedGesture=exports.ComposedGesture=function(_Gesture){(0,_inherits2.default)(ComposedGesture,_Gesture);var _super=_createSuper(ComposedGesture);function ComposedGesture(){var _this;(0,_classCallCheck2.default)(this,ComposedGesture);_this=_super.call(this);_defineProperty((0,_assertThisInitialized2.default)(_this),\"gestures\",[]);_defineProperty((0,_assertThisInitialized2.default)(_this),\"simultaneousGestures\",[]);_defineProperty((0,_assertThisInitialized2.default)(_this),\"requireGesturesToFail\",[]);for(var _len=arguments.length,gestures=new Array(_len),_key=0;_key<_len;_key++){gestures[_key]=arguments[_key];}_this.gestures=gestures;return _this;}(0,_createClass2.default)(ComposedGesture,[{key:\"prepareSingleGesture\",value:function prepareSingleGesture(gesture,simultaneousGestures,requireGesturesToFail){if(gesture instanceof _gesture.BaseGesture){var newConfig=(0,_extends2.default)({},gesture.config);newConfig.simultaneousWith=extendRelation(newConfig.simultaneousWith,simultaneousGestures);newConfig.requireToFail=extendRelation(newConfig.requireToFail,requireGesturesToFail);gesture.config=newConfig;}else if(gesture instanceof ComposedGesture){gesture.simultaneousGestures=simultaneousGestures;gesture.requireGesturesToFail=requireGesturesToFail;gesture.prepare();}}},{key:\"prepare\",value:function prepare(){for(var _iterator=_createForOfIteratorHelperLoose(this.gestures),_step;!(_step=_iterator()).done;){var gesture=_step.value;this.prepareSingleGesture(gesture,this.simultaneousGestures,this.requireGesturesToFail);}}},{key:\"initialize\",value:function initialize(){for(var _iterator2=_createForOfIteratorHelperLoose(this.gestures),_step2;!(_step2=_iterator2()).done;){var gesture=_step2.value;gesture.initialize();}}},{key:\"toGestureArray\",value:function toGestureArray(){return this.gestures.flatMap(function(gesture){return gesture.toGestureArray();});}}]);return ComposedGesture;}(_gesture.Gesture);var SimultaneousGesture=exports.SimultaneousGesture=function(_ComposedGesture){(0,_inherits2.default)(SimultaneousGesture,_ComposedGesture);var _super2=_createSuper(SimultaneousGesture);function SimultaneousGesture(){(0,_classCallCheck2.default)(this,SimultaneousGesture);return _super2.apply(this,arguments);}(0,_createClass2.default)(SimultaneousGesture,[{key:\"prepare\",value:function prepare(){var _this2=this;var simultaneousArrays=this.gestures.map(function(gesture){return _this2.gestures.filter(function(x){return x!==gesture;}).flatMap(function(x){return x.toGestureArray();});});for(var i=0;i<this.gestures.length;i++){this.prepareSingleGesture(this.gestures[i],simultaneousArrays[i],this.requireGesturesToFail);}}}]);return SimultaneousGesture;}(ComposedGesture);var ExclusiveGesture=exports.ExclusiveGesture=function(_ComposedGesture2){(0,_inherits2.default)(ExclusiveGesture,_ComposedGesture2);var _super3=_createSuper(ExclusiveGesture);function ExclusiveGesture(){(0,_classCallCheck2.default)(this,ExclusiveGesture);return _super3.apply(this,arguments);}(0,_createClass2.default)(ExclusiveGesture,[{key:\"prepare\",value:function prepare(){var gestureArrays=this.gestures.map(function(gesture){return gesture.toGestureArray();});var requireToFail=[];for(var i=0;i<this.gestures.length;i++){this.prepareSingleGesture(this.gestures[i],this.simultaneousGestures,this.requireGesturesToFail.concat(requireToFail));requireToFail=requireToFail.concat(gestureArrays[i]);}}}]);return ExclusiveGesture;}(ComposedGesture);","map":{"version":3,"names":["_gesture","require","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn2","t","Boolean","valueOf","extendRelation","currentRelation","extendWith","undefined","_toConsumableArray2","concat","ComposedGesture","exports","_Gesture","_inherits2","_super","_this","_classCallCheck2","_defineProperty","_assertThisInitialized2","_len","gestures","_key","_createClass2","key","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","_extends2","config","simultaneousWith","requireToFail","prepare","_iterator","_step","initialize","_iterator2","_step2","toGestureArray","flatMap","Gesture","SimultaneousGesture","_ComposedGesture","_super2","_this2","simultaneousArrays","map","filter","x","ExclusiveGesture","_ComposedGesture2","_super3","gestureArrays"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // this piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}