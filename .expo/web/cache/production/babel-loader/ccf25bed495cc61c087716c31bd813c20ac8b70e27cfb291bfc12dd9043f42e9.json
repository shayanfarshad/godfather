{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.withStyleAnimation=void 0;var _util=require(\"./util\");var _timing=require(\"./timing\");var _Colors=require(\"../Colors\");function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}var _worklet_2297150180059_init_data={code:\"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(acc!==null&&typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\"};var resolvePath=function(){var resolvePath=function resolvePath(obj,path){var keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(acc!==null&&typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);};resolvePath.__closure={};resolvePath.__initData=_worklet_2297150180059_init_data;resolvePath.__workletHash=2297150180059;return resolvePath;}();var _worklet_17315725778859_init_data={code:\"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!(keys[i]in currObj)){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\"};var setPath=function(){var setPath=function setPath(obj,path,value){var keys=Array.isArray(path)?path:[path];var currObj=obj;for(var i=0;i<keys.length-1;i++){currObj=currObj;if(!(keys[i]in currObj)){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;};setPath.__closure={};setPath.__initData=_worklet_17315725778859_init_data;setPath.__workletHash=17315725778859;return setPath;}();var _worklet_13504713794262_init_data={code:\"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=this.__closure;return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(prevVal===undefined){console.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}\"};var _worklet_1843409626782_init_data={code:\"function anonymous(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=this.__closure;const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(prevVal===undefined){console.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}\"};var withStyleAnimation=exports.withStyleAnimation=function(){var withStyleAnimation=function withStyleAnimation(styleAnimations){return(0,_util.defineAnimation)({},function(){var anonymous=function anonymous(){var onFrame=function onFrame(animation,now){var stillGoing=false;var entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(var _i=0,_Object$keys=Object.keys(currentEntry.value);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}var finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(_Colors.ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=(0,_Colors.processColor)(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};var onStart=function onStart(animation,value,now,previousAnimation){var entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){var currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(var index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(var _i2=0,_Object$keys2=Object.keys(currentEntry.value);_i2<_Object$keys2.length;_i2++){var key=_Object$keys2[_i2];entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{var prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);var prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(prevVal===undefined){console.warn(\"Initial values for animation are missing for property \"+currentEntry.path.join('.'));}setPath(animation.current,currentEntry.path,prevVal);var currentAnimation=void 0;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=(0,_timing.withTiming)(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};var callback=function callback(finished){if(!finished){var animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){var currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(var _iterator=_createForOfIteratorHelperLoose(currentAnimation),_step;!(_step=_iterator()).done;){var element=_step.value;animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(var _i3=0,_Object$values=Object.values(currentAnimation);_i3<_Object$values.length;_i3++){var value=_Object$values[_i3];animationsToCheck.push(value);}}else{var currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};};anonymous.__closure={ColorProperties:_Colors.ColorProperties,processColor:_Colors.processColor,setPath:setPath,styleAnimations:styleAnimations,resolvePath:resolvePath,withTiming:_timing.withTiming};anonymous.__initData=_worklet_1843409626782_init_data;anonymous.__workletHash=1843409626782;return anonymous;}());};withStyleAnimation.__closure={defineAnimation:_util.defineAnimation,ColorProperties:_Colors.ColorProperties,processColor:_Colors.processColor,setPath:setPath,resolvePath:resolvePath,withTiming:_timing.withTiming};withStyleAnimation.__initData=_worklet_13504713794262_init_data;withStyleAnimation.__workletHash=13504713794262;return withStyleAnimation;}();","map":{"version":3,"names":["_util","require","_timing","_Colors","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","_worklet_2297150180059_init_data","code","resolvePath","obj","path","keys","reduce","acc","current","undefined","__closure","__initData","__workletHash","_worklet_17315725778859_init_data","setPath","currObj","_worklet_13504713794262_init_data","_worklet_1843409626782_init_data","withStyleAnimation","exports","styleAnimations","defineAnimation","anonymous","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","_i","_Object$keys","key","currentStyleAnimation","finished","callback","ColorProperties","includes","processColor","onStart","previousAnimation","_i2","_Object$keys2","prevAnimation","prevVal","console","warn","join","currentAnimation","withTiming","duration","animationsToCheck","_iterator","_step","element","_i3","_Object$values","values","isHigherOrder"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-reanimated/lib/module/reanimated2/animation/styleAnimation.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport type {\n  Timestamp,\n  AnimatableValue,\n  AnimationObject,\n  Animation,\n  NestedObject,\n  NestedObjectValues,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\nimport type { StyleLayoutAnimation } from './commonTypes';\nimport { withTiming } from './timing';\nimport { ColorProperties, processColor } from '../Colors';\n\n// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nfunction resolvePath<T>(\n  obj: NestedObject<T>,\n  path: AnimatableValue[] | AnimatableValue\n): NestedObjectValues<T> | undefined {\n  'worklet';\n  const keys: AnimatableValue[] = Array.isArray(path) ? path : [path];\n  return keys.reduce<NestedObjectValues<T> | undefined>((acc, current) => {\n    if (Array.isArray(acc) && typeof current === 'number') {\n      return acc[current];\n    } else if (\n      acc !== null &&\n      typeof acc === 'object' &&\n      (current as number | string) in acc\n    ) {\n      return (acc as { [key: string]: NestedObjectValues<T> })[\n        current as number | string\n      ];\n    }\n    return undefined;\n  }, obj);\n}\n\n// set value at given path\ntype Path = Array<string | number> | string | number;\nfunction setPath<T>(\n  obj: NestedObject<T>,\n  path: Path,\n  value: NestedObjectValues<T>\n): void {\n  'worklet';\n  const keys: Path = Array.isArray(path) ? path : [path];\n  let currObj: NestedObjectValues<T> = obj;\n  for (let i = 0; i < keys.length - 1; i++) {\n    // creates entry if there isn't one\n    currObj = currObj as { [key: string]: NestedObjectValues<T> };\n    if (!(keys[i] in currObj)) {\n      // if next key is a number create an array\n      if (typeof keys[i + 1] === 'number') {\n        currObj[keys[i]] = [];\n      } else {\n        currObj[keys[i]] = {};\n      }\n    }\n    currObj = currObj[keys[i]];\n  }\n\n  (currObj as { [key: string]: NestedObjectValues<T> })[keys[keys.length - 1]] =\n    value;\n}\n\ninterface NestedObjectEntry<T> {\n  value: NestedObjectValues<T>;\n  path: (string | number)[];\n}\n\nexport function withStyleAnimation(\n  styleAnimations: AnimatedStyle<any>\n): StyleLayoutAnimation {\n  'worklet';\n  return defineAnimation<StyleLayoutAnimation>({}, () => {\n    'worklet';\n\n    const onFrame = (\n      animation: StyleLayoutAnimation,\n      now: Timestamp\n    ): boolean => {\n      let stillGoing = false;\n      const entriesToCheck: NestedObjectEntry<AnimationObject>[] = [\n        { value: animation.styleAnimations, path: [] },\n      ];\n      while (entriesToCheck.length > 0) {\n        const currentEntry: NestedObjectEntry<AnimationObject> =\n          entriesToCheck.pop() as NestedObjectEntry<AnimationObject>;\n        if (Array.isArray(currentEntry.value)) {\n          for (let index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index),\n            });\n          }\n        } else if (\n          typeof currentEntry.value === 'object' &&\n          currentEntry.value.onFrame === undefined\n        ) {\n          // nested object\n          for (const key of Object.keys(currentEntry.value)) {\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key),\n            });\n          }\n        } else {\n          const currentStyleAnimation: AnimationObject =\n            currentEntry.value as AnimationObject;\n          if (currentStyleAnimation.finished) {\n            continue;\n          }\n          const finished = currentStyleAnimation.onFrame(\n            currentStyleAnimation,\n            now\n          );\n          if (finished) {\n            currentStyleAnimation.finished = true;\n            if (currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(true);\n            }\n          } else {\n            stillGoing = true;\n          }\n\n          if (ColorProperties.includes(currentEntry.path[0] as string)) {\n            currentStyleAnimation.current = processColor(\n              currentStyleAnimation.current\n            ) as number;\n          }\n\n          setPath(\n            animation.current,\n            currentEntry.path,\n            currentStyleAnimation.current\n          );\n        }\n      }\n      return !stillGoing;\n    };\n\n    const onStart = (\n      animation: StyleLayoutAnimation,\n      value: AnimatedStyle<any>,\n      now: Timestamp,\n      previousAnimation: StyleLayoutAnimation\n    ): void => {\n      const entriesToCheck: NestedObjectEntry<\n        AnimationObject | AnimatableValue\n      >[] = [{ value: styleAnimations, path: [] }];\n      while (entriesToCheck.length > 0) {\n        const currentEntry: NestedObjectEntry<\n          AnimationObject | AnimatableValue\n        > = entriesToCheck.pop() as NestedObjectEntry<\n          AnimationObject | AnimatableValue\n        >;\n        if (Array.isArray(currentEntry.value)) {\n          for (let index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index),\n            });\n          }\n        } else if (\n          typeof currentEntry.value === 'object' &&\n          currentEntry.value.onStart === undefined\n        ) {\n          for (const key of Object.keys(currentEntry.value)) {\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key),\n            });\n          }\n        } else {\n          const prevAnimation = resolvePath(\n            previousAnimation?.styleAnimations,\n            currentEntry.path\n          );\n          let prevVal = resolvePath(value, currentEntry.path);\n          if (prevAnimation && !prevVal) {\n            prevVal = (prevAnimation as any).current;\n          }\n          if (prevVal === undefined) {\n            console.warn(\n              `Initial values for animation are missing for property ${currentEntry.path.join(\n                '.'\n              )}`\n            );\n          }\n          setPath(animation.current, currentEntry.path, prevVal);\n          let currentAnimation: AnimationObject;\n          if (\n            typeof currentEntry.value !== 'object' ||\n            !currentEntry.value.onStart\n          ) {\n            currentAnimation = withTiming(\n              currentEntry.value as AnimatableValue,\n              { duration: 0 }\n            ) as AnimationObject; // TODO TYPESCRIPT this temporary cast is to get rid of .d.ts file.\n            setPath(\n              animation.styleAnimations,\n              currentEntry.path,\n              currentAnimation\n            );\n          } else {\n            currentAnimation = currentEntry.value as Animation<AnimationObject>;\n          }\n          currentAnimation.onStart(\n            currentAnimation,\n            prevVal,\n            now,\n            prevAnimation\n          );\n        }\n      }\n    };\n\n    const callback = (finished: boolean): void => {\n      if (!finished) {\n        const animationsToCheck: NestedObjectValues<AnimationObject>[] = [\n          styleAnimations,\n        ];\n        while (animationsToCheck.length > 0) {\n          const currentAnimation: NestedObjectValues<AnimationObject> =\n            animationsToCheck.pop() as NestedObjectValues<AnimationObject>;\n          if (Array.isArray(currentAnimation)) {\n            for (const element of currentAnimation) {\n              animationsToCheck.push(element);\n            }\n          } else if (\n            typeof currentAnimation === 'object' &&\n            currentAnimation.onStart === undefined\n          ) {\n            for (const value of Object.values(currentAnimation)) {\n              animationsToCheck.push(value);\n            }\n          } else {\n            const currentStyleAnimation: AnimationObject =\n              currentAnimation as AnimationObject;\n            if (\n              !currentStyleAnimation.finished &&\n              currentStyleAnimation.callback\n            ) {\n              currentStyleAnimation.callback(false);\n            }\n          }\n        }\n      }\n    };\n\n    return {\n      isHigherOrder: true,\n      onFrame,\n      onStart,\n      current: {},\n      styleAnimations,\n      callback,\n    } as StyleLayoutAnimation;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}