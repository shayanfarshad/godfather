{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.createGestureHandler=createGestureHandler;exports.dropGestureHandler=dropGestureHandler;exports.getHandler=getHandler;exports.getNodes=getNodes;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var gestures={};function getHandler(tag){if(tag in gestures){return gestures[tag];}throw new Error(\"No handler for tag \"+tag);}function createGestureHandler(handlerTag,handler){if(handlerTag in gestures){throw new Error(\"Handler with tag \"+handlerTag+\" already exists\");}gestures[handlerTag]=handler;gestures[handlerTag].handlerTag=handlerTag;}function dropGestureHandler(handlerTag){if(!(handlerTag in gestures)){return;}getHandler(handlerTag).destroy();delete gestures[handlerTag];}function getNodes(){return(0,_extends2.default)({},gestures);}","map":{"version":3,"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes","_extends2","default"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/web_hammer/NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { HammerGestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<\n  number,\n  InstanceType<ValueOf<typeof HammerGestures>>\n> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof HammerGestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":"oXAGA,GAAM,CAAAA,QAGL,CAAG,EAHJ,CAKO,QAAS,CAAAC,UAATA,CAAoBC,GAApB,CAAiC,CACtC,GAAIA,GAAG,GAAI,CAAAF,QAAX,CAAqB,CACnB,MAAO,CAAAA,QAAQ,CAACE,GAAD,CAAf,CACD,CAED,KAAM,IAAI,CAAAC,KAAJ,uBAAgCD,GAAhC,CAAN,CACD,CAEM,QAAS,CAAAE,oBAATA,CACLC,UADK,CAELC,OAFK,CAGL,CACA,GAAID,UAAU,GAAI,CAAAL,QAAlB,CAA4B,CAC1B,KAAM,IAAI,CAAAG,KAAJ,qBAA8BE,UAAW,kBAAzC,CAAN,CACD,CACDL,QAAQ,CAACK,UAAD,CAAR,CAAuBC,OAAvB,CAEAN,QAAQ,CAACK,UAAD,CAAR,CAAqBA,UAArB,CAAkCA,UAAlC,CACD,CAEM,QAAS,CAAAE,kBAATA,CAA4BF,UAA5B,CAAgD,CAGrD,GAAI,EAAEA,UAAU,GAAI,CAAAL,QAAhB,CAAJ,CAA+B,CAC7B,OACD,CACDC,UAAU,CAACI,UAAD,CAAV,CAAuBG,OAAvB,GAEA,MAAO,CAAAR,QAAQ,CAACK,UAAD,CAAf,CACD,CAEM,QAAS,CAAAI,QAATA,CAAA,CAAoB,CACzB,SAAAC,SAAA,CAAAC,OAAA,KAAYX,QAAA,EACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}