{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useLinking;exports.series=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _core=require(\"@react-navigation/core\");var _fastDeepEqual=_interopRequireDefault(require(\"fast-deep-equal\"));var React=_interopRequireWildcard(require(\"react\"));var _createMemoryHistory=_interopRequireDefault(require(\"./createMemoryHistory\"));var _ServerContext=_interopRequireDefault(require(\"./ServerContext\"));function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var findMatchingState=function findMatchingState(a,b){if(a===undefined||b===undefined||a.key!==b.key){return[undefined,undefined];}var aHistoryLength=a.history?a.history.length:a.routes.length;var bHistoryLength=b.history?b.history.length:b.routes.length;var aRoute=a.routes[a.index];var bRoute=b.routes[b.index];var aChildState=aRoute.state;var bChildState=bRoute.state;if(aHistoryLength!==bHistoryLength||aRoute.key!==bRoute.key||aChildState===undefined||bChildState===undefined||aChildState.key!==bChildState.key){return[a,b];}return findMatchingState(aChildState,bChildState);};var series=exports.series=function series(cb){var queue=Promise.resolve();var callback=function callback(){queue=queue.then(cb);};return callback;};var linkingHandlers=[];function useLinking(ref,_ref){var independent=_ref.independent,_ref$enabled=_ref.enabled,enabled=_ref$enabled===void 0?true:_ref$enabled,config=_ref.config,_ref$getStateFromPath=_ref.getStateFromPath,getStateFromPath=_ref$getStateFromPath===void 0?_core.getStateFromPath:_ref$getStateFromPath,_ref$getPathFromState=_ref.getPathFromState,getPathFromState=_ref$getPathFromState===void 0?_core.getPathFromState:_ref$getPathFromState,_ref$getActionFromSta=_ref.getActionFromState,getActionFromState=_ref$getActionFromSta===void 0?_core.getActionFromState:_ref$getActionFromSta;React.useEffect(function(){if(process.env.NODE_ENV==='production'){return undefined;}if(independent){return undefined;}if(enabled!==false&&linkingHandlers.length){console.error(['Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",'- Only a single instance of the root component is rendered'].join('\\n').trim());}var handler=Symbol();if(enabled!==false){linkingHandlers.push(handler);}return function(){var index=linkingHandlers.indexOf(handler);if(index>-1){linkingHandlers.splice(index,1);}};},[enabled,independent]);var _React$useState=React.useState(_createMemoryHistory.default),_React$useState2=(0,_slicedToArray2.default)(_React$useState,1),history=_React$useState2[0];var enabledRef=React.useRef(enabled);var configRef=React.useRef(config);var getStateFromPathRef=React.useRef(getStateFromPath);var getPathFromStateRef=React.useRef(getPathFromState);var getActionFromStateRef=React.useRef(getActionFromState);React.useEffect(function(){enabledRef.current=enabled;configRef.current=config;getStateFromPathRef.current=getStateFromPath;getPathFromStateRef.current=getPathFromState;getActionFromStateRef.current=getActionFromState;});var server=React.useContext(_ServerContext.default);var getInitialState=React.useCallback(function(){var value;if(enabledRef.current){var _ref2;var _location=(_ref2=server===null||server===void 0?void 0:server.location)!=null?_ref2:typeof window!=='undefined'?window.location:undefined;var path=_location?_location.pathname+_location.search:undefined;if(path){value=getStateFromPathRef.current(path,configRef.current);}}var thenable={then:function then(onfulfilled){return Promise.resolve(onfulfilled?onfulfilled(value):value);},catch:function _catch(){return thenable;}};return thenable;},[]);var previousIndexRef=React.useRef(undefined);var previousStateRef=React.useRef(undefined);var pendingPopStatePathRef=React.useRef(undefined);React.useEffect(function(){previousIndexRef.current=history.index;return history.listen(function(){var _previousIndexRef$cur;var navigation=ref.current;if(!navigation||!enabled){return;}var path=location.pathname+location.search;var index=history.index;var previousIndex=(_previousIndexRef$cur=previousIndexRef.current)!=null?_previousIndexRef$cur:0;previousIndexRef.current=index;pendingPopStatePathRef.current=path;var record=history.get(index);if((record===null||record===void 0?void 0:record.path)===path&&record!==null&&record!==void 0&&record.state){navigation.resetRoot(record.state);return;}var state=getStateFromPathRef.current(path,configRef.current);if(state){var rootState=navigation.getRootState();if(state.routes.some(function(r){return!(rootState!==null&&rootState!==void 0&&rootState.routeNames.includes(r.name));})){console.warn(\"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\");return;}if(index>previousIndex){var action=getActionFromStateRef.current(state,configRef.current);if(action!==undefined){try{navigation.dispatch(action);}catch(e){console.warn(\"An error occurred when trying to handle the link '\"+path+\"': \"+(typeof e==='object'&&e!=null&&'message'in e?e.message:e));}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}});},[enabled,history,ref]);React.useEffect(function(){var _ref$current;if(!enabled){return;}var getPathForRoute=function getPathForRoute(route,state){if(route!==null&&route!==void 0&&route.path){var stateForPath=getStateFromPathRef.current(route.path,configRef.current);if(stateForPath){var focusedRoute=(0,_core.findFocusedRoute)(stateForPath);if(focusedRoute&&focusedRoute.name===route.name&&(0,_fastDeepEqual.default)(focusedRoute.params,route.params)){return route.path;}}}return getPathFromStateRef.current(state,configRef.current);};if(ref.current){var state=ref.current.getRootState();if(state){var route=(0,_core.findFocusedRoute)(state);var path=getPathForRoute(route,state);if(previousStateRef.current===undefined){previousStateRef.current=state;}history.replace({path:path,state:state});}}var onStateChange=function _callee(){var navigation,previousState,state,pendingPath,route,path,_findMatchingState,_findMatchingState2,previousFocusedState,focusedState,historyDelta,nextIndex,currentIndex;return _regenerator.default.async(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:navigation=ref.current;if(!(!navigation||!enabled)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:previousState=previousStateRef.current;state=navigation.getRootState();if(state){_context.next=7;break;}return _context.abrupt(\"return\");case 7:pendingPath=pendingPopStatePathRef.current;route=(0,_core.findFocusedRoute)(state);path=getPathForRoute(route,state);previousStateRef.current=state;pendingPopStatePathRef.current=undefined;_findMatchingState=findMatchingState(previousState,state),_findMatchingState2=(0,_slicedToArray2.default)(_findMatchingState,2),previousFocusedState=_findMatchingState2[0],focusedState=_findMatchingState2[1];if(!(previousFocusedState&&focusedState&&path!==pendingPath)){_context.next=40;break;}historyDelta=(focusedState.history?focusedState.history.length:focusedState.routes.length)-(previousFocusedState.history?previousFocusedState.history.length:previousFocusedState.routes.length);if(!(historyDelta>0)){_context.next=19;break;}history.push({path:path,state:state});_context.next=38;break;case 19:if(!(historyDelta<0)){_context.next=37;break;}nextIndex=history.backIndex({path:path});currentIndex=history.index;_context.prev=22;if(!(nextIndex!==-1&&nextIndex<currentIndex)){_context.next=28;break;}_context.next=26;return _regenerator.default.awrap(history.go(nextIndex-currentIndex));case 26:_context.next=30;break;case 28:_context.next=30;return _regenerator.default.awrap(history.go(historyDelta));case 30:history.replace({path:path,state:state});_context.next=35;break;case 33:_context.prev=33;_context.t0=_context[\"catch\"](22);case 35:_context.next=38;break;case 37:history.replace({path:path,state:state});case 38:_context.next=41;break;case 40:history.replace({path:path,state:state});case 41:case\"end\":return _context.stop();}},null,null,[[22,33]],Promise);};return(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.addListener('state',series(onStateChange));},[enabled,history,ref]);return{getInitialState:getInitialState};}","map":{"version":3,"names":["_core","require","_fastDeepEqual","_interopRequireDefault","React","_interopRequireWildcard","_createMemoryHistory","_ServerContext","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","findMatchingState","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","exports","cb","queue","Promise","resolve","callback","then","linkingHandlers","useLinking","ref","_ref","independent","_ref$enabled","enabled","config","_ref$getStateFromPath","getStateFromPath","getStateFromPathDefault","_ref$getPathFromState","getPathFromState","getPathFromStateDefault","_ref$getActionFromSta","getActionFromState","getActionFromStateDefault","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","push","indexOf","splice","_React$useState","useState","createMemoryHistory","_React$useState2","_slicedToArray2","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","server","useContext","ServerContext","getInitialState","useCallback","value","_ref2","location","window","path","pathname","search","thenable","onfulfilled","catch","_catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","_previousIndexRef$cur","navigation","previousIndex","record","resetRoot","rootState","getRootState","some","routeNames","includes","name","warn","action","dispatch","message","_ref$current","getPathForRoute","route","stateForPath","focusedRoute","findFocusedRoute","isEqual","params","replace","onStateChange","_callee","previousState","pendingPath","_findMatchingState","_findMatchingState2","previousFocusedState","focusedState","historyDelta","nextIndex","currentIndex","_regenerator","async","_callee$","_context","prev","next","abrupt","backIndex","awrap","go","t0","stop","addListener"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/native/src/useLinking.tsx"],"sourcesContent":["import {\n  findFocusedRoute,\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/core';\nimport isEqual from 'fast-deep-equal';\nimport * as React from 'react';\n\nimport createMemoryHistory from './createMemoryHistory';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nexport const series = (cb: () => Promise<void>) => {\n  let queue = Promise.resolve();\n  const callback = () => {\n    queue = queue.then(cb);\n  };\n  return callback;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${\n                  typeof e === 'object' && e != null && 'message' in e\n                    ? e.message\n                    : e\n                }`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const getPathForRoute = (\n      route: ReturnType<typeof findFocusedRoute>,\n      state: NavigationState\n    ): string => {\n      // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match\n      // This makes sure that we preserve the original URL for wildcard routes\n      if (route?.path) {\n        const stateForPath = getStateFromPathRef.current(\n          route.path,\n          configRef.current\n        );\n\n        if (stateForPath) {\n          const focusedRoute = findFocusedRoute(stateForPath);\n\n          if (\n            focusedRoute &&\n            focusedRoute.name === route.name &&\n            isEqual(focusedRoute.params, route.params)\n          ) {\n            return route.path;\n          }\n        }\n      }\n\n      return getPathFromStateRef.current(state, configRef.current);\n    };\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const route = findFocusedRoute(state);\n        const path = getPathForRoute(route, state);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      // root state may not available, for example when root navigators switch inside the container\n      if (!state) {\n        return;\n      }\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const route = findFocusedRoute(state);\n      const path = getPathForRoute(route, state);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (nextIndex !== -1 && nextIndex < currentIndex) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  }, [enabled, history, ref]);\n\n  return {\n    getInitialState,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}