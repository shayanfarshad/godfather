{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=createNavigatorFactory;var _Group=_interopRequireDefault(require(\"./Group\"));var _Screen=_interopRequireDefault(require(\"./Screen\"));function createNavigatorFactory(Navigator){return function(){if(arguments[0]!==undefined){throw new Error(\"Creating a navigator doesn't take an argument. Maybe you are trying to use React Navigation 4 API? See https://reactnavigation.org/docs/hello-react-navigation for the latest API and guides.\");}return{Navigator:Navigator,Group:_Group.default,Screen:_Screen.default};};}","map":{"version":3,"names":["_Group","_interopRequireDefault","require","_Screen","createNavigatorFactory","Navigator","arguments","undefined","Error","Group","Screen"],"sources":["/Users/shayan/workspace/godfather/node_modules/@react-navigation/core/src/createNavigatorFactory.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport type * as React from 'react';\n\nimport Group from './Group';\nimport Screen from './Screen';\nimport type { EventMapBase, TypedNavigator } from './types';\n\n/**\n * Higher order component to create a `Navigator` and `Screen` pair.\n * Custom navigators should wrap the navigator component in `createNavigator` before exporting.\n *\n * @param Navigator The navigtor component to wrap.\n * @returns Factory method to create a `Navigator` and `Screen` pair.\n */\nexport default function createNavigatorFactory<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n  NavigatorComponent extends React.ComponentType<any>\n>(Navigator: NavigatorComponent) {\n  return function <ParamList extends ParamListBase>(): TypedNavigator<\n    ParamList,\n    State,\n    ScreenOptions,\n    EventMap,\n    typeof Navigator\n  > {\n    if (arguments[0] !== undefined) {\n      throw new Error(\n        \"Creating a navigator doesn't take an argument. Maybe you are trying to use React Navigation 4 API? See https://reactnavigation.org/docs/hello-react-navigation for the latest API and guides.\"\n      );\n    }\n\n    return {\n      Navigator,\n      Group,\n      Screen,\n    };\n  };\n}\n"],"mappings":"mLAGA,IAAAA,MAAA,CAAAC,sBAAA,CAAAC,OAAA,aACA,IAAAC,OAAA,CAAAF,sBAAA,CAAAC,OAAA,cAUe,QAAS,CAAAE,sBAAsBA,CAK5CC,SAA6B,CAAE,CAC/B,MAAO,WAML,CACA,GAAIC,SAAS,CAAC,CAAC,CAAC,GAAKC,SAAS,CAAE,CAC9B,KAAM,IAAI,CAAAC,KAAK,CACb,+LAA+L,CAChM,CACH,CAEA,MAAO,CACLH,SAAS,CAATA,SAAS,CACTI,KAAK,CAALA,cAAK,CACLC,MAAA,CAAAA,eACF,CAAC,CACH,CAAC,CACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}