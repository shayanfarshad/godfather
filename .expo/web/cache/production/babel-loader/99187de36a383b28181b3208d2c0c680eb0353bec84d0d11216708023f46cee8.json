{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.TabBar=TabBar;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _useLatestCallback=_interopRequireDefault(require(\"use-latest-callback\"));var _TabBarIndicator=require(\"./TabBarIndicator\");var _TabBarItem=require(\"./TabBarItem\");var _useAnimatedValue=require(\"./useAnimatedValue\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var Separator=function Separator(_ref){var width=_ref.width;return React.createElement(_reactNative.View,{style:{width:width}});};var getFlattenedTabWidth=function getFlattenedTabWidth(style){var tabStyle=_reactNative.StyleSheet.flatten(style);return tabStyle===null||tabStyle===void 0?void 0:tabStyle.width;};var getComputedTabWidth=function getComputedTabWidth(index,layout,routes,scrollEnabled,tabWidths,flattenedWidth){if(flattenedWidth==='auto'){return tabWidths[routes[index].key]||0;}switch(typeof flattenedWidth){case'number':return flattenedWidth;case'string':if(flattenedWidth.endsWith('%')){var width=parseFloat(flattenedWidth);if(Number.isFinite(width)){return layout.width*(width/100);}}}if(scrollEnabled){return layout.width/5*2;}return layout.width/routes.length;};var getMaxScrollDistance=function getMaxScrollDistance(tabBarWidth,layoutWidth){return tabBarWidth-layoutWidth;};var getTranslateX=function getTranslateX(scrollAmount,maxScrollDistance){return _reactNative.Animated.multiply(_reactNative.Platform.OS==='android'&&_reactNative.I18nManager.isRTL?_reactNative.Animated.add(maxScrollDistance,_reactNative.Animated.multiply(scrollAmount,-1)):scrollAmount,_reactNative.I18nManager.isRTL?1:-1);};var getTabBarWidth=function getTabBarWidth(_ref2){var navigationState=_ref2.navigationState,layout=_ref2.layout,gap=_ref2.gap,scrollEnabled=_ref2.scrollEnabled,flattenedTabWidth=_ref2.flattenedTabWidth,tabWidths=_ref2.tabWidths;var routes=navigationState.routes;return routes.reduce(function(acc,_,i){return acc+(i>0?gap!=null?gap:0:0)+getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,flattenedTabWidth);},0);};var normalizeScrollValue=function normalizeScrollValue(_ref3){var layout=_ref3.layout,navigationState=_ref3.navigationState,gap=_ref3.gap,scrollEnabled=_ref3.scrollEnabled,tabWidths=_ref3.tabWidths,value=_ref3.value,flattenedTabWidth=_ref3.flattenedTabWidth;var tabBarWidth=getTabBarWidth({layout:layout,navigationState:navigationState,tabWidths:tabWidths,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});var maxDistance=getMaxScrollDistance(tabBarWidth,layout.width);var scrollValue=Math.max(Math.min(value,maxDistance),0);if(_reactNative.Platform.OS==='android'&&_reactNative.I18nManager.isRTL){return maxDistance-scrollValue;}return scrollValue;};var getScrollAmount=function getScrollAmount(_ref4){var layout=_ref4.layout,navigationState=_ref4.navigationState,gap=_ref4.gap,scrollEnabled=_ref4.scrollEnabled,flattenedTabWidth=_ref4.flattenedTabWidth,tabWidths=_ref4.tabWidths;var centerDistance=Array.from({length:navigationState.index+1}).reduce(function(total,_,i){var tabWidth=getComputedTabWidth(i,layout,navigationState.routes,scrollEnabled,tabWidths,flattenedTabWidth);return total+(navigationState.index===i?(tabWidth+(gap!=null?gap:0))/2:tabWidth+(gap!=null?gap:0));},0);var scrollAmount=centerDistance-layout.width/2;return normalizeScrollValue({layout:layout,navigationState:navigationState,tabWidths:tabWidths,value:scrollAmount,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});};var getLabelTextDefault=function getLabelTextDefault(_ref5){var route=_ref5.route;return route.title;};var getAccessibleDefault=function getAccessibleDefault(_ref6){var route=_ref6.route;return typeof route.accessible!=='undefined'?route.accessible:true;};var getAccessibilityLabelDefault=function getAccessibilityLabelDefault(_ref7){var route=_ref7.route;return typeof route.accessibilityLabel==='string'?route.accessibilityLabel:typeof route.title==='string'?route.title:undefined;};var renderIndicatorDefault=function renderIndicatorDefault(props){return React.createElement(_TabBarIndicator.TabBarIndicator,props);};var getTestIdDefault=function getTestIdDefault(_ref8){var route=_ref8.route;return route.testID;};var MEASURE_PER_BATCH=10;function TabBar(_ref9){var _ref9$getLabelText=_ref9.getLabelText,getLabelText=_ref9$getLabelText===void 0?getLabelTextDefault:_ref9$getLabelText,_ref9$getAccessible=_ref9.getAccessible,getAccessible=_ref9$getAccessible===void 0?getAccessibleDefault:_ref9$getAccessible,_ref9$getAccessibilit=_ref9.getAccessibilityLabel,getAccessibilityLabel=_ref9$getAccessibilit===void 0?getAccessibilityLabelDefault:_ref9$getAccessibilit,_ref9$getTestID=_ref9.getTestID,getTestID=_ref9$getTestID===void 0?getTestIdDefault:_ref9$getTestID,_ref9$renderIndicator=_ref9.renderIndicator,renderIndicator=_ref9$renderIndicator===void 0?renderIndicatorDefault:_ref9$renderIndicator,_ref9$gap=_ref9.gap,gap=_ref9$gap===void 0?0:_ref9$gap,scrollEnabled=_ref9.scrollEnabled,jumpTo=_ref9.jumpTo,navigationState=_ref9.navigationState,position=_ref9.position,activeColor=_ref9.activeColor,bounces=_ref9.bounces,contentContainerStyle=_ref9.contentContainerStyle,inactiveColor=_ref9.inactiveColor,indicatorContainerStyle=_ref9.indicatorContainerStyle,indicatorStyle=_ref9.indicatorStyle,labelStyle=_ref9.labelStyle,onTabLongPress=_ref9.onTabLongPress,onTabPress=_ref9.onTabPress,pressColor=_ref9.pressColor,pressOpacity=_ref9.pressOpacity,renderBadge=_ref9.renderBadge,renderIcon=_ref9.renderIcon,renderLabel=_ref9.renderLabel,renderTabBarItem=_ref9.renderTabBarItem,style=_ref9.style,tabStyle=_ref9.tabStyle,testID=_ref9.testID,android_ripple=_ref9.android_ripple;var _React$useState=React.useState({width:0,height:0}),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),layout=_React$useState2[0],setLayout=_React$useState2[1];var _React$useState3=React.useState({}),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),tabWidths=_React$useState4[0],setTabWidths=_React$useState4[1];var flatListRef=React.useRef(null);var isFirst=React.useRef(true);var scrollAmount=(0,_useAnimatedValue.useAnimatedValue)(0);var measuredTabWidths=React.useRef({});var routes=navigationState.routes;var flattenedTabWidth=getFlattenedTabWidth(tabStyle);var isWidthDynamic=flattenedTabWidth==='auto';var scrollOffset=getScrollAmount({layout:layout,navigationState:navigationState,tabWidths:tabWidths,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});var hasMeasuredTabWidths=Boolean(layout.width)&&routes.slice(0,navigationState.index).every(function(r){return typeof tabWidths[r.key]==='number';});React.useEffect(function(){if(isFirst.current){isFirst.current=false;return;}if(isWidthDynamic&&!hasMeasuredTabWidths){return;}if(scrollEnabled){var _flatListRef$current;(_flatListRef$current=flatListRef.current)===null||_flatListRef$current===void 0?void 0:_flatListRef$current.scrollToOffset({offset:scrollOffset,animated:true});}},[hasMeasuredTabWidths,isWidthDynamic,scrollEnabled,scrollOffset]);var handleLayout=function handleLayout(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;setLayout(function(layout){return layout.width===width&&layout.height===height?layout:{width:width,height:height};});};var tabBarWidth=getTabBarWidth({layout:layout,navigationState:navigationState,tabWidths:tabWidths,gap:gap,scrollEnabled:scrollEnabled,flattenedTabWidth:flattenedTabWidth});var separatorsWidth=Math.max(0,routes.length-1)*gap;var separatorPercent=separatorsWidth/tabBarWidth*100;var tabBarWidthPercent=routes.length*40+\"%\";var translateX=React.useMemo(function(){return getTranslateX(scrollAmount,getMaxScrollDistance(tabBarWidth,layout.width));},[layout.width,scrollAmount,tabBarWidth]);var renderItem=React.useCallback(function(_ref10){var route=_ref10.item,index=_ref10.index;var props={key:route.key,position:position,route:route,navigationState:navigationState,getAccessibilityLabel:getAccessibilityLabel,getAccessible:getAccessible,getLabelText:getLabelText,getTestID:getTestID,renderBadge:renderBadge,renderIcon:renderIcon,renderLabel:renderLabel,activeColor:activeColor,inactiveColor:inactiveColor,pressColor:pressColor,pressOpacity:pressOpacity,onLayout:isWidthDynamic?function(e){measuredTabWidths.current[route.key]=e.nativeEvent.layout.width;if(routes.length>MEASURE_PER_BATCH&&index===MEASURE_PER_BATCH&&routes.slice(0,MEASURE_PER_BATCH).every(function(r){return typeof measuredTabWidths.current[r.key]==='number';})){setTabWidths((0,_extends2.default)({},measuredTabWidths.current));}else if(routes.every(function(r){return typeof measuredTabWidths.current[r.key]==='number';})){setTabWidths((0,_extends2.default)({},measuredTabWidths.current));}}:undefined,onPress:function onPress(){var event={route:route,defaultPrevented:false,preventDefault:function preventDefault(){event.defaultPrevented=true;}};onTabPress===null||onTabPress===void 0?void 0:onTabPress(event);if(event.defaultPrevented){return;}jumpTo(route.key);},onLongPress:function onLongPress(){return onTabLongPress===null||onTabLongPress===void 0?void 0:onTabLongPress({route:route});},labelStyle:labelStyle,style:tabStyle,defaultTabWidth:!isWidthDynamic?getComputedTabWidth(index,layout,routes,scrollEnabled,tabWidths,getFlattenedTabWidth(tabStyle)):undefined,android_ripple:android_ripple};return React.createElement(React.Fragment,null,gap>0&&index>0?React.createElement(Separator,{width:gap}):null,renderTabBarItem?renderTabBarItem(props):React.createElement(_TabBarItem.TabBarItem,props));},[activeColor,android_ripple,gap,getAccessibilityLabel,getAccessible,getLabelText,getTestID,inactiveColor,isWidthDynamic,jumpTo,labelStyle,layout,navigationState,onTabLongPress,onTabPress,position,pressColor,pressOpacity,renderBadge,renderIcon,renderLabel,renderTabBarItem,routes,scrollEnabled,tabStyle,tabWidths]);var keyExtractor=React.useCallback(function(item){return item.key;},[]);var contentContainerStyleMemoized=React.useMemo(function(){return[styles.tabContent,scrollEnabled?{width:tabBarWidth>separatorsWidth?tabBarWidth:tabBarWidthPercent}:styles.container,contentContainerStyle];},[contentContainerStyle,scrollEnabled,separatorsWidth,tabBarWidth,tabBarWidthPercent]);var handleScroll=React.useMemo(function(){return _reactNative.Animated.event([{nativeEvent:{contentOffset:{x:scrollAmount}}}],{useNativeDriver:true});},[scrollAmount]);var handleViewableItemsChanged=(0,_useLatestCallback.default)(function(_ref11){var changed=_ref11.changed;if(routes.length<=MEASURE_PER_BATCH){return;}var item=changed[changed.length-1];var index=(item===null||item===void 0?void 0:item.index)||0;if(item.isViewable&&(index%10===0||index===navigationState.index||index===routes.length-1)){setTabWidths((0,_extends2.default)({},measuredTabWidths.current));}});return React.createElement(_reactNative.Animated.View,{onLayout:handleLayout,style:[styles.tabBar,style]},React.createElement(_reactNative.Animated.View,{pointerEvents:\"none\",style:[styles.indicatorContainer,scrollEnabled?{transform:[{translateX:translateX}]}:null,tabBarWidth>separatorsWidth?{width:tabBarWidth-separatorsWidth}:scrollEnabled?{width:tabBarWidthPercent}:null,indicatorContainerStyle]},renderIndicator({position:position,layout:layout,navigationState:navigationState,jumpTo:jumpTo,width:isWidthDynamic?'auto':(100-separatorPercent)/routes.length+\"%\",style:indicatorStyle,getTabWidth:function getTabWidth(i){return getComputedTabWidth(i,layout,routes,scrollEnabled,tabWidths,flattenedTabWidth);},gap:gap})),React.createElement(_reactNative.View,{style:styles.scroll},React.createElement(_reactNative.Animated.FlatList,{data:routes,keyExtractor:keyExtractor,horizontal:true,accessibilityRole:\"tablist\",keyboardShouldPersistTaps:\"handled\",scrollEnabled:scrollEnabled,bounces:bounces,initialNumToRender:MEASURE_PER_BATCH,onViewableItemsChanged:handleViewableItemsChanged,alwaysBounceHorizontal:false,scrollsToTop:false,showsHorizontalScrollIndicator:false,showsVerticalScrollIndicator:false,automaticallyAdjustContentInsets:false,overScrollMode:\"never\",contentContainerStyle:contentContainerStyleMemoized,scrollEventThrottle:16,renderItem:renderItem,onScroll:handleScroll,ref:flatListRef,testID:testID})));}var styles=_reactNative.StyleSheet.create({container:{flex:1},scroll:{overflow:_reactNative.Platform.select({default:'scroll',web:undefined})},tabBar:{backgroundColor:'#2196f3',elevation:4,shadowColor:'black',shadowOpacity:0.1,shadowRadius:_reactNative.StyleSheet.hairlineWidth,shadowOffset:{height:_reactNative.StyleSheet.hairlineWidth,width:0},zIndex:1},tabContent:{flexDirection:'row',flexWrap:'nowrap'},indicatorContainer:{position:'absolute',top:0,left:0,right:0,bottom:0}});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_useLatestCallback","_interopRequireDefault","_TabBarIndicator","_TabBarItem","_useAnimatedValue","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Separator","_ref","width","createElement","View","style","getFlattenedTabWidth","tabStyle","StyleSheet","flatten","getComputedTabWidth","index","layout","routes","scrollEnabled","tabWidths","flattenedWidth","key","endsWith","parseFloat","Number","isFinite","length","getMaxScrollDistance","tabBarWidth","layoutWidth","getTranslateX","scrollAmount","maxScrollDistance","Animated","multiply","Platform","OS","I18nManager","isRTL","add","getTabBarWidth","_ref2","navigationState","gap","flattenedTabWidth","reduce","acc","_","normalizeScrollValue","_ref3","value","maxDistance","scrollValue","Math","max","min","getScrollAmount","_ref4","centerDistance","Array","from","total","tabWidth","getLabelTextDefault","_ref5","route","title","getAccessibleDefault","_ref6","accessible","getAccessibilityLabelDefault","_ref7","accessibilityLabel","undefined","renderIndicatorDefault","props","TabBarIndicator","getTestIdDefault","_ref8","testID","MEASURE_PER_BATCH","TabBar","_ref9","_ref9$getLabelText","getLabelText","_ref9$getAccessible","getAccessible","_ref9$getAccessibilit","getAccessibilityLabel","_ref9$getTestID","getTestID","_ref9$renderIndicator","renderIndicator","_ref9$gap","jumpTo","position","activeColor","bounces","contentContainerStyle","inactiveColor","indicatorContainerStyle","indicatorStyle","labelStyle","onTabLongPress","onTabPress","pressColor","pressOpacity","renderBadge","renderIcon","renderLabel","renderTabBarItem","android_ripple","_React$useState","useState","height","_React$useState2","_slicedToArray2","setLayout","_React$useState3","_React$useState4","setTabWidths","flatListRef","useRef","isFirst","useAnimatedValue","measuredTabWidths","isWidthDynamic","scrollOffset","hasMeasuredTabWidths","Boolean","slice","every","useEffect","current","_flatListRef$current","scrollToOffset","offset","animated","handleLayout","_e$nativeEvent$layout","nativeEvent","separatorsWidth","separatorPercent","tabBarWidthPercent","translateX","useMemo","renderItem","useCallback","_ref10","item","onLayout","_extends2","onPress","event","defaultPrevented","preventDefault","onLongPress","defaultTabWidth","Fragment","TabBarItem","keyExtractor","contentContainerStyleMemoized","styles","tabContent","container","handleScroll","contentOffset","x","useNativeDriver","handleViewableItemsChanged","useLatestCallback","_ref11","changed","isViewable","tabBar","pointerEvents","indicatorContainer","transform","getTabWidth","scroll","FlatList","data","horizontal","accessibilityRole","keyboardShouldPersistTaps","initialNumToRender","onViewableItemsChanged","alwaysBounceHorizontal","scrollsToTop","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","automaticallyAdjustContentInsets","overScrollMode","scrollEventThrottle","onScroll","ref","create","flex","overflow","select","web","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-tab-view/src/TabBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  FlatList,\n  I18nManager,\n  LayoutChangeEvent,\n  ListRenderItemInfo,\n  Platform,\n  PressableAndroidRippleConfig,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n  ViewToken,\n} from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { Props as IndicatorProps, TabBarIndicator } from './TabBarIndicator';\nimport { Props as TabBarItemProps, TabBarItem } from './TabBarItem';\nimport type {\n  Event,\n  Layout,\n  NavigationState,\n  Route,\n  Scene,\n  SceneRendererProps,\n} from './types';\nimport { useAnimatedValue } from './useAnimatedValue';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText?: (scene: Scene<T>) => string | undefined;\n  getAccessible?: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel?: (scene: Scene<T>) => string | undefined;\n  getTestID?: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator?: (props: IndicatorProps<T>) => React.ReactNode;\n  renderTabBarItem?: (\n    props: TabBarItemProps<T> & { key: string }\n  ) => React.ReactElement;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  gap?: number;\n  testID?: string;\n  android_ripple?: PressableAndroidRippleConfig;\n};\n\ntype FlattenedTabWidth = string | number | undefined;\n\nconst Separator = ({ width }: { width: number }) => {\n  return <View style={{ width }} />;\n};\n\nconst getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n  const tabStyle = StyleSheet.flatten(style);\n\n  return tabStyle?.width;\n};\n\nconst getComputedTabWidth = (\n  index: number,\n  layout: Layout,\n  routes: Route[],\n  scrollEnabled: boolean | undefined,\n  tabWidths: { [key: string]: number },\n  flattenedWidth: FlattenedTabWidth\n) => {\n  if (flattenedWidth === 'auto') {\n    return tabWidths[routes[index].key] || 0;\n  }\n\n  switch (typeof flattenedWidth) {\n    case 'number':\n      return flattenedWidth;\n    case 'string':\n      if (flattenedWidth.endsWith('%')) {\n        const width = parseFloat(flattenedWidth);\n        if (Number.isFinite(width)) {\n          return layout.width * (width / 100);\n        }\n      }\n  }\n\n  if (scrollEnabled) {\n    return (layout.width / 5) * 2;\n  }\n  return layout.width / routes.length;\n};\n\nconst getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n  tabBarWidth - layoutWidth;\n\nconst getTranslateX = (\n  scrollAmount: Animated.Value,\n  maxScrollDistance: number\n) =>\n  Animated.multiply(\n    Platform.OS === 'android' && I18nManager.isRTL\n      ? Animated.add(maxScrollDistance, Animated.multiply(scrollAmount, -1))\n      : scrollAmount,\n    I18nManager.isRTL ? 1 : -1\n  );\n\nconst getTabBarWidth = <T extends Route>({\n  navigationState,\n  layout,\n  gap,\n  scrollEnabled,\n  flattenedTabWidth,\n  tabWidths,\n}: Pick<Props<T>, 'navigationState' | 'gap' | 'layout' | 'scrollEnabled'> & {\n  tabWidths: Record<string, number>;\n  flattenedTabWidth: FlattenedTabWidth;\n}) => {\n  const { routes } = navigationState;\n\n  return routes.reduce<number>(\n    (acc, _, i) =>\n      acc +\n      (i > 0 ? gap ?? 0 : 0) +\n      getComputedTabWidth(\n        i,\n        layout,\n        routes,\n        scrollEnabled,\n        tabWidths,\n        flattenedTabWidth\n      ),\n    0\n  );\n};\n\nconst normalizeScrollValue = <T extends Route>({\n  layout,\n  navigationState,\n  gap,\n  scrollEnabled,\n  tabWidths,\n  value,\n  flattenedTabWidth,\n}: Pick<Props<T>, 'layout' | 'navigationState' | 'gap' | 'scrollEnabled'> & {\n  tabWidths: Record<string, number>;\n  value: number;\n  flattenedTabWidth: FlattenedTabWidth;\n}) => {\n  const tabBarWidth = getTabBarWidth({\n    layout,\n    navigationState,\n    tabWidths,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n  const maxDistance = getMaxScrollDistance(tabBarWidth, layout.width);\n  const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n  if (Platform.OS === 'android' && I18nManager.isRTL) {\n    // On Android, scroll value is not applied in reverse in RTL\n    // so we need to manually adjust it to apply correct value\n    return maxDistance - scrollValue;\n  }\n\n  return scrollValue;\n};\n\nconst getScrollAmount = <T extends Route>({\n  layout,\n  navigationState,\n  gap,\n  scrollEnabled,\n  flattenedTabWidth,\n  tabWidths,\n}: Pick<Props<T>, 'layout' | 'navigationState' | 'scrollEnabled' | 'gap'> & {\n  tabWidths: Record<string, number>;\n  flattenedTabWidth: FlattenedTabWidth;\n}) => {\n  const centerDistance = Array.from({\n    length: navigationState.index + 1,\n  }).reduce<number>((total, _, i) => {\n    const tabWidth = getComputedTabWidth(\n      i,\n      layout,\n      navigationState.routes,\n      scrollEnabled,\n      tabWidths,\n      flattenedTabWidth\n    );\n\n    // To get the current index centered we adjust scroll amount by width of indexes\n    // 0 through (i - 1) and add half the width of current index i\n    return (\n      total +\n      (navigationState.index === i\n        ? (tabWidth + (gap ?? 0)) / 2\n        : tabWidth + (gap ?? 0))\n    );\n  }, 0);\n\n  const scrollAmount = centerDistance - layout.width / 2;\n\n  return normalizeScrollValue({\n    layout,\n    navigationState,\n    tabWidths,\n    value: scrollAmount,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n};\n\nconst getLabelTextDefault = ({ route }: Scene<Route>) => route.title;\n\nconst getAccessibleDefault = ({ route }: Scene<Route>) =>\n  typeof route.accessible !== 'undefined' ? route.accessible : true;\n\nconst getAccessibilityLabelDefault = ({ route }: Scene<Route>) =>\n  typeof route.accessibilityLabel === 'string'\n    ? route.accessibilityLabel\n    : typeof route.title === 'string'\n    ? route.title\n    : undefined;\n\nconst renderIndicatorDefault = (props: IndicatorProps<Route>) => (\n  <TabBarIndicator {...props} />\n);\n\nconst getTestIdDefault = ({ route }: Scene<Route>) => route.testID;\n\n// How many items measurements should we update per batch.\n// Defaults to 10, since that's whats FlatList is using in initialNumToRender.\nconst MEASURE_PER_BATCH = 10;\n\nexport function TabBar<T extends Route>({\n  getLabelText = getLabelTextDefault,\n  getAccessible = getAccessibleDefault,\n  getAccessibilityLabel = getAccessibilityLabelDefault,\n  getTestID = getTestIdDefault,\n  renderIndicator = renderIndicatorDefault,\n  gap = 0,\n  scrollEnabled,\n  jumpTo,\n  navigationState,\n  position,\n  activeColor,\n  bounces,\n  contentContainerStyle,\n  inactiveColor,\n  indicatorContainerStyle,\n  indicatorStyle,\n  labelStyle,\n  onTabLongPress,\n  onTabPress,\n  pressColor,\n  pressOpacity,\n  renderBadge,\n  renderIcon,\n  renderLabel,\n  renderTabBarItem,\n  style,\n  tabStyle,\n  testID,\n  android_ripple,\n}: Props<T>) {\n  const [layout, setLayout] = React.useState<Layout>({ width: 0, height: 0 });\n  const [tabWidths, setTabWidths] = React.useState<Record<string, number>>({});\n  const flatListRef = React.useRef<FlatList | null>(null);\n  const isFirst = React.useRef(true);\n  const scrollAmount = useAnimatedValue(0);\n  const measuredTabWidths = React.useRef<Record<string, number>>({});\n\n  const { routes } = navigationState;\n  const flattenedTabWidth = getFlattenedTabWidth(tabStyle);\n  const isWidthDynamic = flattenedTabWidth === 'auto';\n  const scrollOffset = getScrollAmount({\n    layout,\n    navigationState,\n    tabWidths,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n\n  const hasMeasuredTabWidths =\n    Boolean(layout.width) &&\n    routes\n      .slice(0, navigationState.index)\n      .every((r) => typeof tabWidths[r.key] === 'number');\n\n  React.useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    if (isWidthDynamic && !hasMeasuredTabWidths) {\n      return;\n    }\n\n    if (scrollEnabled) {\n      flatListRef.current?.scrollToOffset({\n        offset: scrollOffset,\n        animated: true,\n      });\n    }\n  }, [hasMeasuredTabWidths, isWidthDynamic, scrollEnabled, scrollOffset]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) =>\n      layout.width === width && layout.height === height\n        ? layout\n        : { width, height }\n    );\n  };\n\n  const tabBarWidth = getTabBarWidth({\n    layout,\n    navigationState,\n    tabWidths,\n    gap,\n    scrollEnabled,\n    flattenedTabWidth,\n  });\n\n  const separatorsWidth = Math.max(0, routes.length - 1) * gap;\n  const separatorPercent = (separatorsWidth / tabBarWidth) * 100;\n  const tabBarWidthPercent = `${routes.length * 40}%`;\n\n  const translateX = React.useMemo(\n    () =>\n      getTranslateX(\n        scrollAmount,\n        getMaxScrollDistance(tabBarWidth, layout.width)\n      ),\n    [layout.width, scrollAmount, tabBarWidth]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: route, index }: ListRenderItemInfo<T>) => {\n      const props: TabBarItemProps<T> & { key: string } = {\n        key: route.key,\n        position: position,\n        route: route,\n        navigationState: navigationState,\n        getAccessibilityLabel: getAccessibilityLabel,\n        getAccessible: getAccessible,\n        getLabelText: getLabelText,\n        getTestID: getTestID,\n        renderBadge: renderBadge,\n        renderIcon: renderIcon,\n        renderLabel: renderLabel,\n        activeColor: activeColor,\n        inactiveColor: inactiveColor,\n        pressColor: pressColor,\n        pressOpacity: pressOpacity,\n        onLayout: isWidthDynamic\n          ? (e: LayoutChangeEvent) => {\n              measuredTabWidths.current[route.key] = e.nativeEvent.layout.width;\n\n              // When we have measured widths for all of the tabs, we should updates the state\n              // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n              // If we have more than 10 routes divide updating tabWidths into multiple batches. Here we update only first batch of 10 items.\n              if (\n                routes.length > MEASURE_PER_BATCH &&\n                index === MEASURE_PER_BATCH &&\n                routes\n                  .slice(0, MEASURE_PER_BATCH)\n                  .every(\n                    (r) => typeof measuredTabWidths.current[r.key] === 'number'\n                  )\n              ) {\n                setTabWidths({ ...measuredTabWidths.current });\n              } else if (\n                routes.every(\n                  (r) => typeof measuredTabWidths.current[r.key] === 'number'\n                )\n              ) {\n                // When we have measured widths for all of the tabs, we should updates the state\n                // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                setTabWidths({ ...measuredTabWidths.current });\n              }\n            }\n          : undefined,\n        onPress: () => {\n          const event: Scene<T> & Event = {\n            route,\n            defaultPrevented: false,\n            preventDefault: () => {\n              event.defaultPrevented = true;\n            },\n          };\n\n          onTabPress?.(event);\n\n          if (event.defaultPrevented) {\n            return;\n          }\n\n          jumpTo(route.key);\n        },\n        onLongPress: () => onTabLongPress?.({ route }),\n        labelStyle: labelStyle,\n        style: tabStyle,\n        // Calculate the deafult width for tab for FlatList to work\n        defaultTabWidth: !isWidthDynamic\n          ? getComputedTabWidth(\n              index,\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              getFlattenedTabWidth(tabStyle)\n            )\n          : undefined,\n        android_ripple,\n      };\n\n      return (\n        <>\n          {gap > 0 && index > 0 ? <Separator width={gap} /> : null}\n          {renderTabBarItem ? (\n            renderTabBarItem(props)\n          ) : (\n            <TabBarItem {...props} />\n          )}\n        </>\n      );\n    },\n    [\n      activeColor,\n      android_ripple,\n      gap,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      inactiveColor,\n      isWidthDynamic,\n      jumpTo,\n      labelStyle,\n      layout,\n      navigationState,\n      onTabLongPress,\n      onTabPress,\n      position,\n      pressColor,\n      pressOpacity,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      renderTabBarItem,\n      routes,\n      scrollEnabled,\n      tabStyle,\n      tabWidths,\n    ]\n  );\n\n  const keyExtractor = React.useCallback((item: T) => item.key, []);\n\n  const contentContainerStyleMemoized = React.useMemo(\n    () => [\n      styles.tabContent,\n      scrollEnabled\n        ? {\n            width:\n              tabBarWidth > separatorsWidth ? tabBarWidth : tabBarWidthPercent,\n          }\n        : styles.container,\n      contentContainerStyle,\n    ],\n    [\n      contentContainerStyle,\n      scrollEnabled,\n      separatorsWidth,\n      tabBarWidth,\n      tabBarWidthPercent,\n    ]\n  );\n\n  const handleScroll = React.useMemo(\n    () =>\n      Animated.event(\n        [\n          {\n            nativeEvent: {\n              contentOffset: { x: scrollAmount },\n            },\n          },\n        ],\n        { useNativeDriver: true }\n      ),\n    [scrollAmount]\n  );\n\n  const handleViewableItemsChanged = useLatestCallback(\n    ({ changed }: { changed: ViewToken[] }) => {\n      if (routes.length <= MEASURE_PER_BATCH) {\n        return;\n      }\n      // Get next vievable item\n      const item = changed[changed.length - 1];\n      const index = item?.index || 0;\n      if (\n        item.isViewable &&\n        (index % 10 === 0 ||\n          index === navigationState.index ||\n          index === routes.length - 1)\n      ) {\n        setTabWidths({ ...measuredTabWidths.current });\n      }\n    }\n  );\n\n  return (\n    <Animated.View onLayout={handleLayout} style={[styles.tabBar, style]}>\n      <Animated.View\n        pointerEvents=\"none\"\n        style={[\n          styles.indicatorContainer,\n          scrollEnabled ? { transform: [{ translateX }] as any } : null,\n          tabBarWidth > separatorsWidth\n            ? { width: tabBarWidth - separatorsWidth }\n            : scrollEnabled\n            ? { width: tabBarWidthPercent }\n            : null,\n          indicatorContainerStyle,\n        ]}\n      >\n        {renderIndicator({\n          position,\n          layout,\n          navigationState,\n          jumpTo,\n          width: isWidthDynamic\n            ? 'auto'\n            : `${(100 - separatorPercent) / routes.length}%`,\n          style: indicatorStyle,\n          getTabWidth: (i: number) =>\n            getComputedTabWidth(\n              i,\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              flattenedTabWidth\n            ),\n          gap,\n        })}\n      </Animated.View>\n      <View style={styles.scroll}>\n        <Animated.FlatList\n          data={routes as Animated.WithAnimatedValue<T>[]}\n          keyExtractor={keyExtractor}\n          horizontal\n          accessibilityRole=\"tablist\"\n          keyboardShouldPersistTaps=\"handled\"\n          scrollEnabled={scrollEnabled}\n          bounces={bounces}\n          initialNumToRender={MEASURE_PER_BATCH}\n          onViewableItemsChanged={handleViewableItemsChanged}\n          alwaysBounceHorizontal={false}\n          scrollsToTop={false}\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          automaticallyAdjustContentInsets={false}\n          overScrollMode=\"never\"\n          contentContainerStyle={contentContainerStyleMemoized}\n          scrollEventThrottle={16}\n          renderItem={renderItem}\n          onScroll={handleScroll}\n          ref={flatListRef}\n          testID={testID}\n        />\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.select({ default: 'scroll', web: undefined }),\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"mappings":"8UAAA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WACA,IAAAC,YAAA,CAAAD,OAAA,iBAeA,IAAAE,kBAAA,CAAAC,sBAAA,CAAAH,OAAA,yBAEA,IAAAI,gBAAA,CAAAJ,OAAA,sBACA,IAAAK,WAAA,CAAAL,OAAA,iBASA,IAAAM,iBAAA,CAAAN,OAAA,uBAAqD,SAAAO,yBAAAC,CAAA,wBAAAC,OAAA,iBAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAF,wBAAA,UAAAA,yBAAAC,CAAA,SAAAA,CAAA,CAAAG,CAAA,CAAAD,CAAA,IAAAF,CAAA,YAAAT,wBAAAS,CAAA,CAAAE,CAAA,MAAAA,CAAA,EAAAF,CAAA,EAAAA,CAAA,CAAAI,UAAA,QAAAJ,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAK,OAAA,CAAAL,CAAA,MAAAG,CAAA,CAAAJ,wBAAA,CAAAG,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,SAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,MAAAQ,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAd,CAAA,gBAAAc,CAAA,EAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,CAAAc,CAAA,OAAAI,CAAA,CAAAR,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,CAAAc,CAAA,OAAAI,CAAA,GAAAA,CAAA,CAAAX,GAAA,EAAAW,CAAA,CAAAC,GAAA,EAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAI,CAAA,EAAAV,CAAA,CAAAM,CAAA,EAAAd,CAAA,CAAAc,CAAA,UAAAN,CAAA,CAAAH,OAAA,CAAAL,CAAA,CAAAG,CAAA,EAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,CAAAQ,CAAA,EAAAA,CAAA,EA8CrD,GAAM,CAAAY,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAGC,IAAA,CAAkC,IAA/B,CAAAC,KAAA,CAA0BD,IAAA,CAA1BC,KAAA,CACnB,MAAO,CAAAhC,KAAA,CAAAiC,aAAA,CAACC,iBAAI,EAACC,KAAK,CAAE,CAAEH,KAAA,CAAAA,KAAM,CAAE,EAAG,CACnC,CAAC,CAED,GAAM,CAAAI,oBAAoB,CAAI,QAAxB,CAAAA,oBAAoBA,CAAID,KAA2B,CAAK,CAC5D,GAAM,CAAAE,QAAQ,CAAGC,uBAAU,CAACC,OAAO,CAACJ,KAAK,CAAC,CAE1C,MAAO,CAAAE,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEL,KAAK,CACxB,CAAC,CAED,GAAM,CAAAQ,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CACvBC,KAAa,CACbC,MAAc,CACdC,MAAe,CACfC,aAAkC,CAClCC,SAAoC,CACpCC,cAAiC,CAC9B,CACH,GAAIA,cAAc,GAAK,MAAM,CAAE,CAC7B,MAAO,CAAAD,SAAS,CAACF,MAAM,CAACF,KAAK,CAAC,CAACM,GAAG,CAAC,EAAI,CAAC,CAC1C,CAEA,OAAQ,MAAO,CAAAD,cAAc,EAC3B,IAAK,QAAQ,CACX,MAAO,CAAAA,cAAc,CACvB,IAAK,QAAQ,CACX,GAAIA,cAAc,CAACE,QAAQ,CAAC,GAAG,CAAC,CAAE,CAChC,GAAM,CAAAhB,KAAK,CAAGiB,UAAU,CAACH,cAAc,CAAC,CACxC,GAAII,MAAM,CAACC,QAAQ,CAACnB,KAAK,CAAC,CAAE,CAC1B,MAAO,CAAAU,MAAM,CAACV,KAAK,EAAIA,KAAK,CAAG,GAAG,CAAC,CACrC,CACF,CAAC,CAGL,GAAIY,aAAa,CAAE,CACjB,MAAQ,CAAAF,MAAM,CAACV,KAAK,CAAG,CAAC,CAAI,CAAC,CAC/B,CACA,MAAO,CAAAU,MAAM,CAACV,KAAK,CAAGW,MAAM,CAACS,MAAM,CACrC,CAAC,CAED,GAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAIC,WAAmB,CAAEC,WAAmB,QACpE,CAAAD,WAAW,CAAGC,WAAW,GAE3B,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CACjBC,YAA4B,CAC5BC,iBAAyB,QAEzB,CAAAC,qBAAQ,CAACC,QAAQ,CACfC,qBAAQ,CAACC,EAAE,GAAK,SAAS,EAAIC,wBAAW,CAACC,KAAK,CAC1CL,qBAAQ,CAACM,GAAG,CAACP,iBAAiB,CAAEC,qBAAQ,CAACC,QAAQ,CAACH,YAAY,CAAE,CAAC,CAAC,CAAC,CAAC,CACpEA,YAAY,CAChBM,wBAAW,CAACC,KAAK,CAAG,CAAC,CAAG,CAAC,CAAC,CAC3B,GAEH,GAAM,CAAAE,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGC,KAAA,CAUjB,IATJ,CAAAC,eAAe,CAShBD,KAAA,CATCC,eAAe,CACf1B,MAAM,CAQPyB,KAAA,CARCzB,MAAM,CACN2B,GAAG,CAOJF,KAAA,CAPCE,GAAG,CACHzB,aAAa,CAMduB,KAAA,CANCvB,aAAa,CACb0B,iBAAiB,CAKlBH,KAAA,CALCG,iBAAiB,CACjBzB,SAAA,CAIDsB,KAAA,CAJCtB,SAAA,CAKA,GAAQ,CAAAF,MAAA,CAAWyB,eAAe,CAA1BzB,MAAA,CAER,MAAO,CAAAA,MAAM,CAAC4B,MAAM,CAClB,SAACC,GAAG,CAAEC,CAAC,CAAE7C,CAAC,QACR,CAAA4C,GAAG,EACF5C,CAAC,CAAG,CAAC,CAAGyC,GAAG,OAAHA,GAAG,CAAI,CAAC,CAAG,CAAC,CAAC,CACtB7B,mBAAmB,CACjBZ,CAAC,CACDc,MAAM,CACNC,MAAM,CACNC,aAAa,CACbC,SAAS,CACTyB,iBAAiB,CAClB,GACH,CAAC,CACF,CACH,CAAC,CAED,GAAM,CAAAI,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAGC,KAAA,CAYvB,IAXJ,CAAAjC,MAAM,CAWPiC,KAAA,CAXCjC,MAAM,CACN0B,eAAe,CAUhBO,KAAA,CAVCP,eAAe,CACfC,GAAG,CASJM,KAAA,CATCN,GAAG,CACHzB,aAAa,CAQd+B,KAAA,CARC/B,aAAa,CACbC,SAAS,CAOV8B,KAAA,CAPC9B,SAAS,CACT+B,KAAK,CAMND,KAAA,CANCC,KAAK,CACLN,iBAAA,CAKDK,KAAA,CALCL,iBAAA,CAMA,GAAM,CAAAhB,WAAW,CAAGY,cAAc,CAAC,CACjCxB,MAAM,CAANA,MAAM,CACN0B,eAAe,CAAfA,eAAe,CACfvB,SAAS,CAATA,SAAS,CACTwB,GAAG,CAAHA,GAAG,CACHzB,aAAa,CAAbA,aAAa,CACb0B,iBAAA,CAAAA,iBACF,CAAC,CAAC,CACF,GAAM,CAAAO,WAAW,CAAGxB,oBAAoB,CAACC,WAAW,CAAEZ,MAAM,CAACV,KAAK,CAAC,CACnE,GAAM,CAAA8C,WAAW,CAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACL,KAAK,CAAEC,WAAW,CAAC,CAAE,CAAC,CAAC,CAE7D,GAAIhB,qBAAQ,CAACC,EAAE,GAAK,SAAS,EAAIC,wBAAW,CAACC,KAAK,CAAE,CAGlD,MAAO,CAAAa,WAAW,CAAGC,WAAW,CAClC,CAEA,MAAO,CAAAA,WAAW,CACpB,CAAC,CAED,GAAM,CAAAI,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAGC,KAAA,CAUlB,IATJ,CAAAzC,MAAM,CASPyC,KAAA,CATCzC,MAAM,CACN0B,eAAe,CAQhBe,KAAA,CARCf,eAAe,CACfC,GAAG,CAOJc,KAAA,CAPCd,GAAG,CACHzB,aAAa,CAMduC,KAAA,CANCvC,aAAa,CACb0B,iBAAiB,CAKlBa,KAAA,CALCb,iBAAiB,CACjBzB,SAAA,CAIDsC,KAAA,CAJCtC,SAAA,CAKA,GAAM,CAAAuC,cAAc,CAAGC,KAAK,CAACC,IAAI,CAAC,CAChClC,MAAM,CAAEgB,eAAe,CAAC3B,KAAK,CAAG,CAClC,CAAC,CAAC,CAAC8B,MAAM,CAAS,SAACgB,KAAK,CAAEd,CAAC,CAAE7C,CAAC,CAAK,CACjC,GAAM,CAAA4D,QAAQ,CAAGhD,mBAAmB,CAClCZ,CAAC,CACDc,MAAM,CACN0B,eAAe,CAACzB,MAAM,CACtBC,aAAa,CACbC,SAAS,CACTyB,iBAAiB,CAClB,CAID,MACE,CAAAiB,KAAK,EACJnB,eAAe,CAAC3B,KAAK,GAAKb,CAAC,CACxB,CAAC4D,QAAQ,EAAInB,GAAG,OAAHA,GAAG,CAAI,CAAC,CAAC,EAAI,CAAC,CAC3BmB,QAAQ,EAAInB,GAAG,OAAHA,GAAG,CAAI,CAAC,CAAC,CAAC,CAE9B,CAAC,CAAE,CAAC,CAAC,CAEL,GAAM,CAAAZ,YAAY,CAAG2B,cAAc,CAAG1C,MAAM,CAACV,KAAK,CAAG,CAAC,CAEtD,MAAO,CAAA0C,oBAAoB,CAAC,CAC1BhC,MAAM,CAANA,MAAM,CACN0B,eAAe,CAAfA,eAAe,CACfvB,SAAS,CAATA,SAAS,CACT+B,KAAK,CAAEnB,YAAY,CACnBY,GAAG,CAAHA,GAAG,CACHzB,aAAa,CAAbA,aAAa,CACb0B,iBAAA,CAAAA,iBACF,CAAC,CAAC,CACJ,CAAC,CAED,GAAM,CAAAmB,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAGC,KAAA,KAAG,CAAAC,KAAA,CAAqBD,KAAA,CAArBC,KAAA,CAAqB,MAAK,CAAAA,KAAK,CAACC,KAAK,GAEpE,GAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAGC,KAAA,KAAG,CAAAH,KAAA,CAAqBG,KAAA,CAArBH,KAAA,CAAqB,MACnD,OAAO,CAAAA,KAAK,CAACI,UAAU,GAAK,WAAW,CAAGJ,KAAK,CAACI,UAAU,CAAG,IAAI,GAEnE,GAAM,CAAAC,4BAA4B,CAAG,QAA/B,CAAAA,4BAA4BA,CAAGC,KAAA,KAAG,CAAAN,KAAA,CAAqBM,KAAA,CAArBN,KAAA,CAAqB,MAC3D,OAAO,CAAAA,KAAK,CAACO,kBAAkB,GAAK,QAAQ,CACxCP,KAAK,CAACO,kBAAkB,CACxB,MAAO,CAAAP,KAAK,CAACC,KAAK,GAAK,QAAQ,CAC/BD,KAAK,CAACC,KAAK,CACXO,SAAS,GAEf,GAAM,CAAAC,sBAAsB,CAAI,QAA1B,CAAAA,sBAAsBA,CAAIC,KAA4B,QAC1D,CAAArG,KAAA,CAAAiC,aAAA,CAACqE,gCAAe,CAAKD,KAAK,CAC3B,GAED,GAAM,CAAAE,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAGC,KAAA,KAAG,CAAAb,KAAA,CAAqBa,KAAA,CAArBb,KAAA,CAAqB,MAAK,CAAAA,KAAK,CAACc,MAAM,GAIlE,GAAM,CAAAC,iBAAiB,CAAG,EAAE,CAErB,QAAS,CAAAC,MAAMA,CAAAC,KAAA,CA8BT,KAAAC,kBAAA,CAAFD,KAAA,CA7BTE,YAAY,CAAZA,YAAY,CAAAD,kBAAA,UAAGpB,mBAAmB,CAAAoB,kBAAA,CAAAE,mBAAA,CA6BzBH,KAAA,CA5BTI,aAAa,CAAbA,aAAa,CAAAD,mBAAA,UAAGlB,oBAAoB,CAAAkB,mBAAA,CAAAE,qBAAA,CA4B3BL,KAAA,CA3BTM,qBAAqB,CAArBA,qBAAqB,CAAAD,qBAAA,UAAGjB,4BAA4B,CAAAiB,qBAAA,CAAAE,eAAA,CA2B3CP,KAAA,CA1BTQ,SAAS,CAATA,SAAS,CAAAD,eAAA,UAAGZ,gBAAgB,CAAAY,eAAA,CAAAE,qBAAA,CA0BnBT,KAAA,CAzBTU,eAAe,CAAfA,eAAe,CAAAD,qBAAA,UAAGjB,sBAAsB,CAAAiB,qBAAA,CAAAE,SAAA,CAyB/BX,KAAA,CAxBTvC,GAAG,CAAHA,GAAG,CAAAkD,SAAA,UAAG,CAAC,CAAAA,SAAA,CACP3E,aAAa,CAuBJgE,KAAA,CAvBThE,aAAa,CACb4E,MAAM,CAsBGZ,KAAA,CAtBTY,MAAM,CACNpD,eAAe,CAqBNwC,KAAA,CArBTxC,eAAe,CACfqD,QAAQ,CAoBCb,KAAA,CApBTa,QAAQ,CACRC,WAAW,CAmBFd,KAAA,CAnBTc,WAAW,CACXC,OAAO,CAkBEf,KAAA,CAlBTe,OAAO,CACPC,qBAAqB,CAiBZhB,KAAA,CAjBTgB,qBAAqB,CACrBC,aAAa,CAgBJjB,KAAA,CAhBTiB,aAAa,CACbC,uBAAuB,CAedlB,KAAA,CAfTkB,uBAAuB,CACvBC,cAAc,CAcLnB,KAAA,CAdTmB,cAAc,CACdC,UAAU,CAaDpB,KAAA,CAbToB,UAAU,CACVC,cAAc,CAYLrB,KAAA,CAZTqB,cAAc,CACdC,UAAU,CAWDtB,KAAA,CAXTsB,UAAU,CACVC,UAAU,CAUDvB,KAAA,CAVTuB,UAAU,CACVC,YAAY,CASHxB,KAAA,CATTwB,YAAY,CACZC,WAAW,CAQFzB,KAAA,CARTyB,WAAW,CACXC,UAAU,CAOD1B,KAAA,CAPT0B,UAAU,CACVC,WAAW,CAMF3B,KAAA,CANT2B,WAAW,CACXC,gBAAgB,CAKP5B,KAAA,CALT4B,gBAAgB,CAChBrG,KAAK,CAIIyE,KAAA,CAJTzE,KAAK,CACLE,QAAQ,CAGCuE,KAAA,CAHTvE,QAAQ,CACRoE,MAAM,CAEGG,KAAA,CAFTH,MAAM,CACNgC,cAAA,CACS7B,KAAA,CADT6B,cAAA,CAEA,IAAAC,eAAA,CAA4B1I,KAAK,CAAC2I,QAAQ,CAAS,CAAE3G,KAAK,CAAE,CAAC,CAAE4G,MAAM,CAAE,CAAE,CAAC,CAAC,CAAAC,gBAAA,IAAAC,eAAA,CAAA/H,OAAA,EAAA2H,eAAA,IAApEhG,MAAM,CAAAmG,gBAAA,IAAEE,SAAS,CAAAF,gBAAA,IACxB,IAAAG,gBAAA,CAAkChJ,KAAK,CAAC2I,QAAQ,CAAyB,CAAC,CAAC,CAAC,CAAAM,gBAAA,IAAAH,eAAA,CAAA/H,OAAA,EAAAiI,gBAAA,IAArEnG,SAAS,CAAAoG,gBAAA,IAAEC,YAAY,CAAAD,gBAAA,IAC9B,GAAM,CAAAE,WAAW,CAAGnJ,KAAK,CAACoJ,MAAM,CAAkB,IAAI,CAAC,CACvD,GAAM,CAAAC,OAAO,CAAGrJ,KAAK,CAACoJ,MAAM,CAAC,IAAI,CAAC,CAClC,GAAM,CAAA3F,YAAY,CAAG,GAAA6F,kCAAgB,EAAC,CAAC,CAAC,CACxC,GAAM,CAAAC,iBAAiB,CAAGvJ,KAAK,CAACoJ,MAAM,CAAyB,CAAC,CAAC,CAAC,CAElE,GAAQ,CAAAzG,MAAA,CAAWyB,eAAe,CAA1BzB,MAAA,CACR,GAAM,CAAA2B,iBAAiB,CAAGlC,oBAAoB,CAACC,QAAQ,CAAC,CACxD,GAAM,CAAAmH,cAAc,CAAGlF,iBAAiB,GAAK,MAAM,CACnD,GAAM,CAAAmF,YAAY,CAAGvE,eAAe,CAAC,CACnCxC,MAAM,CAANA,MAAM,CACN0B,eAAe,CAAfA,eAAe,CACfvB,SAAS,CAATA,SAAS,CACTwB,GAAG,CAAHA,GAAG,CACHzB,aAAa,CAAbA,aAAa,CACb0B,iBAAA,CAAAA,iBACF,CAAC,CAAC,CAEF,GAAM,CAAAoF,oBAAoB,CACxBC,OAAO,CAACjH,MAAM,CAACV,KAAK,CAAC,EACrBW,MAAM,CACHiH,KAAK,CAAC,CAAC,CAAExF,eAAe,CAAC3B,KAAK,CAAC,CAC/BoH,KAAK,CAAE,SAAAjJ,CAAC,QAAK,OAAO,CAAAiC,SAAS,CAACjC,CAAC,CAACmC,GAAG,CAAC,GAAK,QAAQ,GAAC,CAEvD/C,KAAK,CAAC8J,SAAS,CAAC,UAAM,CACpB,GAAIT,OAAO,CAACU,OAAO,CAAE,CACnBV,OAAO,CAACU,OAAO,CAAG,KAAK,CACvB,OACF,CAEA,GAAIP,cAAc,EAAI,CAACE,oBAAoB,CAAE,CAC3C,OACF,CAEA,GAAI9G,aAAa,CAAE,KAAAoH,oBAAA,CACjB,CAAAA,oBAAA,CAAAb,WAAW,CAACY,OAAO,UAAAC,oBAAA,iBAAnBA,oBAAA,CAAqBC,cAAc,CAAC,CAClCC,MAAM,CAAET,YAAY,CACpBU,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACT,oBAAoB,CAAEF,cAAc,CAAE5G,aAAa,CAAE6G,YAAY,CAAC,CAAC,CAEvE,GAAM,CAAAW,YAAY,CAAI,QAAhB,CAAAA,YAAYA,CAAI1J,CAAoB,CAAK,CAC7C,IAAA2J,qBAAA,CAA0B3J,CAAC,CAAC4J,WAAW,CAAC5H,MAAM,CAAtCkG,MAAM,CAAAyB,qBAAA,CAANzB,MAAM,CAAE5G,KAAA,CAAAqI,qBAAA,CAAArI,KAAA,CAEhB+G,SAAS,CAAE,SAAArG,MAAM,QACf,CAAAA,MAAM,CAACV,KAAK,GAAKA,KAAK,EAAIU,MAAM,CAACkG,MAAM,GAAKA,MAAM,CAC9ClG,MAAM,CACN,CAAEV,KAAK,CAALA,KAAK,CAAE4G,MAAA,CAAAA,MAAO,CAAC,GACtB,CACH,CAAC,CAED,GAAM,CAAAtF,WAAW,CAAGY,cAAc,CAAC,CACjCxB,MAAM,CAANA,MAAM,CACN0B,eAAe,CAAfA,eAAe,CACfvB,SAAS,CAATA,SAAS,CACTwB,GAAG,CAAHA,GAAG,CACHzB,aAAa,CAAbA,aAAa,CACb0B,iBAAA,CAAAA,iBACF,CAAC,CAAC,CAEF,GAAM,CAAAiG,eAAe,CAAGxF,IAAI,CAACC,GAAG,CAAC,CAAC,CAAErC,MAAM,CAACS,MAAM,CAAG,CAAC,CAAC,CAAGiB,GAAG,CAC5D,GAAM,CAAAmG,gBAAgB,CAAID,eAAe,CAAGjH,WAAW,CAAI,GAAG,CAC9D,GAAM,CAAAmH,kBAAkB,CAAM9H,MAAM,CAACS,MAAM,CAAG,EAAG,IAAE,CAEnD,GAAM,CAAAsH,UAAU,CAAG1K,KAAK,CAAC2K,OAAO,CAC9B,iBACE,CAAAnH,aAAa,CACXC,YAAY,CACZJ,oBAAoB,CAACC,WAAW,CAAEZ,MAAM,CAACV,KAAK,CAAC,CAChD,GACH,CAACU,MAAM,CAACV,KAAK,CAAEyB,YAAY,CAAEH,WAAW,CAAC,CAC1C,CAED,GAAM,CAAAsH,UAAU,CAAG5K,KAAK,CAAC6K,WAAW,CAClC,SAAAC,MAAA,CAAmD,IAA1C,CAAAnF,KAAK,CAAgCmF,MAAA,CAA3CC,IAAI,CAAStI,KAAA,CAA8BqI,MAAA,CAA9BrI,KAAA,CACd,GAAM,CAAA4D,KAA2C,CAAG,CAClDtD,GAAG,CAAE4C,KAAK,CAAC5C,GAAG,CACd0E,QAAQ,CAAEA,QAAQ,CAClB9B,KAAK,CAAEA,KAAK,CACZvB,eAAe,CAAEA,eAAe,CAChC8C,qBAAqB,CAAEA,qBAAqB,CAC5CF,aAAa,CAAEA,aAAa,CAC5BF,YAAY,CAAEA,YAAY,CAC1BM,SAAS,CAAEA,SAAS,CACpBiB,WAAW,CAAEA,WAAW,CACxBC,UAAU,CAAEA,UAAU,CACtBC,WAAW,CAAEA,WAAW,CACxBb,WAAW,CAAEA,WAAW,CACxBG,aAAa,CAAEA,aAAa,CAC5BM,UAAU,CAAEA,UAAU,CACtBC,YAAY,CAAEA,YAAY,CAC1B4C,QAAQ,CAAExB,cAAc,CACnB,SAAA9I,CAAoB,CAAK,CACxB6I,iBAAiB,CAACQ,OAAO,CAACpE,KAAK,CAAC5C,GAAG,CAAC,CAAGrC,CAAC,CAAC4J,WAAW,CAAC5H,MAAM,CAACV,KAAK,CAKjE,GACEW,MAAM,CAACS,MAAM,CAAGsD,iBAAiB,EACjCjE,KAAK,GAAKiE,iBAAiB,EAC3B/D,MAAM,CACHiH,KAAK,CAAC,CAAC,CAAElD,iBAAiB,CAAC,CAC3BmD,KAAK,CACH,SAAAjJ,CAAC,QAAK,OAAO,CAAA2I,iBAAiB,CAACQ,OAAO,CAACnJ,CAAC,CAACmC,GAAG,CAAC,GAAK,QAAQ,GAC5D,CACH,CACAmG,YAAY,IAAA+B,SAAA,CAAAlK,OAAA,KAAMwI,iBAAiB,CAACQ,OAAA,CAAS,CAAC,CAChD,CAAC,IAAM,IACLpH,MAAM,CAACkH,KAAK,CACT,SAAAjJ,CAAC,QAAK,OAAO,CAAA2I,iBAAiB,CAACQ,OAAO,CAACnJ,CAAC,CAACmC,GAAG,CAAC,GAAK,QAAQ,GAC5D,CACD,CAGAmG,YAAY,IAAA+B,SAAA,CAAAlK,OAAA,KAAMwI,iBAAiB,CAACQ,OAAA,CAAS,CAAC,CAChD,CACF,CAAC,CACD5D,SAAS,CACb+E,OAAO,CAAE,SAAAA,QAAA,CAAM,CACb,GAAM,CAAAC,KAAuB,CAAG,CAC9BxF,KAAK,CAALA,KAAK,CACLyF,gBAAgB,CAAE,KAAK,CACvBC,cAAc,CAAE,SAAAA,eAAA,CAAM,CACpBF,KAAK,CAACC,gBAAgB,CAAG,IAAI,CAC/B,CACF,CAAC,CAEDlD,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAGiD,KAAK,CAAC,CAEnB,GAAIA,KAAK,CAACC,gBAAgB,CAAE,CAC1B,OACF,CAEA5D,MAAM,CAAC7B,KAAK,CAAC5C,GAAG,CAAC,CACnB,CAAC,CACDuI,WAAW,CAAE,SAAAA,YAAA,QAAM,CAAArD,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAG,CAAEtC,KAAA,CAAAA,KAAM,CAAC,CAAC,GAC9CqC,UAAU,CAAEA,UAAU,CACtB7F,KAAK,CAAEE,QAAQ,CAEfkJ,eAAe,CAAE,CAAC/B,cAAc,CAC5BhH,mBAAmB,CACjBC,KAAK,CACLC,MAAM,CACNC,MAAM,CACNC,aAAa,CACbC,SAAS,CACTT,oBAAoB,CAACC,QAAQ,CAAC,CAC/B,CACD8D,SAAS,CACbsC,cAAA,CAAAA,cACF,CAAC,CAED,MACE,CAAAzI,KAAA,CAAAiC,aAAA,CAAAjC,KAAA,CAAAwL,QAAA,MACGnH,GAAG,CAAG,CAAC,EAAI5B,KAAK,CAAG,CAAC,CAAGzC,KAAA,CAAAiC,aAAA,CAACH,SAAS,EAACE,KAAK,CAAEqC,GAAI,EAAG,CAAG,IAAI,CACvDmE,gBAAgB,CACfA,gBAAgB,CAACnC,KAAK,CAAC,CAEvBrG,KAAA,CAAAiC,aAAA,CAACwJ,sBAAU,CAAKpF,KAAK,CACtB,CACA,CAEP,CAAC,CACD,CACEqB,WAAW,CACXe,cAAc,CACdpE,GAAG,CACH6C,qBAAqB,CACrBF,aAAa,CACbF,YAAY,CACZM,SAAS,CACTS,aAAa,CACb2B,cAAc,CACdhC,MAAM,CACNQ,UAAU,CACVtF,MAAM,CACN0B,eAAe,CACf6D,cAAc,CACdC,UAAU,CACVT,QAAQ,CACRU,UAAU,CACVC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,WAAW,CACXC,gBAAgB,CAChB7F,MAAM,CACNC,aAAa,CACbP,QAAQ,CACRQ,SAAS,CACV,CACF,CAED,GAAM,CAAA6I,YAAY,CAAG1L,KAAK,CAAC6K,WAAW,CAAE,SAAAE,IAAO,QAAK,CAAAA,IAAI,CAAChI,GAAG,GAAE,EAAE,CAAC,CAEjE,GAAM,CAAA4I,6BAA6B,CAAG3L,KAAK,CAAC2K,OAAO,CACjD,iBAAM,CACJiB,MAAM,CAACC,UAAU,CACjBjJ,aAAa,CACT,CACEZ,KAAK,CACHsB,WAAW,CAAGiH,eAAe,CAAGjH,WAAW,CAAGmH,kBAClD,CAAC,CACDmB,MAAM,CAACE,SAAS,CACpBlE,qBAAqB,CACtB,GACD,CACEA,qBAAqB,CACrBhF,aAAa,CACb2H,eAAe,CACfjH,WAAW,CACXmH,kBAAkB,CACnB,CACF,CAED,GAAM,CAAAsB,YAAY,CAAG/L,KAAK,CAAC2K,OAAO,CAChC,iBACE,CAAAhH,qBAAQ,CAACwH,KAAK,CACZ,CACE,CACEb,WAAW,CAAE,CACX0B,aAAa,CAAE,CAAEC,CAAC,CAAExI,YAAa,CACnC,CACF,CAAC,CACF,CACD,CAAEyI,eAAe,CAAE,IAAK,CAAC,CAC1B,GACH,CAACzI,YAAY,CAAC,CACf,CAED,GAAM,CAAA0I,0BAA0B,CAAG,GAAAC,0BAAiB,EAClD,SAAAC,MAAA,CAA2C,IAAxC,CAAAC,OAAA,CAAmCD,MAAA,CAAnCC,OAAA,CACD,GAAI3J,MAAM,CAACS,MAAM,EAAIsD,iBAAiB,CAAE,CACtC,OACF,CAEA,GAAM,CAAAqE,IAAI,CAAGuB,OAAO,CAACA,OAAO,CAAClJ,MAAM,CAAG,CAAC,CAAC,CACxC,GAAM,CAAAX,KAAK,CAAG,CAAAsI,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEtI,KAAK,GAAI,CAAC,CAC9B,GACEsI,IAAI,CAACwB,UAAU,GACd9J,KAAK,CAAG,EAAE,GAAK,CAAC,EACfA,KAAK,GAAK2B,eAAe,CAAC3B,KAAK,EAC/BA,KAAK,GAAKE,MAAM,CAACS,MAAM,CAAG,CAAC,CAAC,CAC9B,CACA8F,YAAY,IAAA+B,SAAA,CAAAlK,OAAA,KAAMwI,iBAAiB,CAACQ,OAAA,CAAS,CAAC,CAChD,CACF,CAAC,CACF,CAED,MACE,CAAA/J,KAAA,CAAAiC,aAAA,CAAC0B,qBAAQ,CAACzB,IAAI,EAAC8I,QAAQ,CAAEZ,YAAa,CAACjI,KAAK,CAAE,CAACyJ,MAAM,CAACY,MAAM,CAAErK,KAAK,CAAE,EACnEnC,KAAA,CAAAiC,aAAA,CAAC0B,qBAAQ,CAACzB,IAAI,EACZuK,aAAa,CAAC,MAAM,CACpBtK,KAAK,CAAE,CACLyJ,MAAM,CAACc,kBAAkB,CACzB9J,aAAa,CAAG,CAAE+J,SAAS,CAAE,CAAC,CAAEjC,UAAA,CAAAA,UAAW,CAAC,CAAS,CAAC,CAAG,IAAI,CAC7DpH,WAAW,CAAGiH,eAAe,CACzB,CAAEvI,KAAK,CAAEsB,WAAW,CAAGiH,eAAgB,CAAC,CACxC3H,aAAa,CACb,CAAEZ,KAAK,CAAEyI,kBAAmB,CAAC,CAC7B,IAAI,CACR3C,uBAAuB,CACvB,EAEDR,eAAe,CAAC,CACfG,QAAQ,CAARA,QAAQ,CACR/E,MAAM,CAANA,MAAM,CACN0B,eAAe,CAAfA,eAAe,CACfoD,MAAM,CAANA,MAAM,CACNxF,KAAK,CAAEwH,cAAc,CACjB,MAAM,CACH,CAAC,GAAG,CAAGgB,gBAAgB,EAAI7H,MAAM,CAACS,MAAO,IAAE,CAClDjB,KAAK,CAAE4F,cAAc,CACrB6E,WAAW,CAAG,SAAAA,YAAAhL,CAAS,QACrB,CAAAY,mBAAmB,CACjBZ,CAAC,CACDc,MAAM,CACNC,MAAM,CACNC,aAAa,CACbC,SAAS,CACTyB,iBAAiB,CAClB,GACHD,GAAA,CAAAA,GACF,CAAC,CAAC,CACY,CAChBrE,KAAA,CAAAiC,aAAA,CAACC,iBAAI,EAACC,KAAK,CAAEyJ,MAAM,CAACiB,MAAO,EACzB7M,KAAA,CAAAiC,aAAA,CAAC0B,qBAAQ,CAACmJ,QAAQ,EAChBC,IAAI,CAAEpK,MAA0C,CAChD+I,YAAY,CAAEA,YAAa,CAC3BsB,UAAU,MACVC,iBAAiB,CAAC,SAAS,CAC3BC,yBAAyB,CAAC,SAAS,CACnCtK,aAAa,CAAEA,aAAc,CAC7B+E,OAAO,CAAEA,OAAQ,CACjBwF,kBAAkB,CAAEzG,iBAAkB,CACtC0G,sBAAsB,CAAEjB,0BAA2B,CACnDkB,sBAAsB,CAAE,KAAM,CAC9BC,YAAY,CAAE,KAAM,CACpBC,8BAA8B,CAAE,KAAM,CACtCC,4BAA4B,CAAE,KAAM,CACpCC,gCAAgC,CAAE,KAAM,CACxCC,cAAc,CAAC,OAAO,CACtB9F,qBAAqB,CAAE+D,6BAA8B,CACrDgC,mBAAmB,CAAE,EAAG,CACxB/C,UAAU,CAAEA,UAAW,CACvBgD,QAAQ,CAAE7B,YAAa,CACvB8B,GAAG,CAAE1E,WAAY,CACjB1C,MAAM,CAAEA,MAAO,EACf,CACG,CACO,CAEpB,CAEA,GAAM,CAAAmF,MAAM,CAAGtJ,uBAAU,CAACwL,MAAM,CAAC,CAC/BhC,SAAS,CAAE,CACTiC,IAAI,CAAE,CACR,CAAC,CACDlB,MAAM,CAAE,CACNmB,QAAQ,CAAEnK,qBAAQ,CAACoK,MAAM,CAAC,CAAElN,OAAO,CAAE,QAAQ,CAAEmN,GAAG,CAAE/H,SAAU,CAAC,CACjE,CAAC,CACDqG,MAAM,CAAE,CACN2B,eAAe,CAAE,SAAS,CAC1BC,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,OAAO,CACpBC,aAAa,CAAE,GAAG,CAClBC,YAAY,CAAEjM,uBAAU,CAACkM,aAAa,CACtCC,YAAY,CAAE,CACZ7F,MAAM,CAAEtG,uBAAU,CAACkM,aAAa,CAChCxM,KAAK,CAAE,CACT,CAAC,CACD0M,MAAM,CAAE,CACV,CAAC,CACD7C,UAAU,CAAE,CACV8C,aAAa,CAAE,KAAK,CACpBC,QAAQ,CAAE,QACZ,CAAC,CACDlC,kBAAkB,CAAE,CAClBjF,QAAQ,CAAE,UAAU,CACpBoH,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CACV,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}