{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.AppNavigator=void 0;var _regenerator=_interopRequireDefault(require(\"@babel/runtime/regenerator\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _native=require(\"@react-navigation/native\");var _nativeStack=require(\"@react-navigation/native-stack\");var _playersScreen=require(\"../screen/Players/playersScreen\");var _RolesScreen=require(\"../screen/Roles/RolesScreen\");var _PlayerListScreen=require(\"../screen/Players/PlayerListScreen\");var _RoleUpScreen=require(\"../screen/Roles/RoleUpScreen\");var _GamePlay=require(\"../screen/Game/GamePlay\");var _GameNightPlay=require(\"../screen/Game/GameNightPlay\");var _MainScreen=require(\"../screen/Home/MainScreen\");var _AllPlayers=require(\"../screen/Players/AllPlayers\");var _LearningScreen=require(\"../screen/Rules/LearningScreen\");var _RoleLearning=require(\"../screen/Rules/cards/RoleLearning\");var _GameRules=require(\"../screen/Rules/gameRules/GameRules\");var _reactNative=require(\"react-native\");var _useStore3=require(\"../constants/useStore\");var _mobxReact=require(\"mobx-react\");var _theme=require(\"../theme\");var _navigationUtilities=require(\"./navigationUtilities\");var _config=_interopRequireDefault(require(\"../config\"));var _BottomNavigator=require(\"./BottomNavigator\");var _HomeScreen=require(\"../screen/Home/HomeScreen\");var storage=_interopRequireWildcard(require(\"../utils/storage\"));var _LastMoves=require(\"../screen/Rules/lastmove/LastMoves\");var _reactNativeBootsplash=_interopRequireDefault(require(\"react-native-bootsplash\"));var _navigationWrapper=_interopRequireDefault(require(\"./navigationWrapper\"));var _ShowCards=require(\"../screen/Game/ShowCards\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var exitRoutes=_config.default.exitRoutes;var Stack=(0,_nativeStack.createNativeStackNavigator)();var AppStack=(0,_mobxReact.observer)(function AppStack(){var _useStore=(0,_useStore3.useStore)(),isDark=_useStore.themeStore.isDark;var navigation=(0,_native.useNavigation)();var colorScheme=(0,_reactNative.useColorScheme)()==='dark';var _useState=(0,_react.useState)('main'),_useState2=(0,_slicedToArray2.default)(_useState,2),initialRoute=_useState2[0],setInitialRoute=_useState2[1];return _react.default.createElement(Stack.Navigator,{initialRouteName:\"RPM\",screenOptions:{headerShown:false,navigationBarColor:colorScheme?_theme.colors.background:_theme.colors.background}},_react.default.createElement(Stack.Screen,{name:\"RPM\",component:_BottomNavigator.BottomNavigator}),_react.default.createElement(Stack.Screen,{name:\"main\",component:_MainScreen.MainScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"learn\",component:_LearningScreen.LearningScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"home\",component:_HomeScreen.HomeScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"allplayers\",component:_AllPlayers.AllPlayers,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"players\",component:_playersScreen.PlayersScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"playerList\",component:_PlayerListScreen.PlayerListScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"roles\",component:_RolesScreen.RolesScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"roleCards\",component:_RoleLearning.RoleLearning,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"lastMoves\",component:_LastMoves.LastMoves,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"rules\",component:_GameRules.GameRules,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"roleup\",component:_RoleUpScreen.RoleUpScreen,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"showcards\",component:_ShowCards.ShowCards,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"gameplay\",component:_GamePlay.GamePlay,options:{headerShown:false}}),_react.default.createElement(Stack.Screen,{name:\"gamenight\",component:_GameNightPlay.GameNightPlay,options:{headerShown:false}}));});var AppNavigator=exports.AppNavigator=(0,_mobxReact.observer)(function AppNavigator(props){var _useStore2=(0,_useStore3.useStore)(),_useStore2$themeStore=_useStore2.themeStore,setTheme=_useStore2$themeStore.setTheme,isDark=_useStore2$themeStore.isDark;var colorScheme=(0,_reactNative.useColorScheme)()==='dark';(0,_navigationUtilities.useBackButtonHandler)(function(routeName){return exitRoutes.includes(routeName);});var getAppTheme=function _callee(){return _regenerator.default.async(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator.default.awrap(storage.load('theme').then(function(res){if(res){_reactNative.Appearance.setColorScheme(res);setTheme('dark'===res);}}));case 2:case\"end\":return _context.stop();}},null,null,null,Promise);};(0,_react.useEffect)(function(){getAppTheme();},[isDark]);return _react.default.createElement(_native.NavigationContainer,(0,_extends2.default)({ref:_navigationUtilities.navigationRef,theme:colorScheme?_native.DarkTheme:_native.DefaultTheme,onReady:function onReady(){_reactNativeBootsplash.default.hide();}},props),_react.default.createElement(_navigationWrapper.default,null,_react.default.createElement(AppStack,null)));});","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_native","_nativeStack","_playersScreen","_RolesScreen","_PlayerListScreen","_RoleUpScreen","_GamePlay","_GameNightPlay","_MainScreen","_AllPlayers","_LearningScreen","_RoleLearning","_GameRules","_reactNative","_useStore3","_mobxReact","_theme","_navigationUtilities","_config","_interopRequireDefault","_BottomNavigator","_HomeScreen","storage","_LastMoves","_reactNativeBootsplash","_navigationWrapper","_ShowCards","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","exitRoutes","Config","Stack","createNativeStackNavigator","AppStack","observer","_useStore","useStore","isDark","themeStore","navigation","useNavigation","colorScheme","useColorScheme","_useState","useState","_useState2","_slicedToArray2","initialRoute","setInitialRoute","createElement","Navigator","initialRouteName","screenOptions","headerShown","navigationBarColor","colors","background","Screen","name","component","BottomNavigator","MainScreen","options","LearningScreen","HomeScreen","AllPlayers","PlayersScreen","PlayerListScreen","RolesScreen","RoleLearning","LastMoves","GameRules","RoleUpScreen","ShowCards","GamePlay","GameNightPlay","AppNavigator","exports","props","_useStore2","_useStore2$themeStore","setTheme","useBackButtonHandler","routeName","includes","getAppTheme","_callee","_regenerator","async","_callee$","_context","prev","next","awrap","load","then","res","Appearance","setColorScheme","stop","Promise","useEffect","NavigationContainer","_extends2","ref","navigationRef","theme","DarkTheme","DefaultTheme","onReady","BootSplash","hide"],"sources":["/Users/shayan/workspace/godfather/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React, {ReactNode, useEffect, useState} from 'react';\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer,\n  NavigatorScreenParams,\n  useNavigation,\n} from '@react-navigation/native';\nimport {\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n  createNativeStackNavigator,\n} from '@react-navigation/native-stack';\nimport {PlayersScreen} from '../screen/Players/playersScreen';\nimport {RolesScreen} from '../screen/Roles/RolesScreen';\nimport {PlayerListScreen} from '../screen/Players/PlayerListScreen';\nimport {RoleUpScreen} from '../screen/Roles/RoleUpScreen';\nimport {GamePlay} from '../screen/Game/GamePlay';\nimport {GameNightPlay} from '../screen/Game/GameNightPlay';\nimport {MainScreen} from '../screen/Home/MainScreen';\nimport {AllPlayers} from '../screen/Players/AllPlayers';\nimport {LearningScreen} from '../screen/Rules/LearningScreen';\nimport {RoleLearning} from '../screen/Rules/cards/RoleLearning';\nimport {GameRules} from '../screen/Rules/gameRules/GameRules';\nimport {Appearance, ColorSchemeName, useColorScheme} from 'react-native';\nimport {useStore} from '../constants/useStore';\nimport {observer} from 'mobx-react';\nimport {colors} from '../theme';\nimport {navigationRef, useBackButtonHandler} from './navigationUtilities';\nimport Config from '../config';\nimport {BottomNavigator, TabParamList} from './BottomNavigator';\nimport {HomeScreen} from '../screen/Home/HomeScreen';\nimport * as storage from '../utils/storage';\nimport {LastMoves} from '../screen/Rules/lastmove/LastMoves';\nimport BootSplash from 'react-native-bootsplash';\nimport NavigationWrapper from './navigationWrapper';\nimport { ShowCards } from '../screen/Game/ShowCards';\n\n// import {SafeAreaView} from 'react-native-safe-area-context';\nexport type AppStackParamList = {\n  // 🔥 Your screens go here\n  splash: undefined;\n  RPM: NavigatorScreenParams<TabParamList>;\n  main: undefined;\n  home: undefined;\n  learn: undefined;\n  players: undefined;\n  playerList: undefined;\n  allplayers: undefined;\n  roles: undefined;\n  roleCards: undefined;\n  lastMoves: undefined;\n  rules: undefined;\n  roleup: undefined;\n  showcards: undefined;\n  gameplay: undefined;\n  gamenight: undefined;\n\n  // IGNITE_GENERATOR_ANCHOR_APP_STACK_PARAM_LIST\n};\nconst exitRoutes = Config.exitRoutes;\n\nexport type AppStackScreenProps<T extends keyof AppStackParamList> =\n  NativeStackScreenProps<AppStackParamList, T>;\n\n// This adds types for useNavigation\n// https://reactnavigation.org/docs/typescript/#specifying-default-types-for-usenavigation-link-ref-etc\n// declare global {\n//   namespace ReactNavigation {\n//     interface RootParamList extends AppStackParamList {}\n//   }\n// }\n// Documentation: https://reactnavigation.org/docs/stack-navigator/\nconst Stack = createNativeStackNavigator<AppStackParamList>();\n// const defaultAuthState = {\n//   hasLoggedInOnce: false,\n//   accessToken: \"\",\n//   refreshToken: \"\",\n// }\nexport type StackNavigation = NativeStackNavigationProp<AppStackParamList>;\n\nconst AppStack = observer(function AppStack() {\n  const {\n    themeStore: {isDark},\n  } = useStore();\n  const navigation = useNavigation<StackNavigation>();\n  const colorScheme = useColorScheme() === 'dark';\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [initialRoute, setInitialRoute] = useState('main');\n  return (\n    <Stack.Navigator\n      initialRouteName=\"RPM\"\n      screenOptions={{\n        headerShown: false,\n        navigationBarColor: colorScheme ? colors.background : colors.background,\n      }}>\n      {/* <Stack.Screen name=\"splash\" component={SplashScreen} /> */}\n      <Stack.Screen name=\"RPM\" component={BottomNavigator} />\n      <Stack.Screen\n        name=\"main\"\n        component={MainScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"learn\"\n        component={LearningScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"home\"\n        component={HomeScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"allplayers\"\n        component={AllPlayers}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"players\"\n        component={PlayersScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"playerList\"\n        component={PlayerListScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"roles\"\n        component={RolesScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"roleCards\"\n        component={RoleLearning}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"lastMoves\"\n        component={LastMoves}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"rules\"\n        component={GameRules}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"roleup\"\n        component={RoleUpScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"showcards\"\n        component={ShowCards}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"gameplay\"\n        component={GamePlay}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"gamenight\"\n        component={GameNightPlay}\n        options={{headerShown: false}}\n      />\n    </Stack.Navigator>\n  );\n});\n\nexport interface NavigationProps\n  extends Partial<React.ComponentProps<typeof NavigationContainer>> {}\n\nexport const AppNavigator = observer(function AppNavigator(\n  props: NavigationProps,\n) {\n  const {\n    themeStore: {setTheme, isDark},\n  } = useStore();\n  const colorScheme = useColorScheme() === 'dark';\n  useBackButtonHandler(routeName => exitRoutes.includes(routeName));\n  const getAppTheme = async () => {\n    await storage.load('theme').then(res => {\n      if (res) {\n        Appearance.setColorScheme(res as ColorSchemeName);\n        setTheme('dark' === res);\n      }\n    });\n  };\n  useEffect(() => {\n    getAppTheme();\n  }, [isDark]);\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      theme={colorScheme ? DarkTheme : DefaultTheme}\n      onReady={() => {\n        BootSplash.hide();\n      }}\n      {...props}>\n      <NavigationWrapper>\n        <AppStack />\n      </NavigationWrapper>\n    </NavigationContainer>\n  );\n});\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}