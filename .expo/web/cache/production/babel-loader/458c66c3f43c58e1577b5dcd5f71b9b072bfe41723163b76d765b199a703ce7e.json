{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.maybeBuild=maybeBuild;var mockTargetValues={targetOriginX:0,targetOriginY:0,targetWidth:0,targetHeight:0,targetGlobalOriginX:0,targetGlobalOriginY:0,targetBorderRadius:0,windowWidth:0,windowHeight:0,currentOriginX:0,currentOriginY:0,currentWidth:0,currentHeight:0,currentGlobalOriginX:0,currentGlobalOriginY:0,currentBorderRadius:0};function maybeBuild(layoutAnimationOrBuilder,style,displayName){var isAnimationBuilder=function isAnimationBuilder(value){return'build'in layoutAnimationOrBuilder&&typeof layoutAnimationOrBuilder.build==='function';};if(isAnimationBuilder(layoutAnimationOrBuilder)){var animationFactory=layoutAnimationOrBuilder.build();var layoutAnimation=animationFactory(mockTargetValues);var animatedStyle=layoutAnimation.animations;var getCommonProperties=function getCommonProperties(obj1,obj2){return Object.keys(obj1).filter(function(key){return Object.prototype.hasOwnProperty.call(obj2,key);});};var commonProperties=getCommonProperties(animatedStyle,style||{});if(commonProperties.length>0){console.warn(\"[Reanimated] \"+(commonProperties.length===1?'Property':'Properties: ')+\" \\\"\"+commonProperties+\"\\\" of \"+displayName+\" may be overwritten with layout animation. Please create a wrapper with the layout animation you want to apply.\");}return layoutAnimationOrBuilder.build();}else{return layoutAnimationOrBuilder;}}","map":{"version":3,"names":["mockTargetValues","targetOriginX","targetOriginY","targetWidth","targetHeight","targetGlobalOriginX","targetGlobalOriginY","targetBorderRadius","windowWidth","windowHeight","currentOriginX","currentOriginY","currentWidth","currentHeight","currentGlobalOriginX","currentGlobalOriginY","currentBorderRadius","maybeBuild","layoutAnimationOrBuilder","style","displayName","isAnimationBuilder","value","build","animationFactory","layoutAnimation","animatedStyle","animations","getCommonProperties","obj1","obj2","Object","keys","filter","key","prototype","hasOwnProperty","call","commonProperties","length","console","warn"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-reanimated/lib/module/animationBuilder.tsx"],"sourcesContent":["import type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationsValues,\n} from './reanimated2/layoutReanimation';\nimport type { StyleProps } from './reanimated2/commonTypes';\n\nconst mockTargetValues: LayoutAnimationsValues = {\n  targetOriginX: 0,\n  targetOriginY: 0,\n  targetWidth: 0,\n  targetHeight: 0,\n  targetGlobalOriginX: 0,\n  targetGlobalOriginY: 0,\n  targetBorderRadius: 0,\n  windowWidth: 0,\n  windowHeight: 0,\n  currentOriginX: 0,\n  currentOriginY: 0,\n  currentWidth: 0,\n  currentHeight: 0,\n  currentGlobalOriginX: 0,\n  currentGlobalOriginY: 0,\n  currentBorderRadius: 0,\n};\n\nexport function maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe,\n  style: StyleProps | undefined,\n  displayName: string\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    const animationFactory = layoutAnimationOrBuilder.build();\n    const layoutAnimation = animationFactory(mockTargetValues);\n    const animatedStyle = layoutAnimation.animations;\n\n    const getCommonProperties = (obj1: object, obj2: object) =>\n      Object.keys(obj1).filter((key) =>\n        Object.prototype.hasOwnProperty.call(obj2, key)\n      );\n\n    const commonProperties = getCommonProperties(animatedStyle, style || {});\n    if (commonProperties.length > 0) {\n      console.warn(\n        `[Reanimated] ${\n          commonProperties.length === 1 ? 'Property' : 'Properties: '\n        } \"${commonProperties}\" of ${displayName} may be overwritten with layout animation. Please create a wrapper with the layout animation you want to apply.`\n      );\n    }\n\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n"],"mappings":"uFAOA,GAAM,CAAAA,gBAAwC,CAAG,CAC/CC,aAAa,CAAE,CAAC,CAChBC,aAAa,CAAE,CAAC,CAChBC,WAAW,CAAE,CAAC,CACdC,YAAY,CAAE,CAAC,CACfC,mBAAmB,CAAE,CAAC,CACtBC,mBAAmB,CAAE,CAAC,CACtBC,kBAAkB,CAAE,CAAC,CACrBC,WAAW,CAAE,CAAC,CACdC,YAAY,CAAE,CAAC,CACfC,cAAc,CAAE,CAAC,CACjBC,cAAc,CAAE,CAAC,CACjBC,YAAY,CAAE,CAAC,CACfC,aAAa,CAAE,CAAC,CAChBC,oBAAoB,CAAE,CAAC,CACvBC,oBAAoB,CAAE,CAAC,CACvBC,mBAAmB,CAAE,CACvB,CAAC,CAEM,QAAS,CAAAC,UAAUA,CACxBC,wBAGY,CACZC,KAA6B,CAC7BC,WAAmB,CACiB,CACpC,GAAM,CAAAC,kBAAkB,CACtB,QADI,CAAAA,kBAAkBA,CACtBC,KAAmE,QAEnE,OAAO,EAAI,CAAAJ,wBAAwB,EACnC,MAAO,CAAAA,wBAAwB,CAACK,KAAK,GAAK,UAAU,GAEtD,GAAIF,kBAAkB,CAACH,wBAAwB,CAAC,CAAE,CAChD,GAAM,CAAAM,gBAAgB,CAAGN,wBAAwB,CAACK,KAAK,EAAE,CACzD,GAAM,CAAAE,eAAe,CAAGD,gBAAgB,CAACxB,gBAAgB,CAAC,CAC1D,GAAM,CAAA0B,aAAa,CAAGD,eAAe,CAACE,UAAU,CAEhD,GAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,IAAY,CAAEC,IAAY,QACrD,CAAAC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,MAAM,CAAE,SAAAC,GAAG,QAC3B,CAAAH,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,IAAI,CAAEI,GAAG,CAAC,GAChD,GAEH,GAAM,CAAAI,gBAAgB,CAAGV,mBAAmB,CAACF,aAAa,CAAEP,KAAK,EAAI,CAAC,CAAC,CAAC,CACxE,GAAImB,gBAAgB,CAACC,MAAM,CAAG,CAAC,CAAE,CAC/BC,OAAO,CAACC,IAAI,kBAERH,gBAAgB,CAACC,MAAM,GAAK,CAAC,CAAG,UAAU,CAAG,cAC9C,QAAID,gBAAiB,UAAOlB,WAAY,kHAAgH,CAC1J,CACH,CAEA,MAAO,CAAAF,wBAAwB,CAACK,KAAK,EAAE,CACzC,CAAC,IAAM,CACL,MAAO,CAAAL,wBAAwB,CACjC,CACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}