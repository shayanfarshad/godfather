{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.useGestureEventsHandlersDefault=void 0;var _reactNative=require(\"react-native\");var _reactNativeReanimated=require(\"react-native-reanimated\");var _useBottomSheetInternal=require(\"./useBottomSheetInternal\");var _constants=require(\"../constants\");var _clamp=require(\"../utilities/clamp\");var _snapPoint=require(\"../utilities/snapPoint\");var dismissKeyboard=_reactNative.Keyboard.dismiss;var _worklet_224761815507_init_data={code:\"function handleOnStart(__,_,context){const{stopAnimation,animatedPosition,animatedKeyboardState,animatedScrollableContentOffsetY}=this._closure;stopAnimation();context.initialPosition=animatedPosition.value;context.initialKeyboardState=animatedKeyboardState.value;if(animatedScrollableContentOffsetY.value>0){context.isScrollablePositionLocked=true;}}\",location:\"node_modules/@gorhom/bottom-sheet/lib/module/hooks/useGestureEventsHandlersDefault.js\"};var _worklet_15383623779680_init_data={code:\"function handleOnActive(source,{translationY:translationY},context){const{animatedHighestSnapPoint,isInTemporaryPosition,KEYBOARD_STATE,enablePanDownToClose,animatedContainerHeight,animatedSnapPoints,GESTURE_SOURCE,isScrollableRefreshable,animatedPosition,animatedScrollableContentOffsetY,clamp,enableOverDrag,animatedScrollableType,SCROLLABLE_TYPE,overDragResistanceFactor}=this._closure;let highestSnapPoint=animatedHighestSnapPoint.value;if(isInTemporaryPosition.value&&context.initialKeyboardState===KEYBOARD_STATE.SHOWN){highestSnapPoint=context.initialPosition;}if(isInTemporaryPosition.value&&context.initialPosition<highestSnapPoint){highestSnapPoint=context.initialPosition;}const lowestSnapPoint=enablePanDownToClose?animatedContainerHeight.value:animatedSnapPoints.value[0];if(source===GESTURE_SOURCE.SCROLLABLE&&isScrollableRefreshable.value&&animatedPosition.value===highestSnapPoint){return;}const negativeScrollableContentOffset=context.initialPosition===highestSnapPoint&&source===GESTURE_SOURCE.SCROLLABLE||!context.isScrollablePositionLocked?animatedScrollableContentOffsetY.value*-1:0;const draggedPosition=context.initialPosition+translationY;const accumulatedDraggedPosition=draggedPosition+negativeScrollableContentOffset;const clampedPosition=clamp(accumulatedDraggedPosition,highestSnapPoint,lowestSnapPoint);if(context.isScrollablePositionLocked&&source===GESTURE_SOURCE.SCROLLABLE&&animatedPosition.value===highestSnapPoint){context.isScrollablePositionLocked=false;}if(enableOverDrag){if((source===GESTURE_SOURCE.HANDLE||animatedScrollableType.value===SCROLLABLE_TYPE.VIEW)&&draggedPosition<highestSnapPoint){const resistedPosition=highestSnapPoint-Math.sqrt(1+(highestSnapPoint-draggedPosition))*overDragResistanceFactor;animatedPosition.value=resistedPosition;return;}if(source===GESTURE_SOURCE.HANDLE&&draggedPosition>lowestSnapPoint){const resistedPosition=lowestSnapPoint+Math.sqrt(1+(draggedPosition-lowestSnapPoint))*overDragResistanceFactor;animatedPosition.value=resistedPosition;return;}if(source===GESTURE_SOURCE.SCROLLABLE&&draggedPosition+negativeScrollableContentOffset>lowestSnapPoint){const resistedPosition=lowestSnapPoint+Math.sqrt(1+(draggedPosition+negativeScrollableContentOffset-lowestSnapPoint))*overDragResistanceFactor;animatedPosition.value=resistedPosition;return;}}animatedPosition.value=clampedPosition;}\",location:\"node_modules/@gorhom/bottom-sheet/lib/module/hooks/useGestureEventsHandlersDefault.js\"};var _worklet_902750565366_init_data={code:\"function handleOnEnd(source,{translationY:translationY,absoluteY:absoluteY,velocityY:velocityY},context){const{animatedHighestSnapPoint,animatedPosition,GESTURE_SOURCE,isScrollableRefreshable,isInTemporaryPosition,animateToPosition,ANIMATION_SOURCE,animatedScrollableType,SCROLLABLE_TYPE,KEYBOARD_STATE,Platform,WINDOW_HEIGHT,animatedKeyboardHeight,runOnJS,dismissKeyboard,animatedSnapPoints,enablePanDownToClose,animatedClosedPosition,snapPoint,animatedScrollableContentOffsetY}=this._closure;const highestSnapPoint=animatedHighestSnapPoint.value;const isSheetAtHighestSnapPoint=animatedPosition.value===highestSnapPoint;if(source===GESTURE_SOURCE.SCROLLABLE&&isScrollableRefreshable.value&&isSheetAtHighestSnapPoint){return;}if(isInTemporaryPosition.value&&context.initialPosition>=animatedPosition.value){if(context.initialPosition>animatedPosition.value){animateToPosition(context.initialPosition,ANIMATION_SOURCE.GESTURE,velocityY/2);}return;}const isScrollable=animatedScrollableType.value!==SCROLLABLE_TYPE.UNDETERMINED&&animatedScrollableType.value!==SCROLLABLE_TYPE.VIEW;if(context.initialKeyboardState===KEYBOARD_STATE.SHOWN&&animatedPosition.value>context.initialPosition){if(!(Platform.OS==='ios'&&isScrollable&&absoluteY>WINDOW_HEIGHT-animatedKeyboardHeight.value)){runOnJS(dismissKeyboard)();}}if(isInTemporaryPosition.value){isInTemporaryPosition.value=false;}const snapPoints=animatedSnapPoints.value.slice();if(enablePanDownToClose){snapPoints.unshift(animatedClosedPosition.value);}const destinationPoint=snapPoint(translationY+context.initialPosition,velocityY,snapPoints);if(destinationPoint===animatedPosition.value){return;}const wasGestureHandledByScrollView=source===GESTURE_SOURCE.SCROLLABLE&&animatedScrollableContentOffsetY.value>0;if(wasGestureHandledByScrollView&&isSheetAtHighestSnapPoint){return;}animateToPosition(destinationPoint,ANIMATION_SOURCE.GESTURE,velocityY/2);}\",location:\"node_modules/@gorhom/bottom-sheet/lib/module/hooks/useGestureEventsHandlersDefault.js\"};var useGestureEventsHandlersDefault=exports.useGestureEventsHandlersDefault=function useGestureEventsHandlersDefault(){var _useBottomSheetIntern=(0,_useBottomSheetInternal.useBottomSheetInternal)(),animatedPosition=_useBottomSheetIntern.animatedPosition,animatedSnapPoints=_useBottomSheetIntern.animatedSnapPoints,animatedKeyboardState=_useBottomSheetIntern.animatedKeyboardState,animatedKeyboardHeight=_useBottomSheetIntern.animatedKeyboardHeight,animatedContainerHeight=_useBottomSheetIntern.animatedContainerHeight,animatedScrollableType=_useBottomSheetIntern.animatedScrollableType,animatedHighestSnapPoint=_useBottomSheetIntern.animatedHighestSnapPoint,animatedClosedPosition=_useBottomSheetIntern.animatedClosedPosition,animatedScrollableContentOffsetY=_useBottomSheetIntern.animatedScrollableContentOffsetY,enableOverDrag=_useBottomSheetIntern.enableOverDrag,enablePanDownToClose=_useBottomSheetIntern.enablePanDownToClose,overDragResistanceFactor=_useBottomSheetIntern.overDragResistanceFactor,isInTemporaryPosition=_useBottomSheetIntern.isInTemporaryPosition,isScrollableRefreshable=_useBottomSheetIntern.isScrollableRefreshable,animateToPosition=_useBottomSheetIntern.animateToPosition,stopAnimation=_useBottomSheetIntern.stopAnimation;var handleOnStart=(0,_reactNativeReanimated.useWorkletCallback)(function(){var _f=function _f(__,_,context){stopAnimation();context.initialPosition=animatedPosition.value;context.initialKeyboardState=animatedKeyboardState.value;if(animatedScrollableContentOffsetY.value>0){context.isScrollablePositionLocked=true;}};_f._closure={stopAnimation:stopAnimation,animatedPosition:animatedPosition,animatedKeyboardState:animatedKeyboardState,animatedScrollableContentOffsetY:animatedScrollableContentOffsetY};_f.__initData=_worklet_224761815507_init_data;_f.__workletHash=224761815507;return _f;}(),[stopAnimation,animatedPosition,animatedKeyboardState,animatedScrollableContentOffsetY]);var handleOnActive=(0,_reactNativeReanimated.useWorkletCallback)(function(){var _f=function _f(source,_ref,context){var translationY=_ref.translationY;var highestSnapPoint=animatedHighestSnapPoint.value;if(isInTemporaryPosition.value&&context.initialKeyboardState===_constants.KEYBOARD_STATE.SHOWN){highestSnapPoint=context.initialPosition;}if(isInTemporaryPosition.value&&context.initialPosition<highestSnapPoint){highestSnapPoint=context.initialPosition;}var lowestSnapPoint=enablePanDownToClose?animatedContainerHeight.value:animatedSnapPoints.value[0];if(source===_constants.GESTURE_SOURCE.SCROLLABLE&&isScrollableRefreshable.value&&animatedPosition.value===highestSnapPoint){return;}var negativeScrollableContentOffset=context.initialPosition===highestSnapPoint&&source===_constants.GESTURE_SOURCE.SCROLLABLE||!context.isScrollablePositionLocked?animatedScrollableContentOffsetY.value*-1:0;var draggedPosition=context.initialPosition+translationY;var accumulatedDraggedPosition=draggedPosition+negativeScrollableContentOffset;var clampedPosition=(0,_clamp.clamp)(accumulatedDraggedPosition,highestSnapPoint,lowestSnapPoint);if(context.isScrollablePositionLocked&&source===_constants.GESTURE_SOURCE.SCROLLABLE&&animatedPosition.value===highestSnapPoint){context.isScrollablePositionLocked=false;}if(enableOverDrag){if((source===_constants.GESTURE_SOURCE.HANDLE||animatedScrollableType.value===_constants.SCROLLABLE_TYPE.VIEW)&&draggedPosition<highestSnapPoint){var resistedPosition=highestSnapPoint-Math.sqrt(1+(highestSnapPoint-draggedPosition))*overDragResistanceFactor;animatedPosition.value=resistedPosition;return;}if(source===_constants.GESTURE_SOURCE.HANDLE&&draggedPosition>lowestSnapPoint){var _resistedPosition=lowestSnapPoint+Math.sqrt(1+(draggedPosition-lowestSnapPoint))*overDragResistanceFactor;animatedPosition.value=_resistedPosition;return;}if(source===_constants.GESTURE_SOURCE.SCROLLABLE&&draggedPosition+negativeScrollableContentOffset>lowestSnapPoint){var _resistedPosition2=lowestSnapPoint+Math.sqrt(1+(draggedPosition+negativeScrollableContentOffset-lowestSnapPoint))*overDragResistanceFactor;animatedPosition.value=_resistedPosition2;return;}}animatedPosition.value=clampedPosition;};_f._closure={animatedHighestSnapPoint:animatedHighestSnapPoint,isInTemporaryPosition:isInTemporaryPosition,KEYBOARD_STATE:_constants.KEYBOARD_STATE,enablePanDownToClose:enablePanDownToClose,animatedContainerHeight:animatedContainerHeight,animatedSnapPoints:animatedSnapPoints,GESTURE_SOURCE:_constants.GESTURE_SOURCE,isScrollableRefreshable:isScrollableRefreshable,animatedPosition:animatedPosition,animatedScrollableContentOffsetY:animatedScrollableContentOffsetY,clamp:_clamp.clamp,enableOverDrag:enableOverDrag,animatedScrollableType:animatedScrollableType,SCROLLABLE_TYPE:_constants.SCROLLABLE_TYPE,overDragResistanceFactor:overDragResistanceFactor};_f.__initData=_worklet_15383623779680_init_data;_f.__workletHash=15383623779680;return _f;}(),[enableOverDrag,enablePanDownToClose,overDragResistanceFactor,isInTemporaryPosition,isScrollableRefreshable,animatedHighestSnapPoint,animatedContainerHeight,animatedSnapPoints,animatedPosition,animatedScrollableType,animatedScrollableContentOffsetY]);var handleOnEnd=(0,_reactNativeReanimated.useWorkletCallback)(function(){var _f=function _f(source,_ref2,context){var translationY=_ref2.translationY,absoluteY=_ref2.absoluteY,velocityY=_ref2.velocityY;var highestSnapPoint=animatedHighestSnapPoint.value;var isSheetAtHighestSnapPoint=animatedPosition.value===highestSnapPoint;if(source===_constants.GESTURE_SOURCE.SCROLLABLE&&isScrollableRefreshable.value&&isSheetAtHighestSnapPoint){return;}if(isInTemporaryPosition.value&&context.initialPosition>=animatedPosition.value){if(context.initialPosition>animatedPosition.value){animateToPosition(context.initialPosition,_constants.ANIMATION_SOURCE.GESTURE,velocityY/2);}return;}var isScrollable=animatedScrollableType.value!==_constants.SCROLLABLE_TYPE.UNDETERMINED&&animatedScrollableType.value!==_constants.SCROLLABLE_TYPE.VIEW;if(context.initialKeyboardState===_constants.KEYBOARD_STATE.SHOWN&&animatedPosition.value>context.initialPosition){if(!(_reactNative.Platform.OS==='ios'&&isScrollable&&absoluteY>_constants.WINDOW_HEIGHT-animatedKeyboardHeight.value)){(0,_reactNativeReanimated.runOnJS)(dismissKeyboard)();}}if(isInTemporaryPosition.value){isInTemporaryPosition.value=false;}var snapPoints=animatedSnapPoints.value.slice();if(enablePanDownToClose){snapPoints.unshift(animatedClosedPosition.value);}var destinationPoint=(0,_snapPoint.snapPoint)(translationY+context.initialPosition,velocityY,snapPoints);if(destinationPoint===animatedPosition.value){return;}var wasGestureHandledByScrollView=source===_constants.GESTURE_SOURCE.SCROLLABLE&&animatedScrollableContentOffsetY.value>0;if(wasGestureHandledByScrollView&&isSheetAtHighestSnapPoint){return;}animateToPosition(destinationPoint,_constants.ANIMATION_SOURCE.GESTURE,velocityY/2);};_f._closure={animatedHighestSnapPoint:animatedHighestSnapPoint,animatedPosition:animatedPosition,GESTURE_SOURCE:_constants.GESTURE_SOURCE,isScrollableRefreshable:isScrollableRefreshable,isInTemporaryPosition:isInTemporaryPosition,animateToPosition:animateToPosition,ANIMATION_SOURCE:_constants.ANIMATION_SOURCE,animatedScrollableType:animatedScrollableType,SCROLLABLE_TYPE:_constants.SCROLLABLE_TYPE,KEYBOARD_STATE:_constants.KEYBOARD_STATE,Platform:_reactNative.Platform,WINDOW_HEIGHT:_constants.WINDOW_HEIGHT,animatedKeyboardHeight:animatedKeyboardHeight,runOnJS:_reactNativeReanimated.runOnJS,dismissKeyboard:dismissKeyboard,animatedSnapPoints:animatedSnapPoints,enablePanDownToClose:enablePanDownToClose,animatedClosedPosition:animatedClosedPosition,snapPoint:_snapPoint.snapPoint,animatedScrollableContentOffsetY:animatedScrollableContentOffsetY};_f.__initData=_worklet_902750565366_init_data;_f.__workletHash=902750565366;return _f;}(),[enablePanDownToClose,isInTemporaryPosition,isScrollableRefreshable,animatedClosedPosition,animatedHighestSnapPoint,animatedKeyboardHeight,animatedPosition,animatedScrollableType,animatedSnapPoints,animatedScrollableContentOffsetY,animateToPosition]);return{handleOnStart:handleOnStart,handleOnActive:handleOnActive,handleOnEnd:handleOnEnd};};","map":{"version":3,"names":["_reactNative","require","_reactNativeReanimated","_useBottomSheetInternal","_constants","_clamp","_snapPoint","dismissKeyboard","Keyboard","dismiss","_worklet_224761815507_init_data","code","location","_worklet_15383623779680_init_data","_worklet_902750565366_init_data","useGestureEventsHandlersDefault","exports","_useBottomSheetIntern","useBottomSheetInternal","animatedPosition","animatedSnapPoints","animatedKeyboardState","animatedKeyboardHeight","animatedContainerHeight","animatedScrollableType","animatedHighestSnapPoint","animatedClosedPosition","animatedScrollableContentOffsetY","enableOverDrag","enablePanDownToClose","overDragResistanceFactor","isInTemporaryPosition","isScrollableRefreshable","animateToPosition","stopAnimation","handleOnStart","useWorkletCallback","_f","__","_","context","initialPosition","value","initialKeyboardState","isScrollablePositionLocked","_closure","__initData","__workletHash","handleOnActive","source","_ref","translationY","highestSnapPoint","KEYBOARD_STATE","SHOWN","lowestSnapPoint","GESTURE_SOURCE","SCROLLABLE","negativeScrollableContentOffset","draggedPosition","accumulatedDraggedPosition","clampedPosition","clamp","HANDLE","SCROLLABLE_TYPE","VIEW","resistedPosition","Math","sqrt","handleOnEnd","_ref2","absoluteY","velocityY","isSheetAtHighestSnapPoint","ANIMATION_SOURCE","GESTURE","isScrollable","UNDETERMINED","Platform","OS","WINDOW_HEIGHT","runOnJS","snapPoints","slice","unshift","destinationPoint","snapPoint","wasGestureHandledByScrollView"],"sources":["/Users/shayan/workspace/godfather/node_modules/@gorhom/bottom-sheet/lib/module/hooks/useGestureEventsHandlersDefault.tsx"],"sourcesContent":["import { Keyboard, Platform } from 'react-native';\nimport { runOnJS, useWorkletCallback } from 'react-native-reanimated';\nimport { useBottomSheetInternal } from './useBottomSheetInternal';\nimport {\n  ANIMATION_SOURCE,\n  GESTURE_SOURCE,\n  KEYBOARD_STATE,\n  SCROLLABLE_TYPE,\n  WINDOW_HEIGHT,\n} from '../constants';\nimport type {\n  GestureEventsHandlersHookType,\n  GestureEventHandlerCallbackType,\n} from '../types';\nimport { clamp } from '../utilities/clamp';\nimport { snapPoint } from '../utilities/snapPoint';\n\ntype GestureEventContextType = {\n  initialPosition: number;\n  initialKeyboardState: KEYBOARD_STATE;\n  isScrollablePositionLocked: boolean;\n};\n\nconst dismissKeyboard = Keyboard.dismiss;\n\nexport const useGestureEventsHandlersDefault: GestureEventsHandlersHookType =\n  () => {\n    //#region variables\n    const {\n      animatedPosition,\n      animatedSnapPoints,\n      animatedKeyboardState,\n      animatedKeyboardHeight,\n      animatedContainerHeight,\n      animatedScrollableType,\n      animatedHighestSnapPoint,\n      animatedClosedPosition,\n      animatedScrollableContentOffsetY,\n      enableOverDrag,\n      enablePanDownToClose,\n      overDragResistanceFactor,\n      isInTemporaryPosition,\n      isScrollableRefreshable,\n      animateToPosition,\n      stopAnimation,\n    } = useBottomSheetInternal();\n    //#endregion\n\n    //#region gesture methods\n    const handleOnStart: GestureEventHandlerCallbackType<GestureEventContextType> =\n      useWorkletCallback(\n        function handleOnStart(__, _, context) {\n          // cancel current animation\n          stopAnimation();\n\n          // store current animated position\n          context.initialPosition = animatedPosition.value;\n          context.initialKeyboardState = animatedKeyboardState.value;\n\n          /**\n           * if the scrollable content is scrolled, then\n           * we lock the position.\n           */\n          if (animatedScrollableContentOffsetY.value > 0) {\n            context.isScrollablePositionLocked = true;\n          }\n        },\n        [\n          stopAnimation,\n          animatedPosition,\n          animatedKeyboardState,\n          animatedScrollableContentOffsetY,\n        ]\n      );\n    const handleOnActive: GestureEventHandlerCallbackType<GestureEventContextType> =\n      useWorkletCallback(\n        function handleOnActive(source, { translationY }, context) {\n          let highestSnapPoint = animatedHighestSnapPoint.value;\n\n          /**\n           * if keyboard is shown, then we set the highest point to the current\n           * position which includes the keyboard height.\n           */\n          if (\n            isInTemporaryPosition.value &&\n            context.initialKeyboardState === KEYBOARD_STATE.SHOWN\n          ) {\n            highestSnapPoint = context.initialPosition;\n          }\n\n          /**\n           * if current position is out of provided `snapPoints` and smaller then\n           * highest snap pont, then we set the highest point to the current position.\n           */\n          if (\n            isInTemporaryPosition.value &&\n            context.initialPosition < highestSnapPoint\n          ) {\n            highestSnapPoint = context.initialPosition;\n          }\n\n          const lowestSnapPoint = enablePanDownToClose\n            ? animatedContainerHeight.value\n            : animatedSnapPoints.value[0];\n\n          /**\n           * if scrollable is refreshable and sheet position at the highest\n           * point, then do not interact with current gesture.\n           */\n          if (\n            source === GESTURE_SOURCE.SCROLLABLE &&\n            isScrollableRefreshable.value &&\n            animatedPosition.value === highestSnapPoint\n          ) {\n            return;\n          }\n\n          /**\n           * a negative scrollable content offset to be subtracted from accumulated\n           * current position and gesture translation Y to allow user to drag the sheet,\n           * when scrollable position at the top.\n           * a negative scrollable content offset when the scrollable is not locked.\n           */\n          const negativeScrollableContentOffset =\n            (context.initialPosition === highestSnapPoint &&\n              source === GESTURE_SOURCE.SCROLLABLE) ||\n            !context.isScrollablePositionLocked\n              ? animatedScrollableContentOffsetY.value * -1\n              : 0;\n\n          /**\n           * an accumulated value of starting position with gesture translation y.\n           */\n          const draggedPosition = context.initialPosition + translationY;\n\n          /**\n           * an accumulated value of dragged position and negative scrollable content offset,\n           * this will insure locking sheet position when user is scrolling the scrollable until,\n           * they reach to the top of the scrollable.\n           */\n          const accumulatedDraggedPosition =\n            draggedPosition + negativeScrollableContentOffset;\n\n          /**\n           * a clamped value of the accumulated dragged position, to insure keeping the dragged\n           * position between the highest and lowest snap points.\n           */\n          const clampedPosition = clamp(\n            accumulatedDraggedPosition,\n            highestSnapPoint,\n            lowestSnapPoint\n          );\n\n          /**\n           * if scrollable position is locked and the animated position\n           * reaches the highest point, then we unlock the scrollable position.\n           */\n          if (\n            context.isScrollablePositionLocked &&\n            source === GESTURE_SOURCE.SCROLLABLE &&\n            animatedPosition.value === highestSnapPoint\n          ) {\n            context.isScrollablePositionLocked = false;\n          }\n\n          /**\n           * over-drag implementation.\n           */\n          if (enableOverDrag) {\n            if (\n              (source === GESTURE_SOURCE.HANDLE ||\n                animatedScrollableType.value === SCROLLABLE_TYPE.VIEW) &&\n              draggedPosition < highestSnapPoint\n            ) {\n              const resistedPosition =\n                highestSnapPoint -\n                Math.sqrt(1 + (highestSnapPoint - draggedPosition)) *\n                  overDragResistanceFactor;\n              animatedPosition.value = resistedPosition;\n              return;\n            }\n\n            if (\n              source === GESTURE_SOURCE.HANDLE &&\n              draggedPosition > lowestSnapPoint\n            ) {\n              const resistedPosition =\n                lowestSnapPoint +\n                Math.sqrt(1 + (draggedPosition - lowestSnapPoint)) *\n                  overDragResistanceFactor;\n              animatedPosition.value = resistedPosition;\n              return;\n            }\n\n            if (\n              source === GESTURE_SOURCE.SCROLLABLE &&\n              draggedPosition + negativeScrollableContentOffset >\n                lowestSnapPoint\n            ) {\n              const resistedPosition =\n                lowestSnapPoint +\n                Math.sqrt(\n                  1 +\n                    (draggedPosition +\n                      negativeScrollableContentOffset -\n                      lowestSnapPoint)\n                ) *\n                  overDragResistanceFactor;\n              animatedPosition.value = resistedPosition;\n              return;\n            }\n          }\n\n          animatedPosition.value = clampedPosition;\n        },\n        [\n          enableOverDrag,\n          enablePanDownToClose,\n          overDragResistanceFactor,\n          isInTemporaryPosition,\n          isScrollableRefreshable,\n          animatedHighestSnapPoint,\n          animatedContainerHeight,\n          animatedSnapPoints,\n          animatedPosition,\n          animatedScrollableType,\n          animatedScrollableContentOffsetY,\n        ]\n      );\n    const handleOnEnd: GestureEventHandlerCallbackType<GestureEventContextType> =\n      useWorkletCallback(\n        function handleOnEnd(\n          source,\n          { translationY, absoluteY, velocityY },\n          context\n        ) {\n          const highestSnapPoint = animatedHighestSnapPoint.value;\n          const isSheetAtHighestSnapPoint =\n            animatedPosition.value === highestSnapPoint;\n\n          /**\n           * if scrollable is refreshable and sheet position at the highest\n           * point, then do not interact with current gesture.\n           */\n          if (\n            source === GESTURE_SOURCE.SCROLLABLE &&\n            isScrollableRefreshable.value &&\n            isSheetAtHighestSnapPoint\n          ) {\n            return;\n          }\n\n          /**\n           * if the sheet is in a temporary position and the gesture ended above\n           * the current position, then we snap back to the temporary position.\n           */\n          if (\n            isInTemporaryPosition.value &&\n            context.initialPosition >= animatedPosition.value\n          ) {\n            if (context.initialPosition > animatedPosition.value) {\n              animateToPosition(\n                context.initialPosition,\n                ANIMATION_SOURCE.GESTURE,\n                velocityY / 2\n              );\n            }\n            return;\n          }\n\n          /**\n           * close keyboard if current position is below the recorded\n           * start position and keyboard still shown.\n           */\n          const isScrollable =\n            animatedScrollableType.value !== SCROLLABLE_TYPE.UNDETERMINED &&\n            animatedScrollableType.value !== SCROLLABLE_TYPE.VIEW;\n\n          /**\n           * if keyboard is shown and the sheet is dragged down,\n           * then we dismiss the keyboard.\n           */\n          if (\n            context.initialKeyboardState === KEYBOARD_STATE.SHOWN &&\n            animatedPosition.value > context.initialPosition\n          ) {\n            /**\n             * if the platform is ios, current content is scrollable and\n             * the end touch point is below the keyboard position then\n             * we exit the method.\n             *\n             * because the the keyboard dismiss is interactive in iOS.\n             */\n            if (\n              !(\n                Platform.OS === 'ios' &&\n                isScrollable &&\n                absoluteY > WINDOW_HEIGHT - animatedKeyboardHeight.value\n              )\n            ) {\n              runOnJS(dismissKeyboard)();\n            }\n          }\n\n          /**\n           * reset isInTemporaryPosition value\n           */\n          if (isInTemporaryPosition.value) {\n            isInTemporaryPosition.value = false;\n          }\n\n          /**\n           * clone snap points array, and insert the container height\n           * if pan down to close is enabled.\n           */\n          const snapPoints = animatedSnapPoints.value.slice();\n          if (enablePanDownToClose) {\n            snapPoints.unshift(animatedClosedPosition.value);\n          }\n\n          /**\n           * calculate the destination point, using redash.\n           */\n          const destinationPoint = snapPoint(\n            translationY + context.initialPosition,\n            velocityY,\n            snapPoints\n          );\n\n          /**\n           * if destination point is the same as the current position,\n           * then no need to perform animation.\n           */\n          if (destinationPoint === animatedPosition.value) {\n            return;\n          }\n\n          const wasGestureHandledByScrollView =\n            source === GESTURE_SOURCE.SCROLLABLE &&\n            animatedScrollableContentOffsetY.value > 0;\n          /**\n           * prevents snapping from top to middle / bottom with repeated interrupted scrolls\n           */\n          if (wasGestureHandledByScrollView && isSheetAtHighestSnapPoint) {\n            return;\n          }\n\n          animateToPosition(\n            destinationPoint,\n            ANIMATION_SOURCE.GESTURE,\n            velocityY / 2\n          );\n        },\n        [\n          enablePanDownToClose,\n          isInTemporaryPosition,\n          isScrollableRefreshable,\n          animatedClosedPosition,\n          animatedHighestSnapPoint,\n          animatedKeyboardHeight,\n          animatedPosition,\n          animatedScrollableType,\n          animatedSnapPoints,\n          animatedScrollableContentOffsetY,\n          animateToPosition,\n        ]\n      );\n    //#endregion\n\n    return {\n      handleOnStart,\n      handleOnActive,\n      handleOnEnd,\n    };\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}