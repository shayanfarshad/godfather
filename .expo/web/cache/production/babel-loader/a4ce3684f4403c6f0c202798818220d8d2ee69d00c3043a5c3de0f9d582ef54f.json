{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var NodeManager=exports.default=function(){function NodeManager(){(0,_classCallCheck2.default)(this,NodeManager);}(0,_createClass2.default)(NodeManager,null,[{key:\"getHandler\",value:function getHandler(tag){if(tag in this.gestures){return this.gestures[tag];}throw new Error(\"No handler for tag \"+tag);}},{key:\"createGestureHandler\",value:function createGestureHandler(handlerTag,handler){if(handlerTag in this.gestures){throw new Error(\"Handler with tag \"+handlerTag+\" already exists\");}this.gestures[handlerTag]=handler;this.gestures[handlerTag].setTag(handlerTag);}},{key:\"dropGestureHandler\",value:function dropGestureHandler(handlerTag){if(!(handlerTag in this.gestures)){return;}delete this.gestures[handlerTag];}},{key:\"getNodes\",value:function getNodes(){return(0,_extends2.default)({},this.gestures);}}]);return NodeManager;}();_defineProperty(NodeManager,\"gestures\",{});","map":{"version":3,"names":["NodeManager","exports","default","_classCallCheck2","_createClass2","key","value","getHandler","tag","gestures","Error","createGestureHandler","handlerTag","handler","setTag","dropGestureHandler","getNodes","_extends2"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/web/tools/NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../../typeUtils';\nimport { Gestures } from '../../RNGestureHandlerModule.web';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport default abstract class NodeManager {\n  private static gestures: Record<\n    number,\n    InstanceType<ValueOf<typeof Gestures>>\n  > = {};\n\n  public static getHandler(tag: number) {\n    if (tag in this.gestures) {\n      return this.gestures[tag];\n    }\n\n    throw new Error(`No handler for tag ${tag}`);\n  }\n\n  public static createGestureHandler(\n    handlerTag: number,\n    handler: InstanceType<ValueOf<typeof Gestures>>\n  ): void {\n    if (handlerTag in this.gestures) {\n      throw new Error(`Handler with tag ${handlerTag} already exists`);\n    }\n\n    this.gestures[handlerTag] = handler;\n    this.gestures[handlerTag].setTag(handlerTag);\n  }\n\n  public static dropGestureHandler(handlerTag: number): void {\n    if (!(handlerTag in this.gestures)) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete this.gestures[handlerTag];\n  }\n\n  public static getNodes() {\n    return { ...this.gestures };\n  }\n}\n"],"mappings":"kmBAI8B,CAAAA,WAAf,CAAAC,OAAA,CAAAC,OAAA,qBAAAF,YAAA,KAAAG,gBAAA,CAAAD,OAAA,OAAAF,WAAA,MAAAI,aAAA,CAAAF,OAAA,EAAAF,WAAA,QAAAK,GAAA,cAAAC,KAAA,CAMW,SAAAC,WAACC,GAAD,CAAc,CACpC,GAAIA,GAAG,GAAI,MAAKC,QAAhB,CAA0B,CACxB,MAAO,MAAKA,QAAL,CAAcD,GAAd,CAAP,CACD,CAED,KAAM,IAAI,CAAAE,KAAJ,uBAAgCF,GAAhC,CAAN,CACD,IAAAH,GAAA,wBAAAC,KAAA,CAEiC,SAAAK,qBAChCC,UADgC,CAEhCC,OAFgC,CAG1B,CACN,GAAID,UAAU,GAAI,MAAKH,QAAvB,CAAiC,CAC/B,KAAM,IAAI,CAAAC,KAAJ,qBAA8BE,UAAW,kBAAzC,CAAN,CACD,CAED,KAAKH,QAAL,CAAcG,UAAd,EAA4BC,OAA5B,CACA,KAAKJ,QAAL,CAAcG,UAAd,EAA0BE,MAA1B,CAAiCF,UAAjC,EACD,IAAAP,GAAA,sBAAAC,KAAA,CAE+B,SAAAS,mBAACH,UAAD,CAA2B,CACzD,GAAI,EAAEA,UAAU,GAAI,MAAKH,QAArB,CAAJ,CAAoC,CAClC,OACD,CAGD,MAAO,MAAKA,QAAL,CAAcG,UAAd,CAAP,CACD,IAAAP,GAAA,YAAAC,KAAA,CAEqB,SAAAU,SAAA,CAAG,CACvB,SAAAC,SAAA,CAAAf,OAAA,KAAY,KAAKO,QAAA,EAClB,YAAAT,WAAA,K,gBArC2BA,W,YAIxB,E"},"metadata":{},"sourceType":"script","externalDependencies":[]}