{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.baseGestureHandlerWithMonitorProps=exports.baseGestureHandlerProps=void 0;exports.filterConfig=filterConfig;exports.findNodeHandle=findNodeHandle;exports.scheduleFlushOperations=scheduleFlushOperations;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reactNative=require(\"react-native\");var _handlersRegistry=require(\"./handlersRegistry\");var _utils=require(\"../utils\");var _RNGestureHandlerModule=_interopRequireDefault(require(\"../RNGestureHandlerModule\"));function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}var commonProps=['id','enabled','shouldCancelWhenOutside','hitSlop','cancelsTouchesInView','userSelect'];var componentInteractionProps=['waitFor','simultaneousHandlers'];var baseGestureHandlerProps=exports.baseGestureHandlerProps=[].concat(commonProps,componentInteractionProps,['onBegan','onFailed','onCancelled','onActivated','onEnded','onGestureEvent','onHandlerStateChange']);var baseGestureHandlerWithMonitorProps=exports.baseGestureHandlerWithMonitorProps=[].concat(commonProps,['needsPointerData','manualActivation']);function isConfigParam(param,name){return param!==undefined&&(param!==Object(param)||!('__isNative'in param))&&name!=='onHandlerStateChange'&&name!=='onGestureEvent';}function filterConfig(props,validProps){var defaults=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var filteredConfig=(0,_extends2.default)({},defaults);for(var _iterator=_createForOfIteratorHelperLoose(validProps),_step;!(_step=_iterator()).done;){var key=_step.value;var value=props[key];if(isConfigParam(value,key)){if(key==='simultaneousHandlers'||key==='waitFor'){value=transformIntoHandlerTags(props[key]);}else if(key==='hitSlop'&&typeof value!=='object'){value={top:value,left:value,bottom:value,right:value};}filteredConfig[key]=value;}}return filteredConfig;}function transformIntoHandlerTags(handlerIDs){handlerIDs=(0,_utils.toArray)(handlerIDs);if(_reactNative.Platform.OS==='web'){return handlerIDs.map(function(_ref){var current=_ref.current;return current;}).filter(function(handle){return handle;});}return handlerIDs.map(function(handlerID){var _handlerID$current;return _handlersRegistry.handlerIDToTag[handlerID]||((_handlerID$current=handlerID.current)===null||_handlerID$current===void 0?void 0:_handlerID$current.handlerTag)||-1;}).filter(function(handlerTag){return handlerTag>0;});}function findNodeHandle(node){if(_reactNative.Platform.OS==='web'){return node;}return(0,_reactNative.findNodeHandle)(node);}var flushOperationsScheduled=false;function scheduleFlushOperations(){if(!flushOperationsScheduled){flushOperationsScheduled=true;queueMicrotask(function(){_RNGestureHandlerModule.default.flushOperations();flushOperationsScheduled=false;});}}","map":{"version":3,"names":["_reactNative","require","_handlersRegistry","_utils","_RNGestureHandlerModule","_interopRequireDefault","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","commonProps","componentInteractionProps","baseGestureHandlerProps","exports","concat","baseGestureHandlerWithMonitorProps","isConfigParam","param","undefined","filterConfig","props","validProps","defaults","arguments","filteredConfig","_extends2","default","_iterator","_step","key","transformIntoHandlerTags","top","left","bottom","right","handlerIDs","toArray","Platform","OS","map","_ref","current","filter","handle","handlerID","_handlerID$current","handlerIDToTag","handlerTag","findNodeHandle","node","findNodeHandleRN","flushOperationsScheduled","scheduleFlushOperations","queueMicrotask","RNGestureHandlerModule","flushOperations"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-gesture-handler/lib/module/handlers/gestureHandlerCommon.ts"],"sourcesContent":["// Previous types exported gesture handlers as classes which creates an interface and variable, both named the same as class.\n// Without those types, we'd introduce breaking change, forcing users to prefix every handler type specification with typeof\n// e.g. React.createRef<TapGestureHandler> -> React.createRef<typeof TapGestureHandler>.\n// See https://www.typescriptlang.org/docs/handbook/classes.html#constructor-functions for reference.\nimport * as React from 'react';\nimport { Platform, findNodeHandle as findNodeHandleRN } from 'react-native';\n\nimport { State } from '../State';\nimport { TouchEventType } from '../TouchEventType';\nimport { ValueOf } from '../typeUtils';\nimport { handlerIDToTag } from './handlersRegistry';\nimport { toArray } from '../utils';\nimport RNGestureHandlerModule from '../RNGestureHandlerModule';\n\nconst commonProps = [\n  'id',\n  'enabled',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'cancelsTouchesInView',\n  'userSelect',\n] as const;\n\nconst componentInteractionProps = ['waitFor', 'simultaneousHandlers'] as const;\n\nexport const baseGestureHandlerProps = [\n  ...commonProps,\n  ...componentInteractionProps,\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'onGestureEvent',\n  'onHandlerStateChange',\n] as const;\n\nexport const baseGestureHandlerWithMonitorProps = [\n  ...commonProps,\n  'needsPointerData',\n  'manualActivation',\n];\n\nexport interface GestureEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n}\nexport interface HandlerStateChangeEventPayload extends GestureEventPayload {\n  oldState: ValueOf<typeof State>;\n}\n\nexport type HitSlop =\n  | number\n  | Partial<\n      Record<\n        'left' | 'right' | 'top' | 'bottom' | 'vertical' | 'horizontal',\n        number\n      >\n    >\n  | Record<'width' | 'left', number>\n  | Record<'width' | 'right', number>\n  | Record<'height' | 'top', number>\n  | Record<'height' | 'bottom', number>;\n\nexport type UserSelect = 'none' | 'auto' | 'text';\n\n//TODO(TS) events in handlers\n\nexport interface GestureEvent<ExtraEventPayloadT = Record<string, unknown>> {\n  nativeEvent: Readonly<GestureEventPayload & ExtraEventPayloadT>;\n}\nexport interface HandlerStateChangeEvent<\n  ExtraEventPayloadT = Record<string, unknown>\n> {\n  nativeEvent: Readonly<HandlerStateChangeEventPayload & ExtraEventPayloadT>;\n}\n\nexport type TouchData = {\n  id: number;\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport type GestureTouchEvent = {\n  handlerTag: number;\n  numberOfTouches: number;\n  state: ValueOf<typeof State>;\n  eventType: TouchEventType;\n  allTouches: TouchData[];\n  changedTouches: TouchData[];\n};\n\nexport type GestureUpdateEvent<GestureEventPayloadT = Record<string, unknown>> =\n  GestureEventPayload & GestureEventPayloadT;\n\nexport type GestureStateChangeEvent<\n  GestureStateChangeEventPayloadT = Record<string, unknown>\n> = HandlerStateChangeEventPayload & GestureStateChangeEventPayloadT;\n\nexport type CommonGestureConfig = {\n  enabled?: boolean;\n  shouldCancelWhenOutside?: boolean;\n  hitSlop?: HitSlop;\n  userSelect?: UserSelect;\n};\n\n// Events payloads are types instead of interfaces due to TS limitation.\n// See https://github.com/microsoft/TypeScript/issues/15300 for more info.\nexport type BaseGestureHandlerProps<\n  ExtraEventPayloadT extends Record<string, unknown> = Record<string, unknown>\n> = CommonGestureConfig & {\n  id?: string;\n  waitFor?: React.Ref<unknown> | React.Ref<unknown>[];\n  simultaneousHandlers?: React.Ref<unknown> | React.Ref<unknown>[];\n  testID?: string;\n  cancelsTouchesInView?: boolean;\n  // TODO(TS) - fix event types\n  onBegan?: (event: HandlerStateChangeEvent) => void;\n  onFailed?: (event: HandlerStateChangeEvent) => void;\n  onCancelled?: (event: HandlerStateChangeEvent) => void;\n  onActivated?: (event: HandlerStateChangeEvent) => void;\n  onEnded?: (event: HandlerStateChangeEvent) => void;\n\n  //TODO(TS) consider using NativeSyntheticEvent\n  onGestureEvent?: (event: GestureEvent<ExtraEventPayloadT>) => void;\n  onHandlerStateChange?: (\n    event: HandlerStateChangeEvent<ExtraEventPayloadT>\n  ) => void;\n  // implicit `children` prop has been removed in @types/react^18.0.0\n  children?: React.ReactNode;\n};\n\nfunction isConfigParam(param: unknown, name: string) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) ||\n      !('__isNative' in (param as Record<string, unknown>))) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nexport function filterConfig(\n  props: Record<string, unknown>,\n  validProps: string[],\n  defaults: Record<string, unknown> = {}\n) {\n  const filteredConfig = { ...defaults };\n  for (const key of validProps) {\n    let value = props[key];\n    if (isConfigParam(value, key)) {\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop' && typeof value !== 'object') {\n        value = { top: value, left: value, bottom: value, right: value };\n      }\n      filteredConfig[key] = value;\n    }\n  }\n  return filteredConfig;\n}\n\nfunction transformIntoHandlerTags(handlerIDs: any) {\n  handlerIDs = toArray(handlerIDs);\n\n  if (Platform.OS === 'web') {\n    return handlerIDs\n      .map(({ current }: { current: any }) => current)\n      .filter((handle: any) => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      (handlerID: any) =>\n        handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1\n    )\n    .filter((handlerTag: number) => handlerTag > 0);\n}\n\nexport function findNodeHandle(\n  node: null | number | React.Component<any, any> | React.ComponentClass<any>\n): null | number | React.Component<any, any> | React.ComponentClass<any> {\n  if (Platform.OS === 'web') {\n    return node;\n  }\n  return findNodeHandleRN(node);\n}\n\nlet flushOperationsScheduled = false;\n\nexport function scheduleFlushOperations() {\n  if (!flushOperationsScheduled) {\n    flushOperationsScheduled = true;\n    queueMicrotask(() => {\n      RNGestureHandlerModule.flushOperations();\n\n      flushOperationsScheduled = false;\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}