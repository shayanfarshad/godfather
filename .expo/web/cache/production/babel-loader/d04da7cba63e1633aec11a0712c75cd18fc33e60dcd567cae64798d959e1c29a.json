{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _reactDom=require(\"react-dom\");var findNodeHandle=function findNodeHandle(component){var node;try{node=(0,_reactDom.findDOMNode)(component);}catch(e){}return node;};var _default=exports.default=findNodeHandle;","map":{"version":3,"names":["_reactDom","require","findNodeHandle","component","node","findDOMNode","e","_default","exports","default"],"sources":["/Users/shayan/workspace/godfather/node_modules/react-native-web/dist/exports/findNodeHandle/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { findDOMNode } from 'react-dom';\n\n/**\n * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.\n * You should use ref properties on the component instead.\n */\nvar findNodeHandle = component => {\n  var node;\n  try {\n    node = findDOMNode(component);\n  } catch (e) {}\n  return node;\n};\nexport default findNodeHandle;"],"mappings":"gFAUA,IAAAA,SAAA,CAAAC,OAAA,cAMA,GAAI,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGC,SAAS,CAAI,CAChC,GAAI,CAAAC,IAAI,CACR,GAAI,CACFA,IAAI,CAAG,GAAAC,qBAAW,EAACF,SAAS,CAAC,CAC/B,CAAE,MAAOG,CAAC,CAAE,CAAC,CACb,MAAO,CAAAF,IAAI,CACb,CAAC,CAAC,IAAAG,QAAA,CAAAC,OAAA,CAAAC,OAAA,CACaP,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}